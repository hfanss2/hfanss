<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>幻凡ss</title>
  
  
  <link href="https://hfanss.com/atom.xml" rel="self"/>
  
  <link href="https://hfanss.com/"/>
  <updated>2025-09-07T01:15:39.171Z</updated>
  <id>https://hfanss.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>github在线图床</title>
    <link href="https://hfanss.com/2025/github%E5%9C%A8%E7%BA%BF%E5%9B%BE%E5%BA%8A.html"/>
    <id>https://hfanss.com/2025/github%E5%9C%A8%E7%BA%BF%E5%9B%BE%E5%BA%8A.html</id>
    <published>2025-07-03T01:23:22.000Z</published>
    <updated>2025-09-07T01:15:39.171Z</updated>
    
    <content type="html"><![CDATA[<p>github做的图床，原理是利用github API实现的在线上传，就一个页面，css和js都是集成在页面，相关信息保存在浏览器缓存中，配置一下即可使用</p><p>效果演示：</p><p><a href="https://pic.hfanss.com/" target="_blank">github在线图床</a></p><p>打开网站填写下列信息</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/126.jpg" alt=""></p><p>github用户名：用户名</p><p>仓库名：做图床的专用仓库的名称</p><p>分支名称：分支名称</p><p>存储路径：上传到的目标仓库位置的路径，不填则上传到根目录，填一个不存在的则会新建，开头和结尾不需要/分割，</p><p>github访问令牌：token,没有的话可以点击创建令牌新建</p><p>点击保存配置是将配置保存在浏览器中，清除浏览器缓存后必须重新设置</p><p>上传成功后是这样，图片会重新命名，会默认返回jsdelivr的CDN地址，并且自动复制在剪切板，</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/127.jpg" alt=""></p><p>想要使用该图床需具备下面要求</p><p>1.一个专门用作图床的github仓库</p><p>随便创建一个就行，不用开启pages,专门用来做图床使用</p><p>2.创建1个github token</p><p>创建一个token,权限可以自己斟酌，小白可以全选上</p><p>3.在页面将信息保存即可使用</p><p>在网站填写信息保存，即可开启上传之旅</p><p>支持自定义，fork本项目至自己仓库，使用netlify部署，并搭配自定义域名即可实现自己的在线图床，参考文章：<a href="https://hfanss.com/2025/github%20pages%E4%BD%BF%E7%94%A8%E5%85%8D%E8%B4%B9cdn%E5%8A%A0%E9%80%9F-netlify" target="_blank">netlify加速github pages</a></p><p>项目资源全部集成在html中，fork后可自行修改，比如利用cloud flare的数据库做成可登录的，或者设置密码只能本人使用</p><p>等等。。。相信广大网友的diy能力应该很强</p><p>项目地址：<a href="https://github.com/hfanss2/pic-upload" target="_blank">github地址</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;github做的图床，原理是利用github API实现的在线上传，就一个页面，css和js都是集成在页面，相关信息保存在浏览器缓存中，配置一下即可使用&lt;/p&gt;
&lt;p&gt;效果演示：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://pic.hfanss.com/&quot; target</summary>
      
    
    
    
    <category term="免费图床" scheme="https://hfanss.com/categories/%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8A/"/>
    
    
    <category term="github图床" scheme="https://hfanss.com/tags/github%E5%9B%BE%E5%BA%8A/"/>
    
    <category term="在线图床" scheme="https://hfanss.com/tags/%E5%9C%A8%E7%BA%BF%E5%9B%BE%E5%BA%8A/"/>
    
    <category term="在线github图床" scheme="https://hfanss.com/tags/%E5%9C%A8%E7%BA%BFgithub%E5%9B%BE%E5%BA%8A/"/>
    
    <category term="免费图床" scheme="https://hfanss.com/tags/%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>github pages使用免费CDN加速-netlify</title>
    <link href="https://hfanss.com/2025/github%20pages%E4%BD%BF%E7%94%A8%E5%85%8D%E8%B4%B9CDN%E5%8A%A0%E9%80%9F-netlify.html"/>
    <id>https://hfanss.com/2025/github%20pages%E4%BD%BF%E7%94%A8%E5%85%8D%E8%B4%B9CDN%E5%8A%A0%E9%80%9F-netlify.html</id>
    <published>2025-07-01T03:31:22.000Z</published>
    <updated>2025-09-07T01:15:39.171Z</updated>
    
    <content type="html"><![CDATA[<p>github pages大家都知道，很多人用它来做个人博客，但是github pages在国内的访问速度很拉跨，经常访问不正常，对github pages加速的方式有很多种，今天介绍一下netlify，优点是，一键关联github项目，github更新，会自动部署，方便快捷，且免费，速度也很不错</p><p>Netlify是什么呢？</p><p>‌静态网站托管‌：Netlify专为HTML/CSS/JS等静态资源设计，支持主流前端框架（如React、Vue、Hugo等），无需服务器运维即可实现全球CDN加速。‌‌<br>1‌.自动化工作流‌：<br>集成GitHub/GitLab/Bitbucket仓库，代码推送后自动触发构建与部署。‌‌<br>2.提供自定义构建命令（如npm run build）和输出目录配置。‌‌<br>3‌.免费基础服务‌：<br>包含100GB月流量、300分钟构建时长及免费HTTPS证书。‌‌<br>4.提供*.netlify.app子域名，支持绑定自定义域名-注意：<strong>不用备案！！！</strong></p><p>看看这介绍，是不是跟github pages特别搭配，100GB流量对于个人而言完全使用不完，如果把图片再单独拆出来，光文字资源来说，非常绰绰有余了。至于图床可以参考这个文章，也是免费的，<a href="https://hfanss.com/2025/github%20%E5%9B%BE%E5%BA%8A%E4%BD%BF%E7%94%A8%E5%85%8D%E8%B4%B9cdn%E5%8A%A0%E9%80%9F-jsdelivr">github图床使用CDN加速</a></p><h2 id="一、部署github-pages"><a href="#一、部署github-pages" class="headerlink" title="一、部署github pages"></a>一、部署github pages</h2><p>静态博客怎么部署在github pages上就不多赘述，很多参考资料。</p><h2 id="二、配置netlify"><a href="#二、配置netlify" class="headerlink" title="二、配置netlify"></a>二、配置netlify</h2><h3 id="1-登录netlify"><a href="#1-登录netlify" class="headerlink" title="1.登录netlify"></a>1.登录netlify</h3><p>使用github账号登录 <a href="https://app.netlify.com/">netlify</a></p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/107.jpg" alt=""></p><p>点击右侧新建项目-Add new project</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/108.jpg" alt=""></p><h3 id="2-选择github仓库"><a href="#2-选择github仓库" class="headerlink" title="2.选择github仓库"></a>2.选择github仓库</h3><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/109.png" alt=""></p><p>选择具体的仓库</p><p>第一个是选择netlify可用github所有仓库，第二个是选择netlify只能使用github指定的库，暂默认第二个我们github pages仓库即可</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/110.jpg" alt=""></p><h3 id="3-部署"><a href="#3-部署" class="headerlink" title="3.部署"></a>3.部署</h3><p>Team:默认项目名</p><p>project name:默认项目名，也可自定义，建议项目名，影响生成的默认域名</p><p>往下拉：</p><p>branch to deploy: main   部署分支，github默认main分支，可以改其他</p><p>剩余的可不用填</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/111.jpg" alt=""></p><p>点击最下面 Deploy 项目名</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/112.jpg" alt=""></p><p>部署成功后显示下图</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/113.jpg" alt=""></p><p>点击图中标识1的位置，可以简单预览下，没问题的话就可以了</p><p>到这一步其实已经结束了，但是有自定义域名的可以继续往下看</p><h3 id="4-自定义域名"><a href="#4-自定义域名" class="headerlink" title="4.自定义域名"></a>4.自定义域名</h3><p>点击上图中标识2的位置，右侧点击Add a domin-Add a domain you already own（添加一个已经拥有的域名）</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/115.jpg" alt=""></p><p>点击验证 verify</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/116.jpg" alt=""></p><p>然后会让你去验证域名，因为我已经验证过了，所以没法截图，大概意思就是让你在域名提供商那里去首先验证下该域名是自己的，需要添加个一串数值指向到子域名，参考下图</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/117.jpg" alt=""></p><p>验证好之后，就直接将域名指向它指定的地址就等待就行了，参考下图</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/118.jpg" alt=""></p><p>验证好之后是这样的，参考下图，就是红框内没有验证DNS的字样，并且左边域名也变绿就可以了</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/119.jpg" alt=""></p><p>至于https的ssl证书，有netlify自动配置，刚添加完域名后，它会自动配置ssl证书，参考下图</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/120.jpg" alt=""></p><p>上图这种就是正在配置证书，时间可能久一点，需要10-20分钟左右</p><p>配置证书成功后是这样的，显示对号就是OK的，下面domains那里就是对应的自己的自定义域名，时间是3个月，但是到期后它会自动续发ssl证书，不用担心。</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/121.jpg" alt=""></p><p>OK，大功告成，现在就可以大胆的访问，不用担心github pages访问不正常的情况了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;github pages大家都知道，很多人用它来做个人博客，但是github pages在国内的访问速度很拉跨，经常访问不正常，对github pages加速的方式有很多种，今天介绍一下netlify，优点是，一键关联github项目，github更新，会自动部署，方便快捷</summary>
      
    
    
    
    <category term="github pages" scheme="https://hfanss.com/categories/github-pages/"/>
    
    
    <category term="github" scheme="https://hfanss.com/tags/github/"/>
    
    <category term="github pages" scheme="https://hfanss.com/tags/github-pages/"/>
    
    <category term="github CDN" scheme="https://hfanss.com/tags/github-CDN/"/>
    
    <category term="github netlify" scheme="https://hfanss.com/tags/github-netlify/"/>
    
  </entry>
  
  <entry>
    <title>github 图床使用免费CDN加速-jsdelivr</title>
    <link href="https://hfanss.com/2025/github%20%E5%9B%BE%E5%BA%8A%E4%BD%BF%E7%94%A8%E5%85%8D%E8%B4%B9CDN%E5%8A%A0%E9%80%9F-jsdelivr.html"/>
    <id>https://hfanss.com/2025/github%20%E5%9B%BE%E5%BA%8A%E4%BD%BF%E7%94%A8%E5%85%8D%E8%B4%B9CDN%E5%8A%A0%E9%80%9F-jsdelivr.html</id>
    <published>2025-06-25T09:52:22.000Z</published>
    <updated>2025-09-07T01:15:39.171Z</updated>
    
    <content type="html"><![CDATA[<p>github做图床大部分人都知道，但是国内访问速度不稳定，所以使用jsdelivr加速。</p><p>jsdelivr是什么呢？它是一个免费、快速和可信赖的CDN加速服务，直接集成在github中的，无需额外操作即可使用。</p><p>本文分两部份，最终实现的效果是：</p><p>在本地文件夹中某图片上点击鼠标右键，选中 上传至github图床，稍等片刻，在需要使用的地方直接Ctrl+v粘贴即可。</p><h2 id="一、怎么使用jsdelivr"><a href="#一、怎么使用jsdelivr" class="headerlink" title="一、怎么使用jsdelivr"></a>一、怎么使用jsdelivr</h2><h2 id="二、通过脚本一键上传图片至github，并返回地址到粘贴板"><a href="#二、通过脚本一键上传图片至github，并返回地址到粘贴板" class="headerlink" title="二、通过脚本一键上传图片至github，并返回地址到粘贴板"></a>二、通过脚本一键上传图片至github，并返回地址到粘贴板</h2><p>先来说第一部分</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.在github上创建一个项目，githubpic,公开项目</span><br><span class="line">2.随便上传一张图片xx.jpg</span><br><span class="line">3.访问CDN地址，第一个老是失联，目前用第二个</span><br><span class="line">https://cdn.jsdelivr.net/gh/github用户名/仓库名@master/xx.jpg</span><br><span class="line">https://gcore.jsdelivr.net/gh/github用户名/仓库名@master/xx.jpg</span><br><span class="line"></span><br><span class="line">这里注意一下，@master是jsdelivr默认的版本，不跟github的走，即github现在默认创建的原始分支是main(早前是master),访问CDN的时候还是@master</span><br></pre></td></tr></table></figure><p>这一部分结束，基本上就算作使用了CDN了，但我们日常操作肯定不会这么麻烦的去传，所以这里我结合这篇文章 <a href="https://blog.csdn.net/q2158798/article/details/82354216">个人图床的最简单制作-腾讯云COS</a> 做了个简单的脚本实现一键上传，一键使用</p><p>第二部分，一键上传</p><h3 id="1-github申请ssh密钥"><a href="#1-github申请ssh密钥" class="headerlink" title="1.github申请ssh密钥"></a>1.github申请ssh密钥</h3><p>这一部分网上很多，大家可自行搜索，也可看我找的这篇<a href="https://blog.csdn.net/crasowas/article/details/137211646">文章</a>，最终实现的就是拉取、上传代码都是免密的效果</p><h3 id="2-将刚才的项目githubpic拉取到某个目录-建议D盘-下，使用ssh拉取"><a href="#2-将刚才的项目githubpic拉取到某个目录-建议D盘-下，使用ssh拉取" class="headerlink" title="2.将刚才的项目githubpic拉取到某个目录(建议D盘)下，使用ssh拉取"></a>2.将刚才的项目githubpic拉取到某个目录(建议D盘)下，使用ssh拉取</h3><h3 id="3-处理脚本"><a href="#3-处理脚本" class="headerlink" title="3.处理脚本"></a>3.处理脚本</h3><h4 id="3-1在C盘根目录下创建目录commitGithub，在目录中创建commit-bat，打开编辑，将下列内容粘贴进去保存，注意修改其中的基础目录为仓库本地目录"><a href="#3-1在C盘根目录下创建目录commitGithub，在目录中创建commit-bat，打开编辑，将下列内容粘贴进去保存，注意修改其中的基础目录为仓库本地目录" class="headerlink" title="3.1在C盘根目录下创建目录commitGithub，在目录中创建commit.bat，打开编辑，将下列内容粘贴进去保存，注意修改其中的基础目录为仓库本地目录"></a>3.1在C盘根目录下创建目录commitGithub，在目录中创建commit.bat，打开编辑，将下列内容粘贴进去保存，注意修改其中的基础目录为仓库本地目录</h4><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">chcp</span> <span class="number">65001</span> &gt;<span class="built_in">nul</span>  :: 设置 <span class="built_in">cmd</span> 为 UTF-<span class="number">8</span> 编码</span><br><span class="line">:: =============================================</span><br><span class="line">:: 功能：右键上传图片到 Git (SSH方式) 并返回网络地址</span><br><span class="line">:: 使用方法：右键图片 → 选择&quot;上传到Git&quot;（需先配置SSH密钥）</span><br><span class="line">:: =============================================</span><br><span class="line">::<span class="number">1</span>.设置基础目录-必设,你的仓库拉取下来的本地路径</span><br><span class="line"><span class="built_in">set</span> &quot;base=D:\githubpic&quot;</span><br><span class="line"><span class="built_in">set</span> &quot;image_file=%~<span class="number">1</span>&quot;</span><br><span class="line"></span><br><span class="line">:: <span class="number">2</span>. 进入文件所在目录（确保 Git 命令在正确目录执行）</span><br><span class="line"><span class="built_in">cd</span> /d &quot;%~dp1&quot;</span><br><span class="line"></span><br><span class="line">:: <span class="number">3</span>. 检查是否是 Git 仓库</span><br><span class="line">git rev-parse --is-inside-work-<span class="built_in">tree</span> &gt;<span class="built_in">nul</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">errorlevel</span> <span class="number">1</span> (</span><br><span class="line">    <span class="built_in">echo</span> 错误：当前目录不是 Git 仓库！</span><br><span class="line">    <span class="built_in">pause</span></span><br><span class="line">    <span class="keyword">exit</span> /b</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">:: <span class="number">4</span>. 添加文件到暂存区并提交</span><br><span class="line">git add &quot;<span class="variable">%image_file%</span>&quot;</span><br><span class="line"><span class="built_in">set</span> &quot;commit_message=上传文件: %~nx1&quot;</span><br><span class="line">git commit -m &quot;<span class="variable">%commit_message%</span>&quot;</span><br><span class="line"></span><br><span class="line">:: <span class="number">5</span>. 使用SSH方式推送（不再转换地址，直接推送）:: 如果是其他分支，修改为对应分支名</span><br><span class="line">git push origin main || (</span><br><span class="line">    <span class="built_in">echo</span> ❌ Git 推送失败，错误代码: <span class="variable">%ERRORLEVEL%</span></span><br><span class="line">    <span class="built_in">pause</span></span><br><span class="line">    <span class="keyword">exit</span> /b <span class="variable">%ERRORLEVEL%</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> ✅ Git 推送成功，继续执行后续操作...</span><br><span class="line"></span><br><span class="line">:: --------提交成功，下面开始拼装CDN路径--------</span><br><span class="line">:: <span class="number">6</span>. 获取 Git 远程SSH地址（用于生成网络访问URL）</span><br><span class="line"><span class="keyword">for</span> /f &quot;tokens=*&quot; <span class="variable">%%A</span> <span class="keyword">in</span> (&#x27;git config --get remote.origin.url&#x27;) <span class="keyword">do</span> <span class="built_in">set</span> &quot;git_remote=<span class="variable">%%A</span>&quot;</span><br><span class="line"></span><br><span class="line">:: 检查是否是SSH地址（如 git@github.com:user/repo.git）</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%git_remote%</span> | <span class="built_in">findstr</span> &quot;git@&quot; &gt;<span class="built_in">nul</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">errorlevel</span> <span class="number">1</span> (</span><br><span class="line">    <span class="built_in">echo</span> 错误：当前远程地址不是SSH格式！请使用SSH地址（如 git@github.com:user/repo.git）</span><br><span class="line">    <span class="built_in">pause</span></span><br><span class="line">    <span class="keyword">exit</span> /b</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">::  如果有二级目录，这里会拆分路径</span><br><span class="line"><span class="built_in">set</span> &quot;<span class="built_in">dir</span>=%~dp1&quot;</span><br><span class="line"><span class="keyword">call</span> <span class="built_in">set</span> &quot;p=<span class="variable">%%d</span>ir:<span class="variable">%base%</span>=<span class="variable">%%&quot;</span></span><br><span class="line"><span class="built_in">set</span> &quot;p=<span class="variable">%p:\=/%</span>&quot;</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> &quot;<span class="variable">%p:~0,1%</span>&quot;==&quot;/&quot; <span class="built_in">set</span> &quot;p=/<span class="variable">%p%</span>&quot;</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> &quot;<span class="variable">%p:~-1%</span>&quot;==&quot;/&quot; <span class="built_in">set</span> &quot;p=<span class="variable">%p%</span>/&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> &quot;image_name=%~nx1&quot;</span><br><span class="line"><span class="built_in">set</span> &quot;image_file_path=<span class="variable">%p%</span><span class="variable">%image_name%</span>&quot;</span><br><span class="line"></span><br><span class="line">:: <span class="number">7</span>. 生成网络访问URL（GitHub示例）将SSH地址转换为HTTPS格式的raw地址</span><br><span class="line">:: 替换SSH地址为HTTPS-jsdelivr-CDN地址（GitHub）</span><br><span class="line"><span class="built_in">set</span> &quot;git_remote_https=<span class="variable">%git_remote:git@github.com:=%</span>&quot;</span><br><span class="line">:: jsdelivr的CDN地址经常被污染，特提供几个替代地址，以便不时之需，如果全部被污染，那就没办法了，替换下面的前缀即可</span><br><span class="line">:: https://gcore.jsdelivr.<span class="built_in">net</span>/gh/  短暂测试，这个地址的失联率最低，暂时用这个</span><br><span class="line">:: https://testingcf.jsdelivr.<span class="built_in">net</span>/gh/</span><br><span class="line">:: https://cdn.jsdelivr.<span class="built_in">net</span>/gh/    这个地址经常跳转到 raw.github的网站上，相当于没有启用CDN</span><br><span class="line"><span class="built_in">set</span> &quot;git_remote_https=https://gcore.jsdelivr.<span class="built_in">net</span>/gh/<span class="variable">%git_remote_https:.git=%</span>&quot;</span><br><span class="line">:: 下面这个是开启jsdelivr的CDN加速的地址,目前github最新建的项目是main版本，但是jsdelivr还是默认master版本</span><br><span class="line"><span class="built_in">set</span> &quot;image_network_url=<span class="variable">%git_remote_https%</span>@master<span class="variable">%image_file_path%</span>&quot;</span><br><span class="line">:: <span class="number">8</span>. 输出网络地址</span><br><span class="line"><span class="built_in">echo</span> 图片已上传！网络访问地址：</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%image_network_url%</span></span><br><span class="line"></span><br><span class="line">:: 复制到剪贴板（需 clip 命令支持）</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%image_network_url%</span> | clip</span><br><span class="line"><span class="built_in">echo</span> 地址已复制到剪贴板！</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 已上传完毕，Ctrl + v 即可粘贴，窗口将在<span class="number">5</span>秒后关闭...</span><br><span class="line">timeout /t <span class="number">5</span> /nobreak &gt;<span class="built_in">nul</span></span><br><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure><h4 id="3-2添加右键快捷键"><a href="#3-2添加右键快捷键" class="headerlink" title="3.2添加右键快捷键"></a>3.2添加右键快捷键</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WIN+R调用运行库，输入regedit，会打开注册表编辑器</span><br><span class="line">找到目录 计算机\HKEY_CLASSES_ROOT\*\shell</span><br></pre></td></tr></table></figure><p>在shell上右键新建项：上传github图床，在 上传github图床  上右键新建项：command,如图：</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/001.png" alt=""></p><p>右侧双击默认，修改值为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd.exe /K &quot;C:\commitGithub\commit.bat &quot;%1&quot;&quot;</span><br></pre></td></tr></table></figure><p>至此，大功告成。</p><p>使用的话，把图片拖到本地项目目录下，右键点击  上传github图床  等待命令执行完即可</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/002.png" alt=""></p><p>成功状态：</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/003.png" alt=""></p><p>上传成功的图片大概会有1分钟-5分钟延时。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;github做图床大部分人都知道，但是国内访问速度不稳定，所以使用jsdelivr加速。&lt;/p&gt;
&lt;p&gt;jsdelivr是什么呢？它是一个免费、快速和可信赖的CDN加速服务，直接集成在github中的，无需额外操作即可使用。&lt;/p&gt;
&lt;p&gt;本文分两部份，最终实现的效果是：&lt;</summary>
      
    
    
    
    <category term="免费图床" scheme="https://hfanss.com/categories/%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8A/"/>
    
    
    <category term="github图床" scheme="https://hfanss.com/tags/github%E5%9B%BE%E5%BA%8A/"/>
    
    <category term="免费CDN图床" scheme="https://hfanss.com/tags/%E5%85%8D%E8%B4%B9CDN%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>java实体对象的非空校验</title>
    <link href="https://hfanss.com/2021/java%E5%AE%9E%E4%BD%93%E5%AF%B9%E8%B1%A1%E7%9A%84%E9%9D%9E%E7%A9%BA%E6%A0%A1%E9%AA%8C.html"/>
    <id>https://hfanss.com/2021/java%E5%AE%9E%E4%BD%93%E5%AF%B9%E8%B1%A1%E7%9A%84%E9%9D%9E%E7%A9%BA%E6%A0%A1%E9%AA%8C.html</id>
    <published>2021-07-12T11:31:22.000Z</published>
    <updated>2025-09-07T01:15:39.171Z</updated>
    
    <content type="html"><![CDATA[<p>工作中遇到针对API中存在的实体类的非空校验，如果不封装只能一个一个获取再校验。比较麻烦，所以写了个通用工具类，通过反射去实现效果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 功能描述:对象非空校验</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: hfanss</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2021-07-12 6:52:11 PM</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">vaildate</span><span class="params">(Object vo, List&lt;String&gt; parms)</span></span><br><span class="line">&#123;</span><br><span class="line">Field[] fields = vo.getClass().getDeclaredFields();</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (String validName : parms)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (Field fi : fields)</span><br><span class="line">&#123;</span><br><span class="line">fi.setAccessible(<span class="literal">true</span>);<span class="comment">// 打开私有属性，否则只能获取到共有属性</span></span><br><span class="line"><span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> fi.getName();<span class="comment">// 获取属性名称</span></span><br><span class="line"><span class="keyword">if</span> (!validName.equals(name))</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> fi.get(vo) == <span class="literal">null</span> ? <span class="string">&quot;&quot;</span> : fi.get(vo).toString();</span><br><span class="line"><span class="keyword">if</span> (StringUtils.isBlank(value))</span><br><span class="line">&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;参数：&#123;&quot;</span>+name+<span class="string">&quot;&#125;值为空&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (IllegalArgumentException | IllegalAccessException e)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 记录日志</span></span><br><span class="line">System.out.println(<span class="string">&quot;校验对象失败：&#123;&quot;</span> + vo + <span class="string">&quot;&#125;,异常信息：&#123;&quot;</span> + e + <span class="string">&quot;&#125;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">TestVO</span> <span class="variable">vo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestVO</span>();</span><br><span class="line"></span><br><span class="line">vo.setId(<span class="number">1</span>);</span><br><span class="line"><span class="comment">//vo.setName(&quot;hfanss&quot;);</span></span><br><span class="line">vo.setSf(<span class="string">&quot;111&quot;</span>);</span><br><span class="line">List&lt;String&gt; parms = Arrays.asList(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;number&quot;</span>);</span><br><span class="line">vaildate(vo, parms);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实体类参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> String number;</span><br><span class="line"><span class="keyword">private</span> String sf;</span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line">................................</span><br></pre></td></tr></table></figure><p>测试结果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">控制台输出  </span><br><span class="line">参数：&#123;name&#125;值为空</span><br><span class="line">参数：&#123;number&#125;值为空</span><br></pre></td></tr></table></figure><p>代码地址 ： <a href="https://gitee.com/iyohei/hfanssutils/blob/master/src/main/java/com/hfanss/utils/EntityUtils.java">点我</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;工作中遇到针对API中存在的实体类的非空校验，如果不封装只能一个一个获取再校验。比较麻烦，所以写了个通用工具类，通过反射去实现效果&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;</summary>
      
    
    
    
    <category term="Java" scheme="https://hfanss.com/categories/Java/"/>
    
    
    <category term="Java" scheme="https://hfanss.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>魔都又限行了啊</title>
    <link href="https://hfanss.com/2020/%E9%AD%94%E9%83%BD%E5%8F%88%E9%99%90%E8%A1%8C%E4%BA%86%E5%95%8A.html"/>
    <id>https://hfanss.com/2020/%E9%AD%94%E9%83%BD%E5%8F%88%E9%99%90%E8%A1%8C%E4%BA%86%E5%95%8A.html</id>
    <published>2020-11-11T10:45:22.000Z</published>
    <updated>2025-09-07T01:15:39.171Z</updated>
    
    <content type="html"><![CDATA[<p>伟大的魔都又限行了，外地牌照真的是越来越难了</p><p>从10.1起，外环内所有高架都不能上了，周六日除外</p><p>明年5.1起，所有外地牌全面限行外环内</p><p>emmm……</p><p>我刚买的车，上的老家的牌子，这就悲催了啊</p><p>很多上海人上的苏州牌子，也很纠结</p><p>一个沪牌10W</p><p>官方的目的是说为了缓解交通拥堵，但其实没有外牌的高架一样很拥堵，</p><p>我认为纯粹的限制外牌根本解决不了拥堵，只是为了推动上海的荣威，名爵电动车的售卖</p><p>真正有效的限行是尾号限行</p><p>可能以后会这样，但是有了现在外牌的限行，以后尾号限行也没外牌啥事了</p><p>此举会导致多少人因为拍照问题离沪呢？</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;伟大的魔都又限行了，外地牌照真的是越来越难了&lt;/p&gt;
&lt;p&gt;从10.1起，外环内所有高架都不能上了，周六日除外&lt;/p&gt;
&lt;p&gt;明年5.1起，所有外地牌全面限行外环内&lt;/p&gt;
&lt;p&gt;emmm……&lt;/p&gt;
&lt;p&gt;我刚买的车，上的老家的牌子，这就悲催了啊&lt;/p&gt;
&lt;p&gt;很多上海人</summary>
      
    
    
    
    <category term="点滴生活" scheme="https://hfanss.com/categories/%E7%82%B9%E6%BB%B4%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="生活" scheme="https://hfanss.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>域名做个邮箱</title>
    <link href="https://hfanss.com/2020/%E5%9F%9F%E5%90%8D%E5%81%9A%E4%B8%AA%E9%82%AE%E7%AE%B1.html"/>
    <id>https://hfanss.com/2020/%E5%9F%9F%E5%90%8D%E5%81%9A%E4%B8%AA%E9%82%AE%E7%AE%B1.html</id>
    <published>2020-09-09T10:51:22.000Z</published>
    <updated>2025-09-07T01:15:39.171Z</updated>
    
    <content type="html"><![CDATA[<p>既然目的是邮箱，那咱们就选最简单的一个方式</p><p>1.打开<a href="http://ym.163.com/">网易企业邮箱</a>，点击免费创建</p><p>2.填写自己的域名(确保自己能解析)，组织机构名称随便填一下就可以，下一步</p><p>3.填写管理员信息，下一步</p><p>4.验证域名，根据图文指示就行(解析过网站的都会，不会的百度下解析网站)，下一步</p><p>5.创建成功，并点击登录</p><p>6.会提示你需要实名认证+MX解析(正在验证中)，一般12小时会通过，会给你的密保邮箱发个通过邮件</p><p>7.打开<a href="http://ym.163.com/">网易企业邮箱</a>，登录 完毕</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;既然目的是邮箱，那咱们就选最简单的一个方式&lt;/p&gt;
&lt;p&gt;1.打开&lt;a href=&quot;http://ym.163.com/&quot;&gt;网易企业邮箱&lt;/a&gt;，点击免费创建&lt;/p&gt;
&lt;p&gt;2.填写自己的域名(确保自己能解析)，组织机构名称随便填一下就可以，下一步&lt;/p&gt;
&lt;p&gt;3.填写管</summary>
      
    
    
    
    <category term="学习记录" scheme="https://hfanss.com/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="疫情" scheme="https://hfanss.com/tags/%E7%96%AB%E6%83%85/"/>
    
    <category term="生活" scheme="https://hfanss.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>hexo部署至Dcloud</title>
    <link href="https://hfanss.com/2020/hexo%E9%83%A8%E7%BD%B2%E8%87%B3Dcloud.html"/>
    <id>https://hfanss.com/2020/hexo%E9%83%A8%E7%BD%B2%E8%87%B3Dcloud.html</id>
    <published>2020-08-09T03:14:22.000Z</published>
    <updated>2025-09-07T01:15:39.171Z</updated>
    
    <content type="html"><![CDATA[<p>先放上官方简介</p><p><a href="https://uniapp.dcloud.io/uniCloud/hosting?id=%e7%ae%80%e4%bb%8b">https://uniapp.dcloud.io/uniCloud/hosting?id=%e7%ae%80%e4%bb%8b</a></p><p>具体步骤大致说一下</p><p>1.申请uniCloud账号</p><p>2.创建服务空间</p><p>3.下载HBuilderX ，并登陆刚才的账号</p><p>4.选中你本地的hexo生成后的public文件夹</p><p>5.右键点击发行-上传到网站服务器</p><p>6.网站打开刚才创建的服务空间</p><p>左侧点击前端网页托管，右侧点击参数管理</p><p>这里可以配置自定义域名、添加证书</p><p>注意事项：</p><p>1.发行的时候，它会提示你是否替换源文件，这里建议全部替换，因为不管你是修改老文件还是新增文件都会涉及到原来文件，不过这里说一下，它的速度很慢，文件少就快，文件多就慢，你也可以选择在web控制台上传，那个会很快</p><p>2.既然免费就会有一定的不足，它最大的不足就是不主动提供https服务，即使你提供了https证书</p><p>当然这里也有解决方式：修改index模版，位置在主题的layout根目录，一般名字为index.ejs，</p><p>打开后在最顶部加入如下代码，完美解决</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> &lt;script&gt;</span><br><span class="line"> var url = window.location.href; if(url.indexOf(&quot;localhost&quot;) &lt; 0)&#123;if (url.indexOf(&quot;https&quot;) &lt; 0) &#123;url = url.replace(&quot;http:&quot;, &quot;https:&quot;);window.location.replace(url);&#125;&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>3.还有最为诟病的一点，并非即时部署，发行完之后，大概会有5-10分钟的延时，不过可以接受</p><p>4.当然最主要的优点还是国内阿里云服务器，免费，自带CDN，操作简单</p><p>我个人备份了一个</p><p><a href="https://blog.hfanss.com/">blog.hfanss.com</a></p><p>目前本站主站coding，副站dcloud，源代码部署在gitee上</p><p>有问题下方留言</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;先放上官方简介&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://uniapp.dcloud.io/uniCloud/hosting?id=%e7%ae%80%e4%bb%8b&quot;&gt;https://uniapp.dcloud.io/uniCloud/hosting?id=%e7</summary>
      
    
    
    
    <category term="hexo" scheme="https://hfanss.com/categories/hexo/"/>
    
    
    <category term="技术" scheme="https://hfanss.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="hexo部署" scheme="https://hfanss.com/tags/hexo%E9%83%A8%E7%BD%B2/"/>
    
    <category term="Dcloud" scheme="https://hfanss.com/tags/Dcloud/"/>
    
  </entry>
  
  <entry>
    <title>消失的我又回来了</title>
    <link href="https://hfanss.com/2020/%E6%B6%88%E5%A4%B1%E7%9A%84%E6%88%91%E5%8F%88%E5%9B%9E%E6%9D%A5%E4%BA%86.html"/>
    <id>https://hfanss.com/2020/%E6%B6%88%E5%A4%B1%E7%9A%84%E6%88%91%E5%8F%88%E5%9B%9E%E6%9D%A5%E4%BA%86.html</id>
    <published>2020-07-25T06:26:22.000Z</published>
    <updated>2025-09-07T01:15:39.171Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说说驾照"><a href="#说说驾照" class="headerlink" title="说说驾照"></a>说说驾照</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">去年4月报考，5月科一，7月科二，十月科二补考，十一月科二补考通过</span><br><span class="line">十一月底科三考试，十二月中科三补考，疫情影响今年五月科三补考，六月科三通过，月底科四通过</span><br><span class="line"></span><br><span class="line">回顾我的驾考，完全是一幅悲剧史，前期是因为驾校垃圾，不负责，后期转成互联网驾校，教的挺好，练的也挺好，</span><br><span class="line">但是科三每次考试都会出小状况，不是漏打灯就是没超过三秒，还有外来车辆闯入的应急处理，导致科三考了四次，</span><br><span class="line">惊喜的是第四次考试的时候我还感冒了，发低烧在家隔离，而且第四次我一次车都没练，就这样还考过了</span><br><span class="line">满分。。。</span><br><span class="line"></span><br><span class="line">拿到驾照的那一刻真的心累，从报考至今，花费的综合成本已经超过30K，心累</span><br></pre></td></tr></table></figure><h2 id="说说疫情"><a href="#说说疫情" class="headerlink" title="说说疫情"></a>说说疫情</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">疫情爆发初期，在老家的时候还跟湖北人接触过，所幸也没事情</span><br><span class="line">总计在家呆了45左右，老家河南的，因为紧邻湖北，疫情防控还是挺严格的</span><br><span class="line">在家因为家里电脑配置太低，也捣鼓不了博客，每天就是玩玩手机，看看技术博客，过的相当无聊</span><br><span class="line">过来上海后隔离了半个月，此时公司已经要求追踪工作进度</span><br><span class="line">4月开始上班，就开始了悲剧的工作</span><br><span class="line"></span><br><span class="line">庆幸的是我和还在看博文的你都没有感染新冠，加油</span><br><span class="line">在此感谢奋斗在一线的医护工作者，(｀･ω･´)ゞ敬礼っ</span><br></pre></td></tr></table></figure><h2 id="说说工作"><a href="#说说工作" class="headerlink" title="说说工作"></a>说说工作</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">4月上班至今7月，工作很繁忙，因为团队中有一人是湖北人，工作的重担全压在我身上</span><br><span class="line">公司做了一个文件转换驱动，主要功能是点到点文件转换，相当于一个中间驱动，当然并不单纯，领导加了业务处理</span><br><span class="line">银行的需求大概都知道，最重要最复杂的就是业务，翻来覆去的调用，</span><br><span class="line">总代码量10K+，我个人写了大概45天，测试用了50天，7月中正式上线</span><br><span class="line">总加班200+H，曽连续上班两周，每晚10点以后下班</span><br><span class="line">总算正常上线，也算完美</span><br></pre></td></tr></table></figure><h2 id="说说生活"><a href="#说说生活" class="headerlink" title="说说生活"></a>说说生活</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">年后也没时间去学习，下半年要补回来</span><br><span class="line"></span><br><span class="line">前几天项目上线后看了下网站，ssl证书到期了，CDN也不正常了，又花点时间解决</span><br><span class="line"></span><br><span class="line">今年总归是多事之年，疫情+中美之间的矛盾，还是不建议换工作了，有空多学习学习</span><br></pre></td></tr></table></figure><p>吐槽一下</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;说说驾照&quot;&gt;&lt;a href=&quot;#说说驾照&quot; class=&quot;headerlink&quot; title=&quot;说说驾照&quot;&gt;&lt;/a&gt;说说驾照&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;</summary>
      
    
    
    
    <category term="点滴生活" scheme="https://hfanss.com/categories/%E7%82%B9%E6%BB%B4%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="疫情" scheme="https://hfanss.com/tags/%E7%96%AB%E6%83%85/"/>
    
    <category term="生活" scheme="https://hfanss.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>初识Python-99乘法表</title>
    <link href="https://hfanss.com/2019/%E5%88%9D%E8%AF%86Python-99%E4%B9%98%E6%B3%95%E8%A1%A8.html"/>
    <id>https://hfanss.com/2019/%E5%88%9D%E8%AF%86Python-99%E4%B9%98%E6%B3%95%E8%A1%A8.html</id>
    <published>2019-10-20T06:50:22.000Z</published>
    <updated>2025-09-07T01:15:39.171Z</updated>
    
    <content type="html"><![CDATA[<p>python的份额一年比一年多，今天也来体验下</p><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h2><p>网上教程很多，随便推荐一篇吧，老廖的</p><p><a href="https://www.liaoxuefeng.com/wiki/1016959663602400/1016959856222624">https://www.liaoxuefeng.com/wiki/1016959663602400/1016959856222624</a></p><h2 id="2-上手"><a href="#2-上手" class="headerlink" title="2.上手"></a>2.上手</h2><p>因为我是做java开发的，所以使用的IDE是sts,安装了一下插件</p><p><a href="https://blog.csdn.net/qq_36955890/article/details/93191243">https://blog.csdn.net/qq_36955890/article/details/93191243</a></p><h2 id="3-体验"><a href="#3-体验" class="headerlink" title="3.体验"></a>3.体验</h2><p>来个99乘法表吧</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">@note:</span><br><span class="line">@author: hfanss</span><br><span class="line">@date: 2019/10/20 14:27:27</span><br><span class="line"></span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">#打印一个简单的99乘法表</span><br><span class="line">#外层循环  控制左边1-9</span><br><span class="line">for i in range(1,10):</span><br><span class="line">    #内层循环控制 右边1-9</span><br><span class="line">    for j in range(1,i+1):</span><br><span class="line">        #print(&quot;&#123;0&#125;*&#123;1&#125;=&#123;2&#125;&quot;.format(i,j,i*j),end = &quot; &quot;)</span><br><span class="line">        print(&quot;&#123;0&#125;*&#123;1&#125;=&#123;k&#125;&quot;.format(i,j,k=i*j),end = &quot; &quot;)</span><br><span class="line">    print()</span><br></pre></td></tr></table></figure><p>完美打印</p><h2 id="4-随想"><a href="#4-随想" class="headerlink" title="4.随想"></a>4.随想</h2><p>简单来说，python的语法相对来说更简洁些，一些常用的操作做了简化，比如说键盘录入，只需要input()可以了，java中很麻烦</p><p>输出的时候也做了一些定制，上面打印99乘法表的时候就可以看出来了</p><p>嗯，简单体验下，有时间再继续学下去</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;python的份额一年比一年多，今天也来体验下&lt;/p&gt;
&lt;h2 id=&quot;1-安装&quot;&gt;&lt;a href=&quot;#1-安装&quot; class=&quot;headerlink&quot; title=&quot;1.安装&quot;&gt;&lt;/a&gt;1.安装&lt;/h2&gt;&lt;p&gt;网上教程很多，随便推荐一篇吧，老廖的&lt;/p&gt;
&lt;p&gt;&lt;a hr</summary>
      
    
    
    
    <category term="Python" scheme="https://hfanss.com/categories/Python/"/>
    
    
    <category term="Python" scheme="https://hfanss.com/tags/Python/"/>
    
    <category term="99乘法表" scheme="https://hfanss.com/tags/99%E4%B9%98%E6%B3%95%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>考生分配考场的简单实现</title>
    <link href="https://hfanss.com/2019/%E8%80%83%E7%94%9F%E5%88%86%E9%85%8D%E8%80%83%E5%9C%BA%E7%9A%84%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0.html"/>
    <id>https://hfanss.com/2019/%E8%80%83%E7%94%9F%E5%88%86%E9%85%8D%E8%80%83%E5%9C%BA%E7%9A%84%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0.html</id>
    <published>2019-10-07T07:59:38.000Z</published>
    <updated>2025-09-07T01:15:39.171Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前段时间有小学弟咨询我考生分配考场的逻辑该怎么做，简单讲解了一下，在这里顺便记录下</p><h2 id="demo逻辑"><a href="#demo逻辑" class="headerlink" title="demo逻辑"></a>demo逻辑</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 循环班级数组  A</span><br><span class="line">2. 循环每班总座位  B</span><br><span class="line">3. 在B中按照顺序给每个位置分配上  通过随机数取到的随机学号</span><br><span class="line">4. 打印输出</span><br><span class="line">PS:重点要保证3不能重复</span><br></pre></td></tr></table></figure><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p>我做的是个非常简单的demo，班级个数和每班人数都是固定的。当然实际生活中可能不是固定的，就需要根据实际情况去优化了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1126</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">banji</span> <span class="operator">=</span> <span class="number">10</span>;<span class="comment">//班级个数</span></span><br><span class="line"><span class="type">int</span> <span class="variable">renShu</span> <span class="operator">=</span> <span class="number">50</span>;<span class="comment">//每班座位数</span></span><br><span class="line"><span class="type">int</span> <span class="variable">renShuTotal</span> <span class="operator">=</span> banji * renShu;<span class="comment">//待分配座位总数</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 生成随机的学号list，放在set里没有重复</span></span><br><span class="line"><span class="comment">* 实际情况：该元素应从数据库中查出，且不可能出现重复</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">Set&lt;String&gt;  xueHaoNoList = getXueHaoNo();</span><br><span class="line">Map&lt;Long,String&gt;[] listMap = <span class="keyword">new</span> <span class="title class_">Map</span>[banji];<span class="comment">//用来存放已生成的座位+学号</span></span><br><span class="line">List&lt;Long&gt; s3 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();<span class="comment">//用来存放不重复的随机数</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>, index = banji; i&lt;= index; i++)</span><br><span class="line">&#123;</span><br><span class="line">Map&lt;Long,String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();<span class="comment">//用来存放每个班的座位+学号</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">1</span>,index2=renShu; j&lt;=index2;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">Long</span> <span class="variable">sss</span> <span class="operator">=</span> getRandom(renShuTotal,s3);</span><br><span class="line"><span class="type">long</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(String xueHao : xueHaoNoList)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (s2==sss)</span><br><span class="line">&#123;</span><br><span class="line">map.put((<span class="type">long</span>)j,xuehao);</span><br><span class="line">&#125;</span><br><span class="line">s2++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">listMap[i-<span class="number">1</span>]=map;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出确认</span></span><br><span class="line"><span class="type">long</span> <span class="variable">i2</span> <span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(Map&lt;Long,String&gt; map : listMap)</span><br><span class="line">&#123;</span><br><span class="line">System.err.println(<span class="string">&quot;第&quot;</span>+i2+<span class="string">&quot;个班级的考生分配情况如下：&quot;</span>);</span><br><span class="line">System.err.println(map);</span><br><span class="line">System.err.println(<span class="string">&quot;********************************************&quot;</span>);</span><br><span class="line">｝</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *获取500以内的随机数，这里用了递归，以保证不会重复</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">private</span> Long <span class="title function_">getRandom</span><span class="params">(<span class="type">int</span> renShuTotal,List&lt;Long&gt; s3)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">Long</span> <span class="variable">sss</span> <span class="operator">=</span> (<span class="type">long</span>)(Math.random()*renShuTotal);</span><br><span class="line"><span class="keyword">if</span>(s3.contains(sss))</span><br><span class="line">&#123;</span><br><span class="line">sss= getRandom(renShuTotal,s3);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">s3.add(sss);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sss;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*获取随机学号，*1000000000用来保证重复几率最小</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">private</span> Set&lt;String&gt; <span class="title function_">getXueHaoNo</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">Set&lt;String&gt; xuehaoNoList = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>,index = <span class="number">500</span>; i&lt;index;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">Long</span> <span class="variable">ss</span> <span class="operator">=</span> (<span class="type">long</span>)(Math.random()*<span class="number">1000000000</span>);</span><br><span class="line">xuehaoNoList.add(ss.toString());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> xuehaoNoList;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;前段时间有小学弟咨询我考生分配考场的逻辑该怎么做，简单讲解了一下，在这里顺便记录下&lt;/p&gt;
&lt;h2 id=&quot;demo逻辑&quot;&gt;&lt;a href=</summary>
      
    
    
    
    <category term="Java" scheme="https://hfanss.com/categories/Java/"/>
    
    
    <category term="考生分配考场" scheme="https://hfanss.com/tags/%E8%80%83%E7%94%9F%E5%88%86%E9%85%8D%E8%80%83%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>记一次糟糕的驾照学习经历</title>
    <link href="https://hfanss.com/2019/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%B3%9F%E7%B3%95%E7%9A%84%E9%A9%BE%E7%85%A7%E5%AD%A6%E4%B9%A0%E7%BB%8F%E5%8E%86.html"/>
    <id>https://hfanss.com/2019/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%B3%9F%E7%B3%95%E7%9A%84%E9%A9%BE%E7%85%A7%E5%AD%A6%E4%B9%A0%E7%BB%8F%E5%8E%86.html</id>
    <published>2019-10-01T04:20:38.000Z</published>
    <updated>2025-09-07T01:15:39.171Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>4月份报了一个驾校，同事推荐的，想着教练是女的，能比较愉快的拿证，就报名了。随之就是噩梦的开始了</p></blockquote><p>科一：</p><p>因为当时上海学习驾照需要居住证，而我一直嫌麻烦没来得及去办，就报了异地（南通）考试的，报名之后就开始催考科一（因为我在报名之前就已经在APP上学习了科一），但是驾校竟然拖了半个月才给我去报名（what  fuck？），就是所谓的录个人脸之类的，5分钟搞定的事情，要跑一趟南通。。。但是更奇葩的是，驾校包的车竟然没人跟着过去，司机拉到指定位置就让我们下车，根本不知道在哪啊？给教练打电话，回复：自己找！fuck!幸好是找到了。。但是这个办事方式真的是。。。*<em>&amp;￥%……@</em>%#@#……</p><p>好了。报上名原本想很快就会考科一。不然，这次又拖了半个月。。。跟上次一样，没人带（fuck..fuck）</p><p>科二：</p><p>科一完了，终于科可以车了，去练车场（一个废弃的公路，画了几条线就是练车场了^-^）,教练说要练静车（既报废的车辆，让你在上面练习起步，停车，打方向盘），这些不是科三才开始的吗？。。。</p><p>练了3天静车，终于可以摸车了，下班去了后，教练说，你先跟那位同学（一位练了很久的学员）练，于是我就开始了为期两个月的跟同学学车的时光，期间还是我主动找教练让她教我一下，她只教了我不到10分钟！到快考试的时候，才跟着教的多了一会！</p><p>南通考试：</p><p>很多细节上海教练根本没讲，比如说，上车准备步骤，遇到突发情况该怎么处理。。都是南通这边给讲的。</p><p>所以，不可避免的，我挂科了。不知道是紧张还是怎么滴，走神了，回过神来 点早过了。。。崩溃！</p><p>然后回上海后，我就开始催补考。催了俩月，你敢信？那段时间气坏了。别人挂科的都又去考试了，新学员也去考试了，就我T.M的说报不上。气死了。。。</p><p>好吧，第二次科二，本来想着一把过的。没想到又出问题了，倒挡偶发性挂不上，两次都挂不上，卡在倒车入库那里，但是侧方入库一下就挂上了。等我两次机会用完，我又挂了一下，这次却挂上了。。。悲催（倒挡是基本操作，不可能是技术问题）其他人用那个车都没问题。。我只好又 ‘被‘ 挂科了。。。</p><p>现在已经10.1号了。还在等着补考，不知道这次要等多久。很崩溃。发帖吐槽吐槽，这段时间为了练车，博客基本没怎么更新，没想到要三进宫的节奏。。</p><p>吐槽：</p><p>报了这个驾校真的很后悔，槽点太多我给总结了一下</p><p>1.异地跟上海的合作不紧密，去那边人家不怎么管，爱搭不理的</p><p>2.练车环境太low，用的车全部是年检不合格的车，破破烂烂的，总担心练着练着趴窝了</p><p>3.教练太少（只有两个，科二一个，科三一个），态度不好，教你的时候的就不说了，没教你的时候，什么，别给车撞坏了，不要开空调，动不动就是车坏了要赔钱之类的。。。关键是  这车本来就破的不行了。。</p><p>4.乱收费比较严重，随意征收费用，科二，科三练车前必须先交考试钱，才让练车，不然不让摸车，挂科后，需要交200元补练车费用。。。后来升到600。。。</p><p>5.练车时间随意更改，刚报名的时候是早9-晚8练车，中午不休息，后来改为下午2点-下午8点，再后来改为下午4点-8点，然后又改为下午2点-下午5点，现在又改为早9-晚5，中午休息一小时，我本来就在这附近上班，原本想着中午可以来练1个小时，下班来练俩小时，，等考完科一后，全部泡汤</p><p>如果可以重新选择一次驾校的话，我绝对不会选它了</p><p>上海外培驾校-上海浦东新区财神庙附近练车</p><p>大家要是在这附近的千万别报他们驾校了。。。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;4月份报了一个驾校，同事推荐的，想着教练是女的，能比较愉快的拿证，就报名了。随之就是噩梦的开始了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;科一：&lt;/p&gt;
&lt;p&gt;因为当时上海学习驾照需要居住证，而我一直嫌麻烦没来得及去办，就报了异地（南通）考试的，</summary>
      
    
    
    
    <category term="点滴生活" scheme="https://hfanss.com/categories/%E7%82%B9%E6%BB%B4%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="驾照" scheme="https://hfanss.com/tags/%E9%A9%BE%E7%85%A7/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot实现拦截器</title>
    <link href="https://hfanss.com/2019/SpringBoot%E5%AE%9E%E7%8E%B0%E6%8B%A6%E6%88%AA%E5%99%A8.html"/>
    <id>https://hfanss.com/2019/SpringBoot%E5%AE%9E%E7%8E%B0%E6%8B%A6%E6%88%AA%E5%99%A8.html</id>
    <published>2019-06-25T13:52:22.000Z</published>
    <updated>2025-09-07T01:15:39.170Z</updated>
    
    <content type="html"><![CDATA[<p>首先，你的项目要能跑起来，且基于springboot的</p><p>boot的拦截器不用配置web.xml，按照特定名字书写，它会自动识别（位置随便放，只要在代码目录下就可以）</p><p>1.拦截器  SessionInterceptor.java </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">package com.hfanss.blog.utils;</span><br><span class="line"></span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line">import org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line">import org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 功能描述:拦截器实现类</span><br><span class="line"> * @author: hfanss</span><br><span class="line"> * @date: 2019年6月25日 下午9:23:32 </span><br><span class="line"> */</span><br><span class="line">public class SessionInterceptor implements HandlerInterceptor</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception</span><br><span class="line">&#123;</span><br><span class="line">System.err.println(&quot;拦截器进来了,路径为：&quot;+request.getRequestURI());</span><br><span class="line">if (request.getRequestURI().equals(&quot;/admin/**&quot;))</span><br><span class="line">&#123;</span><br><span class="line">//TODO  验证登录token</span><br><span class="line">return true;</span><br><span class="line">&#125;else &#123;</span><br><span class="line"></span><br><span class="line">return true;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception</span><br><span class="line">&#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception</span><br><span class="line">&#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.路径 SessionConfiguration.java</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">package com.hfanss.blog.utils;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.format.FormatterRegistry;</span><br><span class="line">import org.springframework.http.converter.HttpMessageConverter;</span><br><span class="line">import org.springframework.validation.MessageCodesResolver;</span><br><span class="line">import org.springframework.validation.Validator;</span><br><span class="line">import org.springframework.web.method.support.HandlerMethodArgumentResolver;</span><br><span class="line">import org.springframework.web.method.support.HandlerMethodReturnValueHandler;</span><br><span class="line">import org.springframework.web.servlet.HandlerExceptionResolver;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.CorsRegistry;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.InterceptorRegistry;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.PathMatchConfigurer;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.ViewResolverRegistry;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 功能描述:配置拦截器路径 /admin/</span><br><span class="line"> * @author: hfanss</span><br><span class="line"> * @date: 2019年6月25日 下午9:37:21 </span><br><span class="line"> */</span><br><span class="line">@Configuration</span><br><span class="line">public class SessionConfiguration implements WebMvcConfigurer</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void addInterceptors(InterceptorRegistry registry)</span><br><span class="line">&#123;</span><br><span class="line">registry.addInterceptor(new  SessionInterceptor()).addPathPatterns(&quot;/admin/**&quot;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">.....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行项目，拦截器实现类方法内打个断点，会发现所有带 admin的路径都会被拦截到</p><p>可以根据需要定义拦截的路径，拦截器常用的功能也就用户登录控制</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;首先，你的项目要能跑起来，且基于springboot的&lt;/p&gt;
&lt;p&gt;boot的拦截器不用配置web.xml，按照特定名字书写，它会自动识别（位置随便放，只要在代码目录下就可以）&lt;/p&gt;
&lt;p&gt;1.拦截器  SessionInterceptor.java &lt;/p&gt;
&lt;fig</summary>
      
    
    
    
    <category term="Java" scheme="https://hfanss.com/categories/Java/"/>
    
    
    <category term="springBoot" scheme="https://hfanss.com/tags/springBoot/"/>
    
    <category term="拦截器" scheme="https://hfanss.com/tags/%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis自动生成实体类及xml</title>
    <link href="https://hfanss.com/2019/Mybatis%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E5%AE%9E%E4%BD%93%E7%B1%BB%E5%8F%8Axml.html"/>
    <id>https://hfanss.com/2019/Mybatis%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E5%AE%9E%E4%BD%93%E7%B1%BB%E5%8F%8Axml.html</id>
    <published>2019-06-17T13:43:22.000Z</published>
    <updated>2025-09-07T01:15:39.170Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Mybatis自动生成实体类及xml</p></blockquote><p>如果自己根据表手动生成需要的java文件无疑是非常麻烦的，在公司用的是自己写的一段代码生成，比较复杂，代码量也非常大，这几天刚好做一个boot的小demo，于是把mybatis的generator自动生成工具使用整理记录下</p><p>1.引入jar包-pom.xml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">&lt;!-- ..... --&gt;</span><br><span class="line">    &lt;!-- mysql驱动 --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;5.1.35&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!-- mysql自动生成实体类--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mybatis-generator-core&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.3.5&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;dependencies&gt;</span><br></pre></td></tr></table></figure><p>2.resources文件夹下增加mybatis-generator.xml文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;!DOCTYPE generatorConfiguration   PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;   &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&gt;</span><br><span class="line">&lt;generatorConfiguration&gt;</span><br><span class="line">&lt;context id=&quot;DB2Tables&quot; targetRuntime=&quot;MyBatis3Simple&quot;&gt;</span><br><span class="line">&lt;commentGenerator&gt;</span><br><span class="line">&lt;property name=&quot;suppressDate&quot; value=&quot;true&quot; /&gt;                 </span><br><span class="line">&lt;!-- 是否去除自动生成的注释 true：是 ： false:否 --&gt;</span><br><span class="line">&lt;!-- 这个注释是generator的注释。不是建表时手输的，没什么卵用--&gt;</span><br><span class="line">&lt;property name=&quot;suppressAllComments&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">&lt;/commentGenerator&gt;          </span><br><span class="line">&lt;!--数据库链接URL，用户名、密码 --&gt;</span><br><span class="line">&lt;jdbcConnection driverClass=&quot;com.mysql.jdbc.Driver&quot;</span><br><span class="line">connectionURL=&quot;jdbc:mysql://localhost:3306/hfanss?characterEncoding=utf-8&quot;</span><br><span class="line">userId=&quot;root&quot; password=&quot;123456&quot;&gt;</span><br><span class="line">&lt;/jdbcConnection&gt;</span><br><span class="line">&lt;javaTypeResolver&gt;</span><br><span class="line">&lt;property name=&quot;forceBigDecimals&quot; value=&quot;false&quot; /&gt;</span><br><span class="line">&lt;/javaTypeResolver&gt; </span><br><span class="line">&lt;!-- 设置Java类生成的位置 --&gt;</span><br><span class="line">&lt;javaModelGenerator targetPackage=&quot;com.hfanss.blog.VO&quot;</span><br><span class="line">targetProject=&quot;.\src\main\java&quot;&gt;</span><br><span class="line">&lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">&lt;property name=&quot;trimStrings&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">&lt;/javaModelGenerator&gt; </span><br><span class="line">&lt;!-- 生成映射文件的包名和位置 ***mapper.xml--&gt;</span><br><span class="line">&lt;sqlMapGenerator targetPackage=&quot;\spring\sqlMap&quot;</span><br><span class="line">targetProject=&quot;.\src\main\resources&quot;&gt;</span><br><span class="line">&lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">&lt;/sqlMapGenerator&gt; </span><br><span class="line">&lt;!-- 生成DAO的包名和位置 ***mapper.java--&gt;</span><br><span class="line">&lt;javaClientGenerator type=&quot;XMLMAPPER&quot;</span><br><span class="line">targetPackage=&quot;com.hfanss.blog.dao&quot; targetProject=&quot;.\src\main\java&quot;&gt;</span><br><span class="line">&lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">&lt;/javaClientGenerator&gt; </span><br><span class="line">&lt;!-- 所有要生成的表名 --&gt;</span><br><span class="line">&lt;table tableName=&quot;info&quot;&gt;&lt;/table&gt;</span><br><span class="line">&lt;table tableName=&quot;article&quot;&gt;&lt;/table&gt;</span><br><span class="line">&lt;table tableName=&quot;comments&quot;&gt;&lt;/table&gt;</span><br><span class="line">&lt;table tableName=&quot;links&quot;&gt;&lt;/table&gt;</span><br><span class="line">&lt;table tableName=&quot;menus&quot;&gt;&lt;/table&gt;</span><br><span class="line">&lt;table tableName=&quot;notice&quot;&gt;&lt;/table&gt;</span><br><span class="line">&lt;table tableName=&quot;articleSort&quot;&gt;&lt;/table&gt;</span><br><span class="line">&lt;/context&gt;</span><br><span class="line">&lt;/generatorConfiguration&gt;</span><br></pre></td></tr></table></figure><p>3.执行、GetAutoEntityAndDao放在src/test/java文件夹下,右键Aun as</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 功能描述:自动生成mapper.xml、dao、entity</span><br><span class="line"> * @author: hfanss</span><br><span class="line"> * @date: 2019年6月17日 下午8:25:55 </span><br><span class="line"> */</span><br><span class="line">public class GetAutoEntityAndDao &#123;</span><br><span class="line"></span><br><span class="line">// 该配置文件放在src\\main\\resources\\该路径下即可</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">args = new String[] &#123; &quot;-configfile&quot;, &quot;src\\main\\resources\\mybatis-generator.xml&quot;, &quot;-overwrite&quot; &#125;;</span><br><span class="line">ShellRunner.main(args);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>问题：实体类没有注释，十分不方便。</p><p>看了下源码。嗯，如果不改源码是不能实现生成自定义注释的。改天有时间再研究下！</p><p>附上项目及文件位置截图</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/027.jpg" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Mybatis自动生成实体类及xml&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果自己根据表手动生成需要的java文件无疑是非常麻烦的，在公司用的是自己写的一段代码生成，比较复杂，代码量也非常大，这几天刚好做一个boot的小demo，于是把myb</summary>
      
    
    
    
    <category term="Java" scheme="https://hfanss.com/categories/Java/"/>
    
    
    <category term="Java" scheme="https://hfanss.com/tags/Java/"/>
    
    <category term="Mybatis" scheme="https://hfanss.com/tags/Mybatis/"/>
    
    <category term="mybatis-generator" scheme="https://hfanss.com/tags/mybatis-generator/"/>
    
  </entry>
  
  <entry>
    <title>Thymeleaf模版中的取值</title>
    <link href="https://hfanss.com/2019/Thymeleaf%E6%A8%A1%E7%89%88%E4%B8%AD%E7%9A%84%E5%8F%96%E5%80%BC.html"/>
    <id>https://hfanss.com/2019/Thymeleaf%E6%A8%A1%E7%89%88%E4%B8%AD%E7%9A%84%E5%8F%96%E5%80%BC.html</id>
    <published>2019-05-01T05:12:38.000Z</published>
    <updated>2025-09-07T01:15:39.170Z</updated>
    
    <content type="html"><![CDATA[<p>最近在项目中使用到了springBoot自带的Thymeleaf模版，之前也没用过，研究了一下它的语法，在此记录下</p><p>js取model的值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script th:inline=&quot;javascript&quot;&gt;</span><br><span class="line">    var message = [[$&#123;message&#125;]];</span><br><span class="line">    console.log(message);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>页面取值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a th:text=&quot;$&#123;name&#125;&quot;&gt;&lt;/a&gt;</span><br><span class="line">或者</span><br><span class="line">&lt;a th:value=&quot;$&#123;name&#125;&quot;&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>循环取值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;tr th:each=&quot;article: $&#123;articleList&#125;&quot;&gt; </span><br><span class="line">    &lt;td th:text=&quot;$&#123;article.title&#125;&quot;&gt;&lt;/td&gt; </span><br><span class="line">    &lt;td th:text=&quot;$&#123;article.name&#125;&quot;&gt;&lt;/td&gt; </span><br><span class="line">    &lt;td th:text=&quot;$&#123;article.vcTitle&#125;&quot;&gt;&lt;/td&gt; </span><br><span class="line">    &lt;td th:text=&quot;$&#123;article.read&#125;&quot;&gt;&lt;/td&gt; </span><br><span class="line">    &lt;td th:text=&quot;$&#123;article.author&#125;&quot;&gt;&lt;/td&gt; </span><br><span class="line">&lt;/tr&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近在项目中使用到了springBoot自带的Thymeleaf模版，之前也没用过，研究了一下它的语法，在此记录下&lt;/p&gt;
&lt;p&gt;js取model的值&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=</summary>
      
    
    
    
    <category term="Java" scheme="https://hfanss.com/categories/Java/"/>
    
    
    <category term="Tomcat" scheme="https://hfanss.com/tags/Tomcat/"/>
    
    <category term="SpringBoot" scheme="https://hfanss.com/tags/SpringBoot/"/>
    
    <category term="Thymeleaf" scheme="https://hfanss.com/tags/Thymeleaf/"/>
    
  </entry>
  
  <entry>
    <title>material-x优化版、material-plus主题</title>
    <link href="https://hfanss.com/2019/material-x%E4%BC%98%E5%8C%96%E7%89%88%E3%80%81material-plus%E4%B8%BB%E9%A2%98.html"/>
    <id>https://hfanss.com/2019/material-x%E4%BC%98%E5%8C%96%E7%89%88%E3%80%81material-plus%E4%B8%BB%E9%A2%98.html</id>
    <published>2019-03-31T07:54:38.000Z</published>
    <updated>2025-09-07T01:15:39.171Z</updated>
    
    <content type="html"><![CDATA[<h2 id="主题介绍"><a href="#主题介绍" class="headerlink" title="主题介绍"></a>主题介绍</h2><p>本主题基于 <a href="https://xaoxuu.com/wiki/material-x/">material-x</a> 主题魔改，原作者 <a href="https://www.wushile.top/">小吴博客</a> ，在征得作者同意下开源。此版本在他的基础上加入了一些常用功能</p><h3 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h3><p><a href="hfanss.com">hfanss.com</a></p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/035.jpg" alt=""></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h3><blockquote><p><a href="https://github.com/iyohei/hexo-material-plus/tree/master">https://github.com/iyohei/hexo-material-plus/tree/master</a></p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>下载后是文件夹形式，将全部文件覆盖到你的目录下</p><h3 id="详细说明"><a href="#详细说明" class="headerlink" title="详细说明"></a>详细说明</h3><p>所有配置均在根目录下config.yml中进行</p><p>内部所有配置均有中文说明，以下仅特别强调几点</p><p>1.文章页标签</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 博文标题</span><br><span class="line">date: 2019-03-31 15:54:38  #书写日期+时间</span><br><span class="line">tags: #标签</span><br><span class="line">- hexo主题</span><br><span class="line">- material-x优化版</span><br><span class="line">- material-plus</span><br><span class="line">categories: #分类</span><br><span class="line">- hexo</span><br><span class="line">img: https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/034.jpg #博文封面。本地图片显示方式为  /img/***.jpg </span><br><span class="line">newimg: true    #是否显示  new 标签</span><br><span class="line">zhailu: 基于material-x主题魔改的hexo主题，material-plus主题，增添了部分功能，集成统计，广告。。。。。  #文章摘录。最少70字，否则封面会显示错乱</span><br><span class="line">comments: false   #是否开启评论，默认true</span><br><span class="line">toc: false     #是否显示目录，可在config.yml中统一配置</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>2.DIY</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">留言板/source/comment/index.html</span><br><span class="line">友链 /source/links/index.html</span><br><span class="line">关于博主/source/about2/index.html</span><br><span class="line">关于本站/source/about/index.html</span><br></pre></td></tr></table></figure><p>就说这么多吧，暂时也想不起太多，在使用中遇到问题，也可在下面留言咨询</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;主题介绍&quot;&gt;&lt;a href=&quot;#主题介绍&quot; class=&quot;headerlink&quot; title=&quot;主题介绍&quot;&gt;&lt;/a&gt;主题介绍&lt;/h2&gt;&lt;p&gt;本主题基于 &lt;a href=&quot;https://xaoxuu.com/wiki/material-x/&quot;&gt;material-x</summary>
      
    
    
    
    <category term="hexo" scheme="https://hfanss.com/categories/hexo/"/>
    
    
    <category term="hexo主题" scheme="https://hfanss.com/tags/hexo%E4%B8%BB%E9%A2%98/"/>
    
    <category term="开源项目" scheme="https://hfanss.com/tags/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/"/>
    
    <category term="material-x优化版" scheme="https://hfanss.com/tags/material-x%E4%BC%98%E5%8C%96%E7%89%88/"/>
    
    <category term="material-plus" scheme="https://hfanss.com/tags/material-plus/"/>
    
  </entry>
  
  <entry>
    <title>hexo部署至FTP-COS</title>
    <link href="https://hfanss.com/2019/hexo%E9%83%A8%E7%BD%B2%E8%87%B3FTP-COS.html"/>
    <id>https://hfanss.com/2019/hexo%E9%83%A8%E7%BD%B2%E8%87%B3FTP-COS.html</id>
    <published>2019-03-24T07:13:38.000Z</published>
    <updated>2025-09-07T01:15:39.171Z</updated>
    
    <content type="html"><![CDATA[<p>主流的部署方式一般都是github、coding、码云、七牛</p><p>但是其实也可以有更多的选择，比如FTP服务器和腾讯云COS</p><h2 id="部署至FTP服务器："><a href="#部署至FTP服务器：" class="headerlink" title="部署至FTP服务器："></a>部署至FTP服务器：</h2><p>一般有自己的服务器的都喜欢搭建在自己的服务器上，因为主流的服务器都是有不稳定的因素在，时长崩溃，自己有服务器，做个FTP用来存文件也是不错的选择，顺便放放hexo也算物尽其用</p><h3 id="1-安装插件"><a href="#1-安装插件" class="headerlink" title="1.安装插件"></a>1.安装插件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-ftpsync –save</span><br></pre></td></tr></table></figure><h3 id="2-修改配置"><a href="#2-修改配置" class="headerlink" title="2.修改配置"></a>2.修改配置</h3><p>根目录下config.yml增加以下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: ftpsync #上传方式，固定ftpsync</span><br><span class="line">  host: hfanss.ftp-gz01.com #ftp地址</span><br><span class="line">  user: ****#帐号</span><br><span class="line">  pass: ****#密码</span><br><span class="line">  remote: /webroot/ #上传至哪个目录</span><br><span class="line">  port: 8010#端口</span><br></pre></td></tr></table></figure><h2 id="部署至腾讯云COS："><a href="#部署至腾讯云COS：" class="headerlink" title="部署至腾讯云COS："></a>部署至腾讯云COS：</h2><h3 id="1-安装插件："><a href="#1-安装插件：" class="headerlink" title="1.安装插件："></a>1.安装插件：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-cos --save</span><br></pre></td></tr></table></figure><h3 id="2-修改配置："><a href="#2-修改配置：" class="headerlink" title="2.修改配置："></a>2.修改配置：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line"> type: cos#上传方式，固定cos</span><br><span class="line"> appId: 12529*****  #cos的appId</span><br><span class="line"> secretId: AKIDa0CAuP5hW6***********  #cos的secretId</span><br><span class="line"> secretKey: ********** #cos的secretKey</span><br><span class="line"> bucket: *********  #cos的bucket</span><br><span class="line"> region: ap-shanghai  #cos的region</span><br></pre></td></tr></table></figure><h2 id="部署至多个地址："><a href="#部署至多个地址：" class="headerlink" title="部署至多个地址："></a>部署至多个地址：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">   -type: cos</span><br><span class="line">    appId: ***</span><br><span class="line">   -type: git</span><br><span class="line">    repository: *****   #git地址 </span><br><span class="line">  branch: master</span><br><span class="line">   -type: git</span><br><span class="line">    repository: *****   #git地址 </span><br><span class="line">  branch: master</span><br><span class="line">   -type: ftpsync</span><br><span class="line">    host: hfanss.ftp-gz01.com</span><br><span class="line">    ....</span><br></pre></td></tr></table></figure><p>npm安装不成功使用<a href="https://hfanss.com/2019/hexo%E4%BD%BF%E7%94%A8%E6%B7%98%E5%AE%9D%E9%95%9C%E5%83%8FCNPM%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6.html">cnpm</a></p><blockquote><p>记录贴，大神勿喷！</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;主流的部署方式一般都是github、coding、码云、七牛&lt;/p&gt;
&lt;p&gt;但是其实也可以有更多的选择，比如FTP服务器和腾讯云COS&lt;/p&gt;
&lt;h2 id=&quot;部署至FTP服务器：&quot;&gt;&lt;a href=&quot;#部署至FTP服务器：&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="hexo" scheme="https://hfanss.com/categories/hexo/"/>
    
    
    <category term="hexo部署至FTP" scheme="https://hfanss.com/tags/hexo%E9%83%A8%E7%BD%B2%E8%87%B3FTP/"/>
    
    <category term="hexo部署至COS" scheme="https://hfanss.com/tags/hexo%E9%83%A8%E7%BD%B2%E8%87%B3COS/"/>
    
  </entry>
  
  <entry>
    <title>hexo使用淘宝镜像CNPM安装插件</title>
    <link href="https://hfanss.com/2019/hexo%E4%BD%BF%E7%94%A8%E6%B7%98%E5%AE%9D%E9%95%9C%E5%83%8FCNPM%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6.html"/>
    <id>https://hfanss.com/2019/hexo%E4%BD%BF%E7%94%A8%E6%B7%98%E5%AE%9D%E9%95%9C%E5%83%8FCNPM%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6.html</id>
    <published>2019-03-24T06:50:38.000Z</published>
    <updated>2025-09-07T01:15:39.171Z</updated>
    
    <content type="html"><![CDATA[<p>每次通过npm安装插件都要忍受奇慢无比的网速，后来发现了cnpm，发现速度非常快，特开贴记录</p><p>使用方式：</p><p>1.首先安装淘宝镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>2.安装模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install [name]</span><br></pre></td></tr></table></figure><p>name即为插件的名字</p><p>例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-ftpsync –save</span><br></pre></td></tr></table></figure><p>更改后：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install hexo-deployer-ftpsync –save</span><br></pre></td></tr></table></figure><p>淘宝镜像为阿里云产物，服务器架设在国内，当cnpm上没有你需要的插件时，它会自动去npm服务器上寻找同时在保存至cnpm服务器上</p><blockquote><p>官方文档：<a href="https://npm.taobao.org/">点我</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;每次通过npm安装插件都要忍受奇慢无比的网速，后来发现了cnpm，发现速度非常快，特开贴记录&lt;/p&gt;
&lt;p&gt;使用方式：&lt;/p&gt;
&lt;p&gt;1.首先安装淘宝镜像&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td clas</summary>
      
    
    
    
    <category term="hexo" scheme="https://hfanss.com/categories/hexo/"/>
    
    
    <category term="淘宝镜像" scheme="https://hfanss.com/tags/%E6%B7%98%E5%AE%9D%E9%95%9C%E5%83%8F/"/>
    
    <category term="cnpm" scheme="https://hfanss.com/tags/cnpm/"/>
    
  </entry>
  
  <entry>
    <title>在页面标签内实现随机颜色</title>
    <link href="https://hfanss.com/2019/%E5%9C%A8%E9%A1%B5%E9%9D%A2%E6%A0%87%E7%AD%BE%E5%86%85%E5%AE%9E%E7%8E%B0%E9%9A%8F%E6%9C%BA%E9%A2%9C%E8%89%B2.html"/>
    <id>https://hfanss.com/2019/%E5%9C%A8%E9%A1%B5%E9%9D%A2%E6%A0%87%E7%AD%BE%E5%86%85%E5%AE%9E%E7%8E%B0%E9%9A%8F%E6%9C%BA%E9%A2%9C%E8%89%B2.html</id>
    <published>2019-03-10T08:43:38.000Z</published>
    <updated>2025-09-07T01:15:39.171Z</updated>
    
    <content type="html"><![CDATA[<h3 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h3><p>jstl,有一个数字返回值</p><h3 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h3><p>将这个数字对某个数字取余，然后设定颜色。</p><h3 id="例子："><a href="#例子：" class="headerlink" title="例子："></a>例子：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;tagcloud&quot;&gt;</span><br><span class="line">            &lt;c:forEach items=&quot;$&#123;tagList&#125;&quot; var=&quot;tag&quot;&gt;</span><br><span class="line">                &lt;c:if test=&quot;$&#123;tag.tagId%5==0&#125;&quot;&gt;</span><br><span class="line">                &lt;a href=&quot;/tag/$&#123;tag.tagId&#125;&quot;</span><br><span class="line">                   class=&quot;tag-link-129 tag-link-position-1&quot; title=&quot;$&#123;tag.articleCount&#125;个话题&quot;</span><br><span class="line">                   style=&quot;font-size: 14px;color:#BF3EFF&quot;&gt;</span><br><span class="line">                        $&#123;tag.tagName&#125;</span><br><span class="line">                &lt;/a&gt;</span><br><span class="line">                &lt;/c:if&gt;</span><br><span class="line">                &lt;c:if test=&quot;$&#123;tag.tagId%5==1&#125;&quot;&gt;</span><br><span class="line">                &lt;a href=&quot;/tag/$&#123;tag.tagId&#125;&quot;</span><br><span class="line">                   class=&quot;tag-link-129 tag-link-position-1&quot; title=&quot;$&#123;tag.articleCount&#125;个话题&quot;</span><br><span class="line">                   style=&quot;font-size: 14px;color:#B0E2FF&quot;&gt;</span><br><span class="line">                        $&#123;tag.tagName&#125;</span><br><span class="line">                &lt;/a&gt;</span><br><span class="line">                &lt;/c:if&gt;</span><br><span class="line">                &lt;c:if test=&quot;$&#123;tag.tagId%5==2&#125;&quot;&gt;</span><br><span class="line">                &lt;a href=&quot;/tag/$&#123;tag.tagId&#125;&quot;</span><br><span class="line">                   class=&quot;tag-link-129 tag-link-position-1&quot; title=&quot;$&#123;tag.articleCount&#125;个话题&quot;</span><br><span class="line">                   style=&quot;font-size: 14px;color:#F08080&quot;&gt;</span><br><span class="line">                        $&#123;tag.tagName&#125;</span><br><span class="line">                &lt;/a&gt;</span><br><span class="line">                &lt;/c:if&gt;</span><br><span class="line">                &lt;c:if test=&quot;$&#123;tag.tagId%5==3&#125;&quot;&gt;</span><br><span class="line">                &lt;a href=&quot;/tag/$&#123;tag.tagId&#125;&quot;</span><br><span class="line">                   class=&quot;tag-link-129 tag-link-position-1&quot; title=&quot;$&#123;tag.articleCount&#125;个话题&quot;</span><br><span class="line">                   style=&quot;font-size: 14px;color:#CD9B1D&quot;&gt;</span><br><span class="line">                        $&#123;tag.tagName&#125;</span><br><span class="line">                &lt;/a&gt;</span><br><span class="line">                &lt;/c:if&gt;</span><br><span class="line">                &lt;c:if test=&quot;$&#123;tag.tagId%5==4&#125;&quot;&gt;</span><br><span class="line">                &lt;a href=&quot;/tag/$&#123;tag.tagId&#125;&quot;</span><br><span class="line">                   class=&quot;tag-link-129 tag-link-position-1&quot; title=&quot;$&#123;tag.articleCount&#125;个话题&quot;</span><br><span class="line">                   style=&quot;font-size: 14px;color:#00C5CD&quot;&gt;</span><br><span class="line">                        $&#123;tag.tagName&#125;</span><br><span class="line">                &lt;/a&gt;</span><br><span class="line">                &lt;/c:if&gt;</span><br><span class="line">                </span><br><span class="line">            &lt;/c:forEach&gt;</span><br><span class="line">            &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>不想用JS写，在标签内只能用这种取巧的方法</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;条件&quot;&gt;&lt;a href=&quot;#条件&quot; class=&quot;headerlink&quot; title=&quot;条件&quot;&gt;&lt;/a&gt;条件&lt;/h3&gt;&lt;p&gt;jstl,有一个数字返回值&lt;/p&gt;
&lt;h3 id=&quot;原理：&quot;&gt;&lt;a href=&quot;#原理：&quot; class=&quot;headerlink&quot; title</summary>
      
    
    
    
    <category term="学习记录" scheme="https://hfanss.com/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="随机颜色" scheme="https://hfanss.com/tags/%E9%9A%8F%E6%9C%BA%E9%A2%9C%E8%89%B2/"/>
    
  </entry>
  
  <entry>
    <title>快速搭建Java生产环境</title>
    <link href="https://hfanss.com/2019/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAJava%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83.html"/>
    <id>https://hfanss.com/2019/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAJava%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83.html</id>
    <published>2019-03-10T08:26:38.000Z</published>
    <updated>2025-09-07T01:15:39.171Z</updated>
    
    <content type="html"><![CDATA[<p>（本文使用于有一定基础的编程人员，如果小白的话请仔细，一步一步按照本文来 也可配置成功，有问题可在下方评论）</p><h2 id="1-JDK"><a href="#1-JDK" class="headerlink" title="1. JDK"></a>1. JDK</h2><p>看好自己电脑的版本  X32/X64，然后下载一个版本。并不是越新越好，一般都是1.5、1.7</p><p>官网 <a href="http://www.oracle.com/technetwork/java/index.html，官网有时候会卡">http://www.oracle.com/technetwork/java/index.html，官网有时候会卡</a></p><p>我在自己的网盘里分享了，<a href="https://pan.baidu.com/s/1mjmDTOW">https://pan.baidu.com/s/1mjmDTOW</a></p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/051.jpg" alt=""></p><h3 id="安装："><a href="#安装：" class="headerlink" title="安装："></a>安装：</h3><p>安装很简单，按照步骤一步一步来就好了，</p><p> <img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/052.jpg" alt=""></p><p>这里可以更改安装路径，需要的可以自己改</p><p> <img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/053.jpg" alt=""></p><p>这一步是安装JRE，JDK中是包含JRE的，所以可安装也可不安装</p><p> <img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/054.jpg" alt=""></p><h3 id="环境变量："><a href="#环境变量：" class="headerlink" title="环境变量："></a>环境变量：</h3><p>右击我的电脑——&gt;属性——&gt;高级——&gt;环境变量——&gt;在系统变量中找到path.</p><p>点击新建——&gt;变量名：JAVA_HOME，变量值：你的java所在路径，如这是我的安装路径：E:\Java\jdk1.7.0_21，这个值只要到这目录就差不多了，不要在后面加\bin等东西了。</p><p>双击path——&gt;在最前面加这么个东西   %JAVA_HOME%\bin;   分号不能少，必须是英文的分号。</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/055.jpg" alt=""><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/055.jpg" alt=""></p><p><img src="" alt=""></p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/056.jpg" alt=""></p><p>如果还有不清楚的，请去我的网盘下载  详细文档，里面有非常详细的说明</p><p> <img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/057.jpg" alt=""></p><p>校验环境变量是否成功</p><p>快捷键win+R——&gt;输入cmd——&gt;输java</p><p> <img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/058.jpg" alt=""></p><p>出现下图内容证明 成功</p><p> <img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/059.jpg" alt=""></p><h2 id="2-Tomcat"><a href="#2-Tomcat" class="headerlink" title="2. Tomcat"></a>2. Tomcat</h2><p>网盘:<a href="https://pan.baidu.com/s/1jKciScA">https://pan.baidu.com/s/1jKciScA</a></p><p>这个有点简单，全部点下一步就行，环境变量可配可不配</p><p>配的话 接上面 JDK的环境变量配置方法，名字为CATALINA_HOME，</p><p> <img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/060.jpg" alt=""></p><p>跟上面一样的方法添加到 Path中,他这个配环境变量的目的其实是可以单独启动，我们只需要在工具中启动就可以了，所以可不安装</p><h2 id="3-Eclipse"><a href="#3-Eclipse" class="headerlink" title="3. Eclipse"></a>3. Eclipse</h2><p>官网地址<a href="https://www.eclipse.org/downloads/">https://www.eclipse.org/downloads/</a></p><p>相关使用及配置  详见我另一篇博客<a href="http://blog.csdn.net/q2158798/article/details/77184898里面有JDK,Tomcat在Eclipse里的相关配置">http://blog.csdn.net/q2158798/article/details/77184898里面有JDK,Tomcat在Eclipse里的相关配置</a></p><h2 id="4-Svn"><a href="#4-Svn" class="headerlink" title="4. Svn"></a>4. Svn</h2><p>这里提供一个在线安装的</p><p>Eclipse里 点击 help-install from site -出来界面后，点击右边  add,</p><p>Name:svn</p><p>Location：<a href="http://subclipse.tigris.org/update_1.10.x">http://subclipse.tigris.org/update_1.10.x</a></p><p> <img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/061.jpg" alt=""></p><p>全部选上，点击下方Finish开始下载，东西不大，但服务器在国外，网速不好可能会卡</p><p>SVN导出项目报错的话  可以参考我的另一篇文章</p><p><a href="http://blog.csdn.net/q2158798/article/details/74612930">http://blog.csdn.net/q2158798/article/details/74612930</a></p><h2 id="5-反编译工具"><a href="#5-反编译工具" class="headerlink" title="5. 反编译工具"></a>5. 反编译工具</h2><p><a href="https://pan.baidu.com/s/1dL4mKY">https://pan.baidu.com/s/1dL4mKY</a></p><p>非常小巧的一个工具，直接把jar包往里面拖就能看到了</p><h2 id="6-数据库方面"><a href="#6-数据库方面" class="headerlink" title="6. 数据库方面"></a>6. 数据库方面</h2><p>推荐使用Navicat，可以链接多个数据库，下载地址:<a href="http://www.cr173.com/soft/126934.html">http://www.cr173.com/soft/126934.html</a></p><p>用此工具链接 Oracle的方法  参考我的另一篇文章</p><p><a href="http://blog.csdn.net/q2158798/article/details/78487405">http://blog.csdn.net/q2158798/article/details/78487405</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;（本文使用于有一定基础的编程人员，如果小白的话请仔细，一步一步按照本文来 也可配置成功，有问题可在下方评论）&lt;/p&gt;
&lt;h2 id=&quot;1-JDK&quot;&gt;&lt;a href=&quot;#1-JDK&quot; class=&quot;headerlink&quot; title=&quot;1. JDK&quot;&gt;&lt;/a&gt;1. JDK&lt;/</summary>
      
    
    
    
    <category term="Java" scheme="https://hfanss.com/categories/Java/"/>
    
    
    <category term="Java生产环境" scheme="https://hfanss.com/tags/Java%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>对list中对象的某一属性排序</title>
    <link href="https://hfanss.com/2019/%E5%AF%B9list%E4%B8%AD%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%9F%90%E4%B8%80%E5%B1%9E%E6%80%A7%E6%8E%92%E5%BA%8F.html"/>
    <id>https://hfanss.com/2019/%E5%AF%B9list%E4%B8%AD%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%9F%90%E4%B8%80%E5%B1%9E%E6%80%A7%E6%8E%92%E5%BA%8F.html</id>
    <published>2019-01-18T12:29:38.000Z</published>
    <updated>2025-09-07T01:15:39.171Z</updated>
    
    <content type="html"><![CDATA[<p>如果list只包含string的话，排序其实很方便</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line">    public void test003() &#123;</span><br><span class="line">        List&lt;String&gt;  list = new ArrayList&lt;String&gt;();</span><br><span class="line">        list.add(&quot;3&quot;);</span><br><span class="line">        list.add(&quot;1&quot;);</span><br><span class="line">        list.add(&quot;5&quot;);</span><br><span class="line">        list.add(&quot;6&quot;);</span><br><span class="line">        System.err.println(&quot;排序前：&quot;+list);</span><br><span class="line">        //第一种方式</span><br><span class="line">        Collections.sort(list);</span><br><span class="line">        System.err.println(&quot;排序后：&quot;+list);</span><br><span class="line">        //第二种方式</span><br><span class="line">        /**</span><br><span class="line">        Collections.sort(list, new Comparator&lt;String&gt;() &#123;</span><br><span class="line">            </span><br><span class="line">            @Override</span><br><span class="line">            public int compare(String o1, String o2) &#123;</span><br><span class="line">                // TODO Auto-generated method stub</span><br><span class="line">                return o1.compareTo(o2);</span><br><span class="line">            &#125;</span><br><span class="line">        </span><br><span class="line">        &#125;);</span><br><span class="line">        */</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>控制台</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">第一种方式和第二种方式输出相同：</span><br><span class="line">排序前：[3, 1, 5, 6]</span><br><span class="line">排序后：[1, 3, 5, 6]</span><br></pre></td></tr></table></figure><p>两种方式其实底层实现了同样的方法，不同的只是一个复写了compare方法</p><p>这是默认升序，那么降序呢？只需要修改下compare方法即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Collections.sort(list, new Comparator&lt;String&gt;() &#123;</span><br><span class="line">            </span><br><span class="line">            @Override</span><br><span class="line">            public int compare(String o1, String o2) &#123;</span><br><span class="line">                // TODO Auto-generated method stub</span><br><span class="line">                return o2.compareTo(o1);</span><br><span class="line">            &#125;</span><br><span class="line">        </span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><blockquote><p>那么对于对象集合，怎么排序呢？</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line">    public void test003() &#123;</span><br><span class="line">        List&lt;User&gt;  list = new ArrayList&lt;User&gt;(4);</span><br><span class="line">        User u1 = new User(&quot;张三&quot;, 17, &quot;20181212&quot;);</span><br><span class="line">        User u2 = new User(&quot;李四&quot;, 2, &quot;20171105&quot;);</span><br><span class="line">        User u3 = new User(&quot;王五&quot;, 11, &quot;19950504&quot;);</span><br><span class="line">        User u4 = new User(&quot;李六&quot;, 5, &quot;20200406&quot;);</span><br><span class="line">        list.add(u1);</span><br><span class="line">        list.add(u2);</span><br><span class="line">        list.add(u3);</span><br><span class="line">        list.add(u4);</span><br><span class="line">        System.err.println(&quot;排序前：&quot;);</span><br><span class="line">        for (User user : list) &#123;</span><br><span class="line">            System.err.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">        Collections.sort(list, new Comparator&lt;User&gt;() &#123;</span><br><span class="line"></span><br><span class="line">            @Override</span><br><span class="line">            public int compare(User o1, User o2) &#123;</span><br><span class="line">                return o1.getCreateTime().compareTo(o2.getCreateTime());</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        </span><br><span class="line">        &#125;);</span><br><span class="line">        System.err.println(&quot;排序后：&quot;);</span><br><span class="line">        for (User user : list) &#123;</span><br><span class="line">            System.err.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>控制台</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">排序前：</span><br><span class="line">User [user=张三, age=17, createTime=20181212]</span><br><span class="line">User [user=李四, age=2, createTime=20171105]</span><br><span class="line">User [user=王五, age=11, createTime=19950504]</span><br><span class="line">User [user=李六, age=5, createTime=20200406]</span><br><span class="line">排序后：</span><br><span class="line">User [user=王五, age=11, createTime=19950504]</span><br><span class="line">User [user=李四, age=2, createTime=20171105]</span><br><span class="line">User [user=张三, age=17, createTime=20181212]</span><br><span class="line">User [user=李六, age=5, createTime=20200406]</span><br></pre></td></tr></table></figure><p>可以看出，不同之处只是在compare方法内把对象中要比较的属性抽出来而已</p><p>默认升序，降序的话换下顺序即可,</p><p>如果针对属性为Integer的属性的话，方法也是一样</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;如果list只包含string的话，排序其实很方便&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span</summary>
      
    
    
    
    <category term="学习记录" scheme="https://hfanss.com/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="Java" scheme="https://hfanss.com/tags/Java/"/>
    
  </entry>
  
</feed>
