<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>github pages使用免费CDN加速-netlify</title>
      <link href="/2025/github%20pages%E4%BD%BF%E7%94%A8%E5%85%8D%E8%B4%B9CDN%E5%8A%A0%E9%80%9F-netlify.html"/>
      <url>/2025/github%20pages%E4%BD%BF%E7%94%A8%E5%85%8D%E8%B4%B9CDN%E5%8A%A0%E9%80%9F-netlify.html</url>
      
        <content type="html"><![CDATA[<p>github pages大家都知道，很多人用它来做个人博客，但是github pages在国内的访问速度很拉跨，经常访问不正常，对github pages加速的方式有很多种，今天介绍一下netlify，优点是，一键关联github项目，github更新，会自动部署，方便快捷，且免费，速度也很不错</p><p>Netlify是什么呢？</p><p>‌静态网站托管‌：Netlify专为HTML/CSS/JS等静态资源设计，支持主流前端框架（如React、Vue、Hugo等），无需服务器运维即可实现全球CDN加速。‌‌<br>1‌.自动化工作流‌：<br>集成GitHub/GitLab/Bitbucket仓库，代码推送后自动触发构建与部署。‌‌<br>2.提供自定义构建命令（如npm run build）和输出目录配置。‌‌<br>3‌.免费基础服务‌：<br>包含100GB月流量、300分钟构建时长及免费HTTPS证书。‌‌<br>4.提供*.netlify.app子域名，支持绑定自定义域名-注意：<strong>不用备案！！！</strong></p><p>看看这介绍，是不是跟github pages特别搭配，100GB流量对于个人而言完全使用不完，如果把图片再单独拆出来，光文字资源来说，非常绰绰有余了。至于图床可以参考这个文章，也是免费的，<a href="https://hfanss.com/2025/github%20%E5%9B%BE%E5%BA%8A%E4%BD%BF%E7%94%A8%E5%85%8D%E8%B4%B9cdn%E5%8A%A0%E9%80%9F-jsdelivr">github图床使用CDN加速</a></p><h2 id="一、部署github-pages"><a href="#一、部署github-pages" class="headerlink" title="一、部署github pages"></a>一、部署github pages</h2><p>静态博客怎么部署在github pages上就不多赘述，很多参考资料。</p><h2 id="二、配置netlify"><a href="#二、配置netlify" class="headerlink" title="二、配置netlify"></a>二、配置netlify</h2><h3 id="1-登录netlify"><a href="#1-登录netlify" class="headerlink" title="1.登录netlify"></a>1.登录netlify</h3><p>使用github账号登录 <a href="https://app.netlify.com/">netlify</a></p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/107.jpg" alt=""></p><p>点击右侧新建项目-Add new project</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/108.jpg" alt=""></p><h3 id="2-选择github仓库"><a href="#2-选择github仓库" class="headerlink" title="2.选择github仓库"></a>2.选择github仓库</h3><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/109.png" alt=""></p><p>选择具体的仓库</p><p>第一个是选择netlify可用github所有仓库，第二个是选择netlify只能使用github指定的库，暂默认第二个我们github pages仓库即可</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/110.jpg" alt=""></p><h3 id="3-部署"><a href="#3-部署" class="headerlink" title="3.部署"></a>3.部署</h3><p>Team:默认项目名</p><p>project name:默认项目名，也可自定义，建议项目名，影响生成的默认域名</p><p>往下拉：</p><p>branch to deploy: main   部署分支，github默认main分支，可以改其他</p><p>剩余的可不用填</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/111.jpg" alt=""></p><p>点击最下面 Deploy 项目名</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/112.jpg" alt=""></p><p>部署成功后显示下图</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/113.jpg" alt=""></p><p>点击图中标识1的位置，可以简单预览下，没问题的话就可以了</p><p>到这一步其实已经结束了，但是有自定义域名的可以继续往下看</p><h3 id="4-自定义域名"><a href="#4-自定义域名" class="headerlink" title="4.自定义域名"></a>4.自定义域名</h3><p>点击上图中标识2的位置，右侧点击Add a domin-Add a domain you already own（添加一个已经拥有的域名）</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/115.jpg" alt=""></p><p>点击验证 verify</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/116.jpg" alt=""></p><p>然后会让你去验证域名，因为我已经验证过了，所以没法截图，大概意思就是让你在域名提供商那里去首先验证下该域名是自己的，需要添加个一串数值指向到子域名，参考下图</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/117.jpg" alt=""></p><p>验证好之后，就直接将域名指向它指定的地址就等待就行了，参考下图</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/118.jpg" alt=""></p><p>验证好之后是这样的，参考下图，就是红框内没有验证DNS的字样，并且左边域名也变绿就可以了</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/119.jpg" alt=""></p><p>至于https的ssl证书，有netlify自动配置，刚添加完域名后，它会自动配置ssl证书，参考下图</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/120.jpg" alt=""></p><p>上图这种就是正在配置证书，时间可能久一点，需要10-20分钟左右</p><p>配置证书成功后是这样的，显示对号就是OK的，下面domains那里就是对应的自己的自定义域名，时间是3个月，但是到期后它会自动续发ssl证书，不用担心。</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/121.jpg" alt=""></p><p>OK，大功告成，现在就可以大胆的访问，不用担心github pages访问不正常的情况了</p>]]></content>
      
      
      <categories>
          
          <category> github pages </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> github pages </tag>
            
            <tag> github CDN </tag>
            
            <tag> github netlify </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github 图床使用免费CDN加速-jsdelivr</title>
      <link href="/2025/github%20%E5%9B%BE%E5%BA%8A%E4%BD%BF%E7%94%A8%E5%85%8D%E8%B4%B9CDN%E5%8A%A0%E9%80%9F-jsdelivr.html"/>
      <url>/2025/github%20%E5%9B%BE%E5%BA%8A%E4%BD%BF%E7%94%A8%E5%85%8D%E8%B4%B9CDN%E5%8A%A0%E9%80%9F-jsdelivr.html</url>
      
        <content type="html"><![CDATA[<p>github做图床大部分人都知道，但是国内访问速度不稳定，所以使用jsdelivr加速。</p><p>jsdelivr是什么呢？它是一个免费、快速和可信赖的CDN加速服务，直接集成在github中的，无需额外操作即可使用。</p><p>本文分两部份，最终实现的效果是：</p><p>在本地文件夹中某图片上点击鼠标右键，选中 上传至github图床，稍等片刻，在需要使用的地方直接Ctrl+v粘贴即可。</p><h2 id="一、怎么使用jsdelivr"><a href="#一、怎么使用jsdelivr" class="headerlink" title="一、怎么使用jsdelivr"></a>一、怎么使用jsdelivr</h2><h2 id="二、通过脚本一键上传图片至github，并返回地址到粘贴板"><a href="#二、通过脚本一键上传图片至github，并返回地址到粘贴板" class="headerlink" title="二、通过脚本一键上传图片至github，并返回地址到粘贴板"></a>二、通过脚本一键上传图片至github，并返回地址到粘贴板</h2><p>先来说第一部分</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.在github上创建一个项目，githubpic,公开项目</span><br><span class="line">2.随便上传一张图片xx.jpg</span><br><span class="line">3.访问CDN地址，第一个老是失联，目前用第二个</span><br><span class="line">https://cdn.jsdelivr.net/gh/github用户名/仓库名@master/xx.jpg</span><br><span class="line">https://gcore.jsdelivr.net/gh/github用户名/仓库名@master/xx.jpg</span><br><span class="line"></span><br><span class="line">这里注意一下，@master是jsdelivr默认的版本，不跟github的走，即github现在默认创建的原始分支是main(早前是master),访问CDN的时候还是@master</span><br></pre></td></tr></table></figure><p>这一部分结束，基本上就算作使用了CDN了，但我们日常操作肯定不会这么麻烦的去传，所以这里我结合这篇文章 <a href="https://blog.csdn.net/q2158798/article/details/82354216">个人图床的最简单制作-腾讯云COS</a> 做了个简单的脚本实现一键上传，一键使用</p><p>第二部分，一键上传</p><h3 id="1-github申请ssh密钥"><a href="#1-github申请ssh密钥" class="headerlink" title="1.github申请ssh密钥"></a>1.github申请ssh密钥</h3><p>这一部分网上很多，大家可自行搜索，也可看我找的这篇<a href="https://blog.csdn.net/crasowas/article/details/137211646">文章</a>，最终实现的就是拉取、上传代码都是免密的效果</p><h3 id="2-将刚才的项目githubpic拉取到某个目录-建议D盘-下，使用ssh拉取"><a href="#2-将刚才的项目githubpic拉取到某个目录-建议D盘-下，使用ssh拉取" class="headerlink" title="2.将刚才的项目githubpic拉取到某个目录(建议D盘)下，使用ssh拉取"></a>2.将刚才的项目githubpic拉取到某个目录(建议D盘)下，使用ssh拉取</h3><h3 id="3-处理脚本"><a href="#3-处理脚本" class="headerlink" title="3.处理脚本"></a>3.处理脚本</h3><h4 id="3-1在C盘根目录下创建目录commitGithub，在目录中创建commit-bat，打开编辑，将下列内容粘贴进去保存，注意修改其中的基础目录为仓库本地目录"><a href="#3-1在C盘根目录下创建目录commitGithub，在目录中创建commit-bat，打开编辑，将下列内容粘贴进去保存，注意修改其中的基础目录为仓库本地目录" class="headerlink" title="3.1在C盘根目录下创建目录commitGithub，在目录中创建commit.bat，打开编辑，将下列内容粘贴进去保存，注意修改其中的基础目录为仓库本地目录"></a>3.1在C盘根目录下创建目录commitGithub，在目录中创建commit.bat，打开编辑，将下列内容粘贴进去保存，注意修改其中的基础目录为仓库本地目录</h4><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">chcp</span> <span class="number">65001</span> &gt;<span class="built_in">nul</span>  :: 设置 <span class="built_in">cmd</span> 为 UTF-<span class="number">8</span> 编码</span><br><span class="line">:: =============================================</span><br><span class="line">:: 功能：右键上传图片到 Git (SSH方式) 并返回网络地址</span><br><span class="line">:: 使用方法：右键图片 → 选择&quot;上传到Git&quot;（需先配置SSH密钥）</span><br><span class="line">:: =============================================</span><br><span class="line">::<span class="number">1</span>.设置基础目录-必设,你的仓库拉取下来的本地路径</span><br><span class="line"><span class="built_in">set</span> &quot;base=D:\githubpic&quot;</span><br><span class="line"><span class="built_in">set</span> &quot;image_file=%~<span class="number">1</span>&quot;</span><br><span class="line"></span><br><span class="line">:: <span class="number">2</span>. 进入文件所在目录（确保 Git 命令在正确目录执行）</span><br><span class="line"><span class="built_in">cd</span> /d &quot;%~dp1&quot;</span><br><span class="line"></span><br><span class="line">:: <span class="number">3</span>. 检查是否是 Git 仓库</span><br><span class="line">git rev-parse --is-inside-work-<span class="built_in">tree</span> &gt;<span class="built_in">nul</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">errorlevel</span> <span class="number">1</span> (</span><br><span class="line">    <span class="built_in">echo</span> 错误：当前目录不是 Git 仓库！</span><br><span class="line">    <span class="built_in">pause</span></span><br><span class="line">    <span class="keyword">exit</span> /b</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">:: <span class="number">4</span>. 添加文件到暂存区并提交</span><br><span class="line">git add &quot;<span class="variable">%image_file%</span>&quot;</span><br><span class="line"><span class="built_in">set</span> &quot;commit_message=上传文件: %~nx1&quot;</span><br><span class="line">git commit -m &quot;<span class="variable">%commit_message%</span>&quot;</span><br><span class="line"></span><br><span class="line">:: <span class="number">5</span>. 使用SSH方式推送（不再转换地址，直接推送）:: 如果是其他分支，修改为对应分支名</span><br><span class="line">git push origin main || (</span><br><span class="line">    <span class="built_in">echo</span> ❌ Git 推送失败，错误代码: <span class="variable">%ERRORLEVEL%</span></span><br><span class="line">    <span class="built_in">pause</span></span><br><span class="line">    <span class="keyword">exit</span> /b <span class="variable">%ERRORLEVEL%</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> ✅ Git 推送成功，继续执行后续操作...</span><br><span class="line"></span><br><span class="line">:: --------提交成功，下面开始拼装CDN路径--------</span><br><span class="line">:: <span class="number">6</span>. 获取 Git 远程SSH地址（用于生成网络访问URL）</span><br><span class="line"><span class="keyword">for</span> /f &quot;tokens=*&quot; <span class="variable">%%A</span> <span class="keyword">in</span> (&#x27;git config --get remote.origin.url&#x27;) <span class="keyword">do</span> <span class="built_in">set</span> &quot;git_remote=<span class="variable">%%A</span>&quot;</span><br><span class="line"></span><br><span class="line">:: 检查是否是SSH地址（如 git@github.com:user/repo.git）</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%git_remote%</span> | <span class="built_in">findstr</span> &quot;git@&quot; &gt;<span class="built_in">nul</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">errorlevel</span> <span class="number">1</span> (</span><br><span class="line">    <span class="built_in">echo</span> 错误：当前远程地址不是SSH格式！请使用SSH地址（如 git@github.com:user/repo.git）</span><br><span class="line">    <span class="built_in">pause</span></span><br><span class="line">    <span class="keyword">exit</span> /b</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">::  如果有二级目录，这里会拆分路径</span><br><span class="line"><span class="built_in">set</span> &quot;<span class="built_in">dir</span>=%~dp1&quot;</span><br><span class="line"><span class="keyword">call</span> <span class="built_in">set</span> &quot;p=<span class="variable">%%d</span>ir:<span class="variable">%base%</span>=<span class="variable">%%&quot;</span></span><br><span class="line"><span class="built_in">set</span> &quot;p=<span class="variable">%p:\=/%</span>&quot;</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> &quot;<span class="variable">%p:~0,1%</span>&quot;==&quot;/&quot; <span class="built_in">set</span> &quot;p=/<span class="variable">%p%</span>&quot;</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> &quot;<span class="variable">%p:~-1%</span>&quot;==&quot;/&quot; <span class="built_in">set</span> &quot;p=<span class="variable">%p%</span>/&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> &quot;image_name=%~nx1&quot;</span><br><span class="line"><span class="built_in">set</span> &quot;image_file_path=<span class="variable">%p%</span><span class="variable">%image_name%</span>&quot;</span><br><span class="line"></span><br><span class="line">:: <span class="number">7</span>. 生成网络访问URL（GitHub示例）将SSH地址转换为HTTPS格式的raw地址</span><br><span class="line">:: 替换SSH地址为HTTPS-jsdelivr-CDN地址（GitHub）</span><br><span class="line"><span class="built_in">set</span> &quot;git_remote_https=<span class="variable">%git_remote:git@github.com:=%</span>&quot;</span><br><span class="line">:: jsdelivr的CDN地址经常被污染，特提供几个替代地址，以便不时之需，如果全部被污染，那就没办法了，替换下面的前缀即可</span><br><span class="line">:: https://gcore.jsdelivr.<span class="built_in">net</span>/gh/  短暂测试，这个地址的失联率最低，暂时用这个</span><br><span class="line">:: https://testingcf.jsdelivr.<span class="built_in">net</span>/gh/</span><br><span class="line">:: https://cdn.jsdelivr.<span class="built_in">net</span>/gh/    这个地址经常跳转到 raw.github的网站上，相当于没有启用CDN</span><br><span class="line"><span class="built_in">set</span> &quot;git_remote_https=https://gcore.jsdelivr.<span class="built_in">net</span>/gh/<span class="variable">%git_remote_https:.git=%</span>&quot;</span><br><span class="line">:: 下面这个是开启jsdelivr的CDN加速的地址,目前github最新建的项目是main版本，但是jsdelivr还是默认master版本</span><br><span class="line"><span class="built_in">set</span> &quot;image_network_url=<span class="variable">%git_remote_https%</span>@master<span class="variable">%image_file_path%</span>&quot;</span><br><span class="line">:: <span class="number">8</span>. 输出网络地址</span><br><span class="line"><span class="built_in">echo</span> 图片已上传！网络访问地址：</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%image_network_url%</span></span><br><span class="line"></span><br><span class="line">:: 复制到剪贴板（需 clip 命令支持）</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%image_network_url%</span> | clip</span><br><span class="line"><span class="built_in">echo</span> 地址已复制到剪贴板！</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 已上传完毕，Ctrl + v 即可粘贴，窗口将在<span class="number">5</span>秒后关闭...</span><br><span class="line">timeout /t <span class="number">5</span> /nobreak &gt;<span class="built_in">nul</span></span><br><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure><h4 id="3-2添加右键快捷键"><a href="#3-2添加右键快捷键" class="headerlink" title="3.2添加右键快捷键"></a>3.2添加右键快捷键</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WIN+R调用运行库，输入regedit，会打开注册表编辑器</span><br><span class="line">找到目录 计算机\HKEY_CLASSES_ROOT\*\shell</span><br></pre></td></tr></table></figure><p>在shell上右键新建项：上传github图床，在 上传github图床  上右键新建项：command,如图：</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/001.png" alt=""></p><p>右侧双击默认，修改值为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd.exe /K &quot;C:\commitGithub\commit.bat &quot;%1&quot;&quot;</span><br></pre></td></tr></table></figure><p>至此，大功告成。</p><p>使用的话，把图片拖到本地项目目录下，右键点击  上传github图床  等待命令执行完即可</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/002.png" alt=""></p><p>成功状态：</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/003.png" alt=""></p><p>上传成功的图片大概会有1分钟-5分钟延时。</p>]]></content>
      
      
      <categories>
          
          <category> 免费图床 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github图床 </tag>
            
            <tag> 免费CDN图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java实体对象的非空校验</title>
      <link href="/2021/java%E5%AE%9E%E4%BD%93%E5%AF%B9%E8%B1%A1%E7%9A%84%E9%9D%9E%E7%A9%BA%E6%A0%A1%E9%AA%8C.html"/>
      <url>/2021/java%E5%AE%9E%E4%BD%93%E5%AF%B9%E8%B1%A1%E7%9A%84%E9%9D%9E%E7%A9%BA%E6%A0%A1%E9%AA%8C.html</url>
      
        <content type="html"><![CDATA[<p>工作中遇到针对API中存在的实体类的非空校验，如果不封装只能一个一个获取再校验。比较麻烦，所以写了个通用工具类，通过反射去实现效果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 功能描述:对象非空校验</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: hfanss</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2021-07-12 6:52:11 PM</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">vaildate</span><span class="params">(Object vo, List&lt;String&gt; parms)</span></span><br><span class="line">&#123;</span><br><span class="line">Field[] fields = vo.getClass().getDeclaredFields();</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (String validName : parms)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (Field fi : fields)</span><br><span class="line">&#123;</span><br><span class="line">fi.setAccessible(<span class="literal">true</span>);<span class="comment">// 打开私有属性，否则只能获取到共有属性</span></span><br><span class="line"><span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> fi.getName();<span class="comment">// 获取属性名称</span></span><br><span class="line"><span class="keyword">if</span> (!validName.equals(name))</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> fi.get(vo) == <span class="literal">null</span> ? <span class="string">&quot;&quot;</span> : fi.get(vo).toString();</span><br><span class="line"><span class="keyword">if</span> (StringUtils.isBlank(value))</span><br><span class="line">&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;参数：&#123;&quot;</span>+name+<span class="string">&quot;&#125;值为空&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (IllegalArgumentException | IllegalAccessException e)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 记录日志</span></span><br><span class="line">System.out.println(<span class="string">&quot;校验对象失败：&#123;&quot;</span> + vo + <span class="string">&quot;&#125;,异常信息：&#123;&quot;</span> + e + <span class="string">&quot;&#125;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">TestVO</span> <span class="variable">vo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestVO</span>();</span><br><span class="line"></span><br><span class="line">vo.setId(<span class="number">1</span>);</span><br><span class="line"><span class="comment">//vo.setName(&quot;hfanss&quot;);</span></span><br><span class="line">vo.setSf(<span class="string">&quot;111&quot;</span>);</span><br><span class="line">List&lt;String&gt; parms = Arrays.asList(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;number&quot;</span>);</span><br><span class="line">vaildate(vo, parms);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实体类参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> String number;</span><br><span class="line"><span class="keyword">private</span> String sf;</span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line">................................</span><br></pre></td></tr></table></figure><p>测试结果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">控制台输出  </span><br><span class="line">参数：&#123;name&#125;值为空</span><br><span class="line">参数：&#123;number&#125;值为空</span><br></pre></td></tr></table></figure><p>代码地址 ： <a href="https://gitee.com/iyohei/hfanssutils/blob/master/src/main/java/com/hfanss/utils/EntityUtils.java">点我</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>魔都又限行了啊</title>
      <link href="/2020/%E9%AD%94%E9%83%BD%E5%8F%88%E9%99%90%E8%A1%8C%E4%BA%86%E5%95%8A.html"/>
      <url>/2020/%E9%AD%94%E9%83%BD%E5%8F%88%E9%99%90%E8%A1%8C%E4%BA%86%E5%95%8A.html</url>
      
        <content type="html"><![CDATA[<p>伟大的魔都又限行了，外地牌照真的是越来越难了</p><p>从10.1起，外环内所有高架都不能上了，周六日除外</p><p>明年5.1起，所有外地牌全面限行外环内</p><p>emmm……</p><p>我刚买的车，上的老家的牌子，这就悲催了啊</p><p>很多上海人上的苏州牌子，也很纠结</p><p>一个沪牌10W</p><p>官方的目的是说为了缓解交通拥堵，但其实没有外牌的高架一样很拥堵，</p><p>我认为纯粹的限制外牌根本解决不了拥堵，只是为了推动上海的荣威，名爵电动车的售卖</p><p>真正有效的限行是尾号限行</p><p>可能以后会这样，但是有了现在外牌的限行，以后尾号限行也没外牌啥事了</p><p>此举会导致多少人因为拍照问题离沪呢？</p>]]></content>
      
      
      <categories>
          
          <category> 点滴生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>域名做个邮箱</title>
      <link href="/2020/%E5%9F%9F%E5%90%8D%E5%81%9A%E4%B8%AA%E9%82%AE%E7%AE%B1.html"/>
      <url>/2020/%E5%9F%9F%E5%90%8D%E5%81%9A%E4%B8%AA%E9%82%AE%E7%AE%B1.html</url>
      
        <content type="html"><![CDATA[<p>既然目的是邮箱，那咱们就选最简单的一个方式</p><p>1.打开<a href="http://ym.163.com/">网易企业邮箱</a>，点击免费创建</p><p>2.填写自己的域名(确保自己能解析)，组织机构名称随便填一下就可以，下一步</p><p>3.填写管理员信息，下一步</p><p>4.验证域名，根据图文指示就行(解析过网站的都会，不会的百度下解析网站)，下一步</p><p>5.创建成功，并点击登录</p><p>6.会提示你需要实名认证+MX解析(正在验证中)，一般12小时会通过，会给你的密保邮箱发个通过邮件</p><p>7.打开<a href="http://ym.163.com/">网易企业邮箱</a>，登录 完毕</p>]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 疫情 </tag>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo部署至Dcloud</title>
      <link href="/2020/hexo%E9%83%A8%E7%BD%B2%E8%87%B3Dcloud.html"/>
      <url>/2020/hexo%E9%83%A8%E7%BD%B2%E8%87%B3Dcloud.html</url>
      
        <content type="html"><![CDATA[<p>先放上官方简介</p><p><a href="https://uniapp.dcloud.io/uniCloud/hosting?id=%e7%ae%80%e4%bb%8b">https://uniapp.dcloud.io/uniCloud/hosting?id=%e7%ae%80%e4%bb%8b</a></p><p>具体步骤大致说一下</p><p>1.申请uniCloud账号</p><p>2.创建服务空间</p><p>3.下载HBuilderX ，并登陆刚才的账号</p><p>4.选中你本地的hexo生成后的public文件夹</p><p>5.右键点击发行-上传到网站服务器</p><p>6.网站打开刚才创建的服务空间</p><p>左侧点击前端网页托管，右侧点击参数管理</p><p>这里可以配置自定义域名、添加证书</p><p>注意事项：</p><p>1.发行的时候，它会提示你是否替换源文件，这里建议全部替换，因为不管你是修改老文件还是新增文件都会涉及到原来文件，不过这里说一下，它的速度很慢，文件少就快，文件多就慢，你也可以选择在web控制台上传，那个会很快</p><p>2.既然免费就会有一定的不足，它最大的不足就是不主动提供https服务，即使你提供了https证书</p><p>当然这里也有解决方式：修改index模版，位置在主题的layout根目录，一般名字为index.ejs，</p><p>打开后在最顶部加入如下代码，完美解决</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> &lt;script&gt;</span><br><span class="line"> var url = window.location.href; if(url.indexOf(&quot;localhost&quot;) &lt; 0)&#123;if (url.indexOf(&quot;https&quot;) &lt; 0) &#123;url = url.replace(&quot;http:&quot;, &quot;https:&quot;);window.location.replace(url);&#125;&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>3.还有最为诟病的一点，并非即时部署，发行完之后，大概会有5-10分钟的延时，不过可以接受</p><p>4.当然最主要的优点还是国内阿里云服务器，免费，自带CDN，操作简单</p><p>我个人备份了一个</p><p><a href="https://blog.hfanss.com/">blog.hfanss.com</a></p><p>目前本站主站coding，副站dcloud，源代码部署在gitee上</p><p>有问题下方留言</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> hexo部署 </tag>
            
            <tag> Dcloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>消失的我又回来了</title>
      <link href="/2020/%E6%B6%88%E5%A4%B1%E7%9A%84%E6%88%91%E5%8F%88%E5%9B%9E%E6%9D%A5%E4%BA%86.html"/>
      <url>/2020/%E6%B6%88%E5%A4%B1%E7%9A%84%E6%88%91%E5%8F%88%E5%9B%9E%E6%9D%A5%E4%BA%86.html</url>
      
        <content type="html"><![CDATA[<h2 id="说说驾照"><a href="#说说驾照" class="headerlink" title="说说驾照"></a>说说驾照</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">去年4月报考，5月科一，7月科二，十月科二补考，十一月科二补考通过</span><br><span class="line">十一月底科三考试，十二月中科三补考，疫情影响今年五月科三补考，六月科三通过，月底科四通过</span><br><span class="line"></span><br><span class="line">回顾我的驾考，完全是一幅悲剧史，前期是因为驾校垃圾，不负责，后期转成互联网驾校，教的挺好，练的也挺好，</span><br><span class="line">但是科三每次考试都会出小状况，不是漏打灯就是没超过三秒，还有外来车辆闯入的应急处理，导致科三考了四次，</span><br><span class="line">惊喜的是第四次考试的时候我还感冒了，发低烧在家隔离，而且第四次我一次车都没练，就这样还考过了</span><br><span class="line">满分。。。</span><br><span class="line"></span><br><span class="line">拿到驾照的那一刻真的心累，从报考至今，花费的综合成本已经超过30K，心累</span><br></pre></td></tr></table></figure><h2 id="说说疫情"><a href="#说说疫情" class="headerlink" title="说说疫情"></a>说说疫情</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">疫情爆发初期，在老家的时候还跟湖北人接触过，所幸也没事情</span><br><span class="line">总计在家呆了45左右，老家河南的，因为紧邻湖北，疫情防控还是挺严格的</span><br><span class="line">在家因为家里电脑配置太低，也捣鼓不了博客，每天就是玩玩手机，看看技术博客，过的相当无聊</span><br><span class="line">过来上海后隔离了半个月，此时公司已经要求追踪工作进度</span><br><span class="line">4月开始上班，就开始了悲剧的工作</span><br><span class="line"></span><br><span class="line">庆幸的是我和还在看博文的你都没有感染新冠，加油</span><br><span class="line">在此感谢奋斗在一线的医护工作者，(｀･ω･´)ゞ敬礼っ</span><br></pre></td></tr></table></figure><h2 id="说说工作"><a href="#说说工作" class="headerlink" title="说说工作"></a>说说工作</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">4月上班至今7月，工作很繁忙，因为团队中有一人是湖北人，工作的重担全压在我身上</span><br><span class="line">公司做了一个文件转换驱动，主要功能是点到点文件转换，相当于一个中间驱动，当然并不单纯，领导加了业务处理</span><br><span class="line">银行的需求大概都知道，最重要最复杂的就是业务，翻来覆去的调用，</span><br><span class="line">总代码量10K+，我个人写了大概45天，测试用了50天，7月中正式上线</span><br><span class="line">总加班200+H，曽连续上班两周，每晚10点以后下班</span><br><span class="line">总算正常上线，也算完美</span><br></pre></td></tr></table></figure><h2 id="说说生活"><a href="#说说生活" class="headerlink" title="说说生活"></a>说说生活</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">年后也没时间去学习，下半年要补回来</span><br><span class="line"></span><br><span class="line">前几天项目上线后看了下网站，ssl证书到期了，CDN也不正常了，又花点时间解决</span><br><span class="line"></span><br><span class="line">今年总归是多事之年，疫情+中美之间的矛盾，还是不建议换工作了，有空多学习学习</span><br></pre></td></tr></table></figure><p>吐槽一下</p>]]></content>
      
      
      <categories>
          
          <category> 点滴生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 疫情 </tag>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识Python-99乘法表</title>
      <link href="/2019/%E5%88%9D%E8%AF%86Python-99%E4%B9%98%E6%B3%95%E8%A1%A8.html"/>
      <url>/2019/%E5%88%9D%E8%AF%86Python-99%E4%B9%98%E6%B3%95%E8%A1%A8.html</url>
      
        <content type="html"><![CDATA[<p>python的份额一年比一年多，今天也来体验下</p><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h2><p>网上教程很多，随便推荐一篇吧，老廖的</p><p><a href="https://www.liaoxuefeng.com/wiki/1016959663602400/1016959856222624">https://www.liaoxuefeng.com/wiki/1016959663602400/1016959856222624</a></p><h2 id="2-上手"><a href="#2-上手" class="headerlink" title="2.上手"></a>2.上手</h2><p>因为我是做java开发的，所以使用的IDE是sts,安装了一下插件</p><p><a href="https://blog.csdn.net/qq_36955890/article/details/93191243">https://blog.csdn.net/qq_36955890/article/details/93191243</a></p><h2 id="3-体验"><a href="#3-体验" class="headerlink" title="3.体验"></a>3.体验</h2><p>来个99乘法表吧</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">@note:</span><br><span class="line">@author: hfanss</span><br><span class="line">@date: 2019/10/20 14:27:27</span><br><span class="line"></span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">#打印一个简单的99乘法表</span><br><span class="line">#外层循环  控制左边1-9</span><br><span class="line">for i in range(1,10):</span><br><span class="line">    #内层循环控制 右边1-9</span><br><span class="line">    for j in range(1,i+1):</span><br><span class="line">        #print(&quot;&#123;0&#125;*&#123;1&#125;=&#123;2&#125;&quot;.format(i,j,i*j),end = &quot; &quot;)</span><br><span class="line">        print(&quot;&#123;0&#125;*&#123;1&#125;=&#123;k&#125;&quot;.format(i,j,k=i*j),end = &quot; &quot;)</span><br><span class="line">    print()</span><br></pre></td></tr></table></figure><p>完美打印</p><h2 id="4-随想"><a href="#4-随想" class="headerlink" title="4.随想"></a>4.随想</h2><p>简单来说，python的语法相对来说更简洁些，一些常用的操作做了简化，比如说键盘录入，只需要input()可以了，java中很麻烦</p><p>输出的时候也做了一些定制，上面打印99乘法表的时候就可以看出来了</p><p>嗯，简单体验下，有时间再继续学下去</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 99乘法表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>考生分配考场的简单实现</title>
      <link href="/2019/%E8%80%83%E7%94%9F%E5%88%86%E9%85%8D%E8%80%83%E5%9C%BA%E7%9A%84%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0.html"/>
      <url>/2019/%E8%80%83%E7%94%9F%E5%88%86%E9%85%8D%E8%80%83%E5%9C%BA%E7%9A%84%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前段时间有小学弟咨询我考生分配考场的逻辑该怎么做，简单讲解了一下，在这里顺便记录下</p><h2 id="demo逻辑"><a href="#demo逻辑" class="headerlink" title="demo逻辑"></a>demo逻辑</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 循环班级数组  A</span><br><span class="line">2. 循环每班总座位  B</span><br><span class="line">3. 在B中按照顺序给每个位置分配上  通过随机数取到的随机学号</span><br><span class="line">4. 打印输出</span><br><span class="line">PS:重点要保证3不能重复</span><br></pre></td></tr></table></figure><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p>我做的是个非常简单的demo，班级个数和每班人数都是固定的。当然实际生活中可能不是固定的，就需要根据实际情况去优化了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1126</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">banji</span> <span class="operator">=</span> <span class="number">10</span>;<span class="comment">//班级个数</span></span><br><span class="line"><span class="type">int</span> <span class="variable">renShu</span> <span class="operator">=</span> <span class="number">50</span>;<span class="comment">//每班座位数</span></span><br><span class="line"><span class="type">int</span> <span class="variable">renShuTotal</span> <span class="operator">=</span> banji * renShu;<span class="comment">//待分配座位总数</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 生成随机的学号list，放在set里没有重复</span></span><br><span class="line"><span class="comment">* 实际情况：该元素应从数据库中查出，且不可能出现重复</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">Set&lt;String&gt;  xueHaoNoList = getXueHaoNo();</span><br><span class="line">Map&lt;Long,String&gt;[] listMap = <span class="keyword">new</span> <span class="title class_">Map</span>[banji];<span class="comment">//用来存放已生成的座位+学号</span></span><br><span class="line">List&lt;Long&gt; s3 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();<span class="comment">//用来存放不重复的随机数</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>, index = banji; i&lt;= index; i++)</span><br><span class="line">&#123;</span><br><span class="line">Map&lt;Long,String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();<span class="comment">//用来存放每个班的座位+学号</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">1</span>,index2=renShu; j&lt;=index2;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">Long</span> <span class="variable">sss</span> <span class="operator">=</span> getRandom(renShuTotal,s3);</span><br><span class="line"><span class="type">long</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(String xueHao : xueHaoNoList)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (s2==sss)</span><br><span class="line">&#123;</span><br><span class="line">map.put((<span class="type">long</span>)j,xuehao);</span><br><span class="line">&#125;</span><br><span class="line">s2++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">listMap[i-<span class="number">1</span>]=map;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出确认</span></span><br><span class="line"><span class="type">long</span> <span class="variable">i2</span> <span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(Map&lt;Long,String&gt; map : listMap)</span><br><span class="line">&#123;</span><br><span class="line">System.err.println(<span class="string">&quot;第&quot;</span>+i2+<span class="string">&quot;个班级的考生分配情况如下：&quot;</span>);</span><br><span class="line">System.err.println(map);</span><br><span class="line">System.err.println(<span class="string">&quot;********************************************&quot;</span>);</span><br><span class="line">｝</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *获取500以内的随机数，这里用了递归，以保证不会重复</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">private</span> Long <span class="title function_">getRandom</span><span class="params">(<span class="type">int</span> renShuTotal,List&lt;Long&gt; s3)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">Long</span> <span class="variable">sss</span> <span class="operator">=</span> (<span class="type">long</span>)(Math.random()*renShuTotal);</span><br><span class="line"><span class="keyword">if</span>(s3.contains(sss))</span><br><span class="line">&#123;</span><br><span class="line">sss= getRandom(renShuTotal,s3);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">s3.add(sss);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sss;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*获取随机学号，*1000000000用来保证重复几率最小</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">private</span> Set&lt;String&gt; <span class="title function_">getXueHaoNo</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">Set&lt;String&gt; xuehaoNoList = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>,index = <span class="number">500</span>; i&lt;index;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">Long</span> <span class="variable">ss</span> <span class="operator">=</span> (<span class="type">long</span>)(Math.random()*<span class="number">1000000000</span>);</span><br><span class="line">xuehaoNoList.add(ss.toString());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> xuehaoNoList;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考生分配考场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次糟糕的驾照学习经历</title>
      <link href="/2019/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%B3%9F%E7%B3%95%E7%9A%84%E9%A9%BE%E7%85%A7%E5%AD%A6%E4%B9%A0%E7%BB%8F%E5%8E%86.html"/>
      <url>/2019/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%B3%9F%E7%B3%95%E7%9A%84%E9%A9%BE%E7%85%A7%E5%AD%A6%E4%B9%A0%E7%BB%8F%E5%8E%86.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>4月份报了一个驾校，同事推荐的，想着教练是女的，能比较愉快的拿证，就报名了。随之就是噩梦的开始了</p></blockquote><p>科一：</p><p>因为当时上海学习驾照需要居住证，而我一直嫌麻烦没来得及去办，就报了异地（南通）考试的，报名之后就开始催考科一（因为我在报名之前就已经在APP上学习了科一），但是驾校竟然拖了半个月才给我去报名（what  fuck？），就是所谓的录个人脸之类的，5分钟搞定的事情，要跑一趟南通。。。但是更奇葩的是，驾校包的车竟然没人跟着过去，司机拉到指定位置就让我们下车，根本不知道在哪啊？给教练打电话，回复：自己找！fuck!幸好是找到了。。但是这个办事方式真的是。。。*<em>&amp;￥%……@</em>%#@#……</p><p>好了。报上名原本想很快就会考科一。不然，这次又拖了半个月。。。跟上次一样，没人带（fuck..fuck）</p><p>科二：</p><p>科一完了，终于科可以车了，去练车场（一个废弃的公路，画了几条线就是练车场了^-^）,教练说要练静车（既报废的车辆，让你在上面练习起步，停车，打方向盘），这些不是科三才开始的吗？。。。</p><p>练了3天静车，终于可以摸车了，下班去了后，教练说，你先跟那位同学（一位练了很久的学员）练，于是我就开始了为期两个月的跟同学学车的时光，期间还是我主动找教练让她教我一下，她只教了我不到10分钟！到快考试的时候，才跟着教的多了一会！</p><p>南通考试：</p><p>很多细节上海教练根本没讲，比如说，上车准备步骤，遇到突发情况该怎么处理。。都是南通这边给讲的。</p><p>所以，不可避免的，我挂科了。不知道是紧张还是怎么滴，走神了，回过神来 点早过了。。。崩溃！</p><p>然后回上海后，我就开始催补考。催了俩月，你敢信？那段时间气坏了。别人挂科的都又去考试了，新学员也去考试了，就我T.M的说报不上。气死了。。。</p><p>好吧，第二次科二，本来想着一把过的。没想到又出问题了，倒挡偶发性挂不上，两次都挂不上，卡在倒车入库那里，但是侧方入库一下就挂上了。等我两次机会用完，我又挂了一下，这次却挂上了。。。悲催（倒挡是基本操作，不可能是技术问题）其他人用那个车都没问题。。我只好又 ‘被‘ 挂科了。。。</p><p>现在已经10.1号了。还在等着补考，不知道这次要等多久。很崩溃。发帖吐槽吐槽，这段时间为了练车，博客基本没怎么更新，没想到要三进宫的节奏。。</p><p>吐槽：</p><p>报了这个驾校真的很后悔，槽点太多我给总结了一下</p><p>1.异地跟上海的合作不紧密，去那边人家不怎么管，爱搭不理的</p><p>2.练车环境太low，用的车全部是年检不合格的车，破破烂烂的，总担心练着练着趴窝了</p><p>3.教练太少（只有两个，科二一个，科三一个），态度不好，教你的时候的就不说了，没教你的时候，什么，别给车撞坏了，不要开空调，动不动就是车坏了要赔钱之类的。。。关键是  这车本来就破的不行了。。</p><p>4.乱收费比较严重，随意征收费用，科二，科三练车前必须先交考试钱，才让练车，不然不让摸车，挂科后，需要交200元补练车费用。。。后来升到600。。。</p><p>5.练车时间随意更改，刚报名的时候是早9-晚8练车，中午不休息，后来改为下午2点-下午8点，再后来改为下午4点-8点，然后又改为下午2点-下午5点，现在又改为早9-晚5，中午休息一小时，我本来就在这附近上班，原本想着中午可以来练1个小时，下班来练俩小时，，等考完科一后，全部泡汤</p><p>如果可以重新选择一次驾校的话，我绝对不会选它了</p><p>上海外培驾校-上海浦东新区财神庙附近练车</p><p>大家要是在这附近的千万别报他们驾校了。。。</p>]]></content>
      
      
      <categories>
          
          <category> 点滴生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 驾照 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot实现拦截器</title>
      <link href="/2019/SpringBoot%E5%AE%9E%E7%8E%B0%E6%8B%A6%E6%88%AA%E5%99%A8.html"/>
      <url>/2019/SpringBoot%E5%AE%9E%E7%8E%B0%E6%8B%A6%E6%88%AA%E5%99%A8.html</url>
      
        <content type="html"><![CDATA[<p>首先，你的项目要能跑起来，且基于springboot的</p><p>boot的拦截器不用配置web.xml，按照特定名字书写，它会自动识别（位置随便放，只要在代码目录下就可以）</p><p>1.拦截器  SessionInterceptor.java </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">package com.hfanss.blog.utils;</span><br><span class="line"></span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line">import org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line">import org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 功能描述:拦截器实现类</span><br><span class="line"> * @author: hfanss</span><br><span class="line"> * @date: 2019年6月25日 下午9:23:32 </span><br><span class="line"> */</span><br><span class="line">public class SessionInterceptor implements HandlerInterceptor</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception</span><br><span class="line">&#123;</span><br><span class="line">System.err.println(&quot;拦截器进来了,路径为：&quot;+request.getRequestURI());</span><br><span class="line">if (request.getRequestURI().equals(&quot;/admin/**&quot;))</span><br><span class="line">&#123;</span><br><span class="line">//TODO  验证登录token</span><br><span class="line">return true;</span><br><span class="line">&#125;else &#123;</span><br><span class="line"></span><br><span class="line">return true;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception</span><br><span class="line">&#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception</span><br><span class="line">&#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.路径 SessionConfiguration.java</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">package com.hfanss.blog.utils;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.format.FormatterRegistry;</span><br><span class="line">import org.springframework.http.converter.HttpMessageConverter;</span><br><span class="line">import org.springframework.validation.MessageCodesResolver;</span><br><span class="line">import org.springframework.validation.Validator;</span><br><span class="line">import org.springframework.web.method.support.HandlerMethodArgumentResolver;</span><br><span class="line">import org.springframework.web.method.support.HandlerMethodReturnValueHandler;</span><br><span class="line">import org.springframework.web.servlet.HandlerExceptionResolver;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.CorsRegistry;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.InterceptorRegistry;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.PathMatchConfigurer;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.ViewResolverRegistry;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 功能描述:配置拦截器路径 /admin/</span><br><span class="line"> * @author: hfanss</span><br><span class="line"> * @date: 2019年6月25日 下午9:37:21 </span><br><span class="line"> */</span><br><span class="line">@Configuration</span><br><span class="line">public class SessionConfiguration implements WebMvcConfigurer</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void addInterceptors(InterceptorRegistry registry)</span><br><span class="line">&#123;</span><br><span class="line">registry.addInterceptor(new  SessionInterceptor()).addPathPatterns(&quot;/admin/**&quot;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">.....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行项目，拦截器实现类方法内打个断点，会发现所有带 admin的路径都会被拦截到</p><p>可以根据需要定义拦截的路径，拦截器常用的功能也就用户登录控制</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springBoot </tag>
            
            <tag> 拦截器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis自动生成实体类及xml</title>
      <link href="/2019/Mybatis%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E5%AE%9E%E4%BD%93%E7%B1%BB%E5%8F%8Axml.html"/>
      <url>/2019/Mybatis%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E5%AE%9E%E4%BD%93%E7%B1%BB%E5%8F%8Axml.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Mybatis自动生成实体类及xml</p></blockquote><p>如果自己根据表手动生成需要的java文件无疑是非常麻烦的，在公司用的是自己写的一段代码生成，比较复杂，代码量也非常大，这几天刚好做一个boot的小demo，于是把mybatis的generator自动生成工具使用整理记录下</p><p>1.引入jar包-pom.xml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">&lt;!-- ..... --&gt;</span><br><span class="line">    &lt;!-- mysql驱动 --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;5.1.35&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!-- mysql自动生成实体类--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mybatis-generator-core&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.3.5&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;dependencies&gt;</span><br></pre></td></tr></table></figure><p>2.resources文件夹下增加mybatis-generator.xml文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;!DOCTYPE generatorConfiguration   PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;   &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&gt;</span><br><span class="line">&lt;generatorConfiguration&gt;</span><br><span class="line">&lt;context id=&quot;DB2Tables&quot; targetRuntime=&quot;MyBatis3Simple&quot;&gt;</span><br><span class="line">&lt;commentGenerator&gt;</span><br><span class="line">&lt;property name=&quot;suppressDate&quot; value=&quot;true&quot; /&gt;                 </span><br><span class="line">&lt;!-- 是否去除自动生成的注释 true：是 ： false:否 --&gt;</span><br><span class="line">&lt;!-- 这个注释是generator的注释。不是建表时手输的，没什么卵用--&gt;</span><br><span class="line">&lt;property name=&quot;suppressAllComments&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">&lt;/commentGenerator&gt;          </span><br><span class="line">&lt;!--数据库链接URL，用户名、密码 --&gt;</span><br><span class="line">&lt;jdbcConnection driverClass=&quot;com.mysql.jdbc.Driver&quot;</span><br><span class="line">connectionURL=&quot;jdbc:mysql://localhost:3306/hfanss?characterEncoding=utf-8&quot;</span><br><span class="line">userId=&quot;root&quot; password=&quot;123456&quot;&gt;</span><br><span class="line">&lt;/jdbcConnection&gt;</span><br><span class="line">&lt;javaTypeResolver&gt;</span><br><span class="line">&lt;property name=&quot;forceBigDecimals&quot; value=&quot;false&quot; /&gt;</span><br><span class="line">&lt;/javaTypeResolver&gt; </span><br><span class="line">&lt;!-- 设置Java类生成的位置 --&gt;</span><br><span class="line">&lt;javaModelGenerator targetPackage=&quot;com.hfanss.blog.VO&quot;</span><br><span class="line">targetProject=&quot;.\src\main\java&quot;&gt;</span><br><span class="line">&lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">&lt;property name=&quot;trimStrings&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">&lt;/javaModelGenerator&gt; </span><br><span class="line">&lt;!-- 生成映射文件的包名和位置 ***mapper.xml--&gt;</span><br><span class="line">&lt;sqlMapGenerator targetPackage=&quot;\spring\sqlMap&quot;</span><br><span class="line">targetProject=&quot;.\src\main\resources&quot;&gt;</span><br><span class="line">&lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">&lt;/sqlMapGenerator&gt; </span><br><span class="line">&lt;!-- 生成DAO的包名和位置 ***mapper.java--&gt;</span><br><span class="line">&lt;javaClientGenerator type=&quot;XMLMAPPER&quot;</span><br><span class="line">targetPackage=&quot;com.hfanss.blog.dao&quot; targetProject=&quot;.\src\main\java&quot;&gt;</span><br><span class="line">&lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">&lt;/javaClientGenerator&gt; </span><br><span class="line">&lt;!-- 所有要生成的表名 --&gt;</span><br><span class="line">&lt;table tableName=&quot;info&quot;&gt;&lt;/table&gt;</span><br><span class="line">&lt;table tableName=&quot;article&quot;&gt;&lt;/table&gt;</span><br><span class="line">&lt;table tableName=&quot;comments&quot;&gt;&lt;/table&gt;</span><br><span class="line">&lt;table tableName=&quot;links&quot;&gt;&lt;/table&gt;</span><br><span class="line">&lt;table tableName=&quot;menus&quot;&gt;&lt;/table&gt;</span><br><span class="line">&lt;table tableName=&quot;notice&quot;&gt;&lt;/table&gt;</span><br><span class="line">&lt;table tableName=&quot;articleSort&quot;&gt;&lt;/table&gt;</span><br><span class="line">&lt;/context&gt;</span><br><span class="line">&lt;/generatorConfiguration&gt;</span><br></pre></td></tr></table></figure><p>3.执行、GetAutoEntityAndDao放在src/test/java文件夹下,右键Aun as</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 功能描述:自动生成mapper.xml、dao、entity</span><br><span class="line"> * @author: hfanss</span><br><span class="line"> * @date: 2019年6月17日 下午8:25:55 </span><br><span class="line"> */</span><br><span class="line">public class GetAutoEntityAndDao &#123;</span><br><span class="line"></span><br><span class="line">// 该配置文件放在src\\main\\resources\\该路径下即可</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">args = new String[] &#123; &quot;-configfile&quot;, &quot;src\\main\\resources\\mybatis-generator.xml&quot;, &quot;-overwrite&quot; &#125;;</span><br><span class="line">ShellRunner.main(args);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>问题：实体类没有注释，十分不方便。</p><p>看了下源码。嗯，如果不改源码是不能实现生成自定义注释的。改天有时间再研究下！</p><p>附上项目及文件位置截图</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/027.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Mybatis </tag>
            
            <tag> mybatis-generator </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Thymeleaf模版中的取值</title>
      <link href="/2019/Thymeleaf%E6%A8%A1%E7%89%88%E4%B8%AD%E7%9A%84%E5%8F%96%E5%80%BC.html"/>
      <url>/2019/Thymeleaf%E6%A8%A1%E7%89%88%E4%B8%AD%E7%9A%84%E5%8F%96%E5%80%BC.html</url>
      
        <content type="html"><![CDATA[<p>最近在项目中使用到了springBoot自带的Thymeleaf模版，之前也没用过，研究了一下它的语法，在此记录下</p><p>js取model的值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script th:inline=&quot;javascript&quot;&gt;</span><br><span class="line">    var message = [[$&#123;message&#125;]];</span><br><span class="line">    console.log(message);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>页面取值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a th:text=&quot;$&#123;name&#125;&quot;&gt;&lt;/a&gt;</span><br><span class="line">或者</span><br><span class="line">&lt;a th:value=&quot;$&#123;name&#125;&quot;&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>循环取值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;tr th:each=&quot;article: $&#123;articleList&#125;&quot;&gt; </span><br><span class="line">    &lt;td th:text=&quot;$&#123;article.title&#125;&quot;&gt;&lt;/td&gt; </span><br><span class="line">    &lt;td th:text=&quot;$&#123;article.name&#125;&quot;&gt;&lt;/td&gt; </span><br><span class="line">    &lt;td th:text=&quot;$&#123;article.vcTitle&#125;&quot;&gt;&lt;/td&gt; </span><br><span class="line">    &lt;td th:text=&quot;$&#123;article.read&#125;&quot;&gt;&lt;/td&gt; </span><br><span class="line">    &lt;td th:text=&quot;$&#123;article.author&#125;&quot;&gt;&lt;/td&gt; </span><br><span class="line">&lt;/tr&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tomcat </tag>
            
            <tag> SpringBoot </tag>
            
            <tag> Thymeleaf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>material-x优化版、material-plus主题</title>
      <link href="/2019/material-x%E4%BC%98%E5%8C%96%E7%89%88%E3%80%81material-plus%E4%B8%BB%E9%A2%98.html"/>
      <url>/2019/material-x%E4%BC%98%E5%8C%96%E7%89%88%E3%80%81material-plus%E4%B8%BB%E9%A2%98.html</url>
      
        <content type="html"><![CDATA[<h2 id="主题介绍"><a href="#主题介绍" class="headerlink" title="主题介绍"></a>主题介绍</h2><p>本主题基于 <a href="https://xaoxuu.com/wiki/material-x/">material-x</a> 主题魔改，原作者 <a href="https://www.wushile.top/">小吴博客</a> ，在征得作者同意下开源。此版本在他的基础上加入了一些常用功能</p><h3 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h3><p><a href="hfanss.com">hfanss.com</a></p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/035.jpg" alt=""></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h3><blockquote><p><a href="https://github.com/iyohei/hexo-material-plus/tree/master">https://github.com/iyohei/hexo-material-plus/tree/master</a></p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>下载后是文件夹形式，将全部文件覆盖到你的目录下</p><h3 id="详细说明"><a href="#详细说明" class="headerlink" title="详细说明"></a>详细说明</h3><p>所有配置均在根目录下config.yml中进行</p><p>内部所有配置均有中文说明，以下仅特别强调几点</p><p>1.文章页标签</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 博文标题</span><br><span class="line">date: 2019-03-31 15:54:38  #书写日期+时间</span><br><span class="line">tags: #标签</span><br><span class="line">- hexo主题</span><br><span class="line">- material-x优化版</span><br><span class="line">- material-plus</span><br><span class="line">categories: #分类</span><br><span class="line">- hexo</span><br><span class="line">img: https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/034.jpg #博文封面。本地图片显示方式为  /img/***.jpg </span><br><span class="line">newimg: true    #是否显示  new 标签</span><br><span class="line">zhailu: 基于material-x主题魔改的hexo主题，material-plus主题，增添了部分功能，集成统计，广告。。。。。  #文章摘录。最少70字，否则封面会显示错乱</span><br><span class="line">comments: false   #是否开启评论，默认true</span><br><span class="line">toc: false     #是否显示目录，可在config.yml中统一配置</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>2.DIY</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">留言板/source/comment/index.html</span><br><span class="line">友链 /source/links/index.html</span><br><span class="line">关于博主/source/about2/index.html</span><br><span class="line">关于本站/source/about/index.html</span><br></pre></td></tr></table></figure><p>就说这么多吧，暂时也想不起太多，在使用中遇到问题，也可在下面留言咨询</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo主题 </tag>
            
            <tag> 开源项目 </tag>
            
            <tag> material-x优化版 </tag>
            
            <tag> material-plus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo部署至FTP-COS</title>
      <link href="/2019/hexo%E9%83%A8%E7%BD%B2%E8%87%B3FTP-COS.html"/>
      <url>/2019/hexo%E9%83%A8%E7%BD%B2%E8%87%B3FTP-COS.html</url>
      
        <content type="html"><![CDATA[<p>主流的部署方式一般都是github、coding、码云、七牛</p><p>但是其实也可以有更多的选择，比如FTP服务器和腾讯云COS</p><h2 id="部署至FTP服务器："><a href="#部署至FTP服务器：" class="headerlink" title="部署至FTP服务器："></a>部署至FTP服务器：</h2><p>一般有自己的服务器的都喜欢搭建在自己的服务器上，因为主流的服务器都是有不稳定的因素在，时长崩溃，自己有服务器，做个FTP用来存文件也是不错的选择，顺便放放hexo也算物尽其用</p><h3 id="1-安装插件"><a href="#1-安装插件" class="headerlink" title="1.安装插件"></a>1.安装插件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-ftpsync –save</span><br></pre></td></tr></table></figure><h3 id="2-修改配置"><a href="#2-修改配置" class="headerlink" title="2.修改配置"></a>2.修改配置</h3><p>根目录下config.yml增加以下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: ftpsync #上传方式，固定ftpsync</span><br><span class="line">  host: hfanss.ftp-gz01.com #ftp地址</span><br><span class="line">  user: ****#帐号</span><br><span class="line">  pass: ****#密码</span><br><span class="line">  remote: /webroot/ #上传至哪个目录</span><br><span class="line">  port: 8010#端口</span><br></pre></td></tr></table></figure><h2 id="部署至腾讯云COS："><a href="#部署至腾讯云COS：" class="headerlink" title="部署至腾讯云COS："></a>部署至腾讯云COS：</h2><h3 id="1-安装插件："><a href="#1-安装插件：" class="headerlink" title="1.安装插件："></a>1.安装插件：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-cos --save</span><br></pre></td></tr></table></figure><h3 id="2-修改配置："><a href="#2-修改配置：" class="headerlink" title="2.修改配置："></a>2.修改配置：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line"> type: cos#上传方式，固定cos</span><br><span class="line"> appId: 12529*****  #cos的appId</span><br><span class="line"> secretId: AKIDa0CAuP5hW6***********  #cos的secretId</span><br><span class="line"> secretKey: ********** #cos的secretKey</span><br><span class="line"> bucket: *********  #cos的bucket</span><br><span class="line"> region: ap-shanghai  #cos的region</span><br></pre></td></tr></table></figure><h2 id="部署至多个地址："><a href="#部署至多个地址：" class="headerlink" title="部署至多个地址："></a>部署至多个地址：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">   -type: cos</span><br><span class="line">    appId: ***</span><br><span class="line">   -type: git</span><br><span class="line">    repository: *****   #git地址 </span><br><span class="line">  branch: master</span><br><span class="line">   -type: git</span><br><span class="line">    repository: *****   #git地址 </span><br><span class="line">  branch: master</span><br><span class="line">   -type: ftpsync</span><br><span class="line">    host: hfanss.ftp-gz01.com</span><br><span class="line">    ....</span><br></pre></td></tr></table></figure><p>npm安装不成功使用<a href="https://hfanss.com/2019/hexo%E4%BD%BF%E7%94%A8%E6%B7%98%E5%AE%9D%E9%95%9C%E5%83%8FCNPM%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6.html">cnpm</a></p><blockquote><p>记录贴，大神勿喷！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo部署至FTP </tag>
            
            <tag> hexo部署至COS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo使用淘宝镜像CNPM安装插件</title>
      <link href="/2019/hexo%E4%BD%BF%E7%94%A8%E6%B7%98%E5%AE%9D%E9%95%9C%E5%83%8FCNPM%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6.html"/>
      <url>/2019/hexo%E4%BD%BF%E7%94%A8%E6%B7%98%E5%AE%9D%E9%95%9C%E5%83%8FCNPM%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6.html</url>
      
        <content type="html"><![CDATA[<p>每次通过npm安装插件都要忍受奇慢无比的网速，后来发现了cnpm，发现速度非常快，特开贴记录</p><p>使用方式：</p><p>1.首先安装淘宝镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>2.安装模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install [name]</span><br></pre></td></tr></table></figure><p>name即为插件的名字</p><p>例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-ftpsync –save</span><br></pre></td></tr></table></figure><p>更改后：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install hexo-deployer-ftpsync –save</span><br></pre></td></tr></table></figure><p>淘宝镜像为阿里云产物，服务器架设在国内，当cnpm上没有你需要的插件时，它会自动去npm服务器上寻找同时在保存至cnpm服务器上</p><blockquote><p>官方文档：<a href="https://npm.taobao.org/">点我</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 淘宝镜像 </tag>
            
            <tag> cnpm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在页面标签内实现随机颜色</title>
      <link href="/2019/%E5%9C%A8%E9%A1%B5%E9%9D%A2%E6%A0%87%E7%AD%BE%E5%86%85%E5%AE%9E%E7%8E%B0%E9%9A%8F%E6%9C%BA%E9%A2%9C%E8%89%B2.html"/>
      <url>/2019/%E5%9C%A8%E9%A1%B5%E9%9D%A2%E6%A0%87%E7%AD%BE%E5%86%85%E5%AE%9E%E7%8E%B0%E9%9A%8F%E6%9C%BA%E9%A2%9C%E8%89%B2.html</url>
      
        <content type="html"><![CDATA[<h3 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h3><p>jstl,有一个数字返回值</p><h3 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h3><p>将这个数字对某个数字取余，然后设定颜色。</p><h3 id="例子："><a href="#例子：" class="headerlink" title="例子："></a>例子：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;tagcloud&quot;&gt;</span><br><span class="line">            &lt;c:forEach items=&quot;$&#123;tagList&#125;&quot; var=&quot;tag&quot;&gt;</span><br><span class="line">                &lt;c:if test=&quot;$&#123;tag.tagId%5==0&#125;&quot;&gt;</span><br><span class="line">                &lt;a href=&quot;/tag/$&#123;tag.tagId&#125;&quot;</span><br><span class="line">                   class=&quot;tag-link-129 tag-link-position-1&quot; title=&quot;$&#123;tag.articleCount&#125;个话题&quot;</span><br><span class="line">                   style=&quot;font-size: 14px;color:#BF3EFF&quot;&gt;</span><br><span class="line">                        $&#123;tag.tagName&#125;</span><br><span class="line">                &lt;/a&gt;</span><br><span class="line">                &lt;/c:if&gt;</span><br><span class="line">                &lt;c:if test=&quot;$&#123;tag.tagId%5==1&#125;&quot;&gt;</span><br><span class="line">                &lt;a href=&quot;/tag/$&#123;tag.tagId&#125;&quot;</span><br><span class="line">                   class=&quot;tag-link-129 tag-link-position-1&quot; title=&quot;$&#123;tag.articleCount&#125;个话题&quot;</span><br><span class="line">                   style=&quot;font-size: 14px;color:#B0E2FF&quot;&gt;</span><br><span class="line">                        $&#123;tag.tagName&#125;</span><br><span class="line">                &lt;/a&gt;</span><br><span class="line">                &lt;/c:if&gt;</span><br><span class="line">                &lt;c:if test=&quot;$&#123;tag.tagId%5==2&#125;&quot;&gt;</span><br><span class="line">                &lt;a href=&quot;/tag/$&#123;tag.tagId&#125;&quot;</span><br><span class="line">                   class=&quot;tag-link-129 tag-link-position-1&quot; title=&quot;$&#123;tag.articleCount&#125;个话题&quot;</span><br><span class="line">                   style=&quot;font-size: 14px;color:#F08080&quot;&gt;</span><br><span class="line">                        $&#123;tag.tagName&#125;</span><br><span class="line">                &lt;/a&gt;</span><br><span class="line">                &lt;/c:if&gt;</span><br><span class="line">                &lt;c:if test=&quot;$&#123;tag.tagId%5==3&#125;&quot;&gt;</span><br><span class="line">                &lt;a href=&quot;/tag/$&#123;tag.tagId&#125;&quot;</span><br><span class="line">                   class=&quot;tag-link-129 tag-link-position-1&quot; title=&quot;$&#123;tag.articleCount&#125;个话题&quot;</span><br><span class="line">                   style=&quot;font-size: 14px;color:#CD9B1D&quot;&gt;</span><br><span class="line">                        $&#123;tag.tagName&#125;</span><br><span class="line">                &lt;/a&gt;</span><br><span class="line">                &lt;/c:if&gt;</span><br><span class="line">                &lt;c:if test=&quot;$&#123;tag.tagId%5==4&#125;&quot;&gt;</span><br><span class="line">                &lt;a href=&quot;/tag/$&#123;tag.tagId&#125;&quot;</span><br><span class="line">                   class=&quot;tag-link-129 tag-link-position-1&quot; title=&quot;$&#123;tag.articleCount&#125;个话题&quot;</span><br><span class="line">                   style=&quot;font-size: 14px;color:#00C5CD&quot;&gt;</span><br><span class="line">                        $&#123;tag.tagName&#125;</span><br><span class="line">                &lt;/a&gt;</span><br><span class="line">                &lt;/c:if&gt;</span><br><span class="line">                </span><br><span class="line">            &lt;/c:forEach&gt;</span><br><span class="line">            &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>不想用JS写，在标签内只能用这种取巧的方法</p>]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随机颜色 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速搭建Java生产环境</title>
      <link href="/2019/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAJava%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83.html"/>
      <url>/2019/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAJava%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83.html</url>
      
        <content type="html"><![CDATA[<p>（本文使用于有一定基础的编程人员，如果小白的话请仔细，一步一步按照本文来 也可配置成功，有问题可在下方评论）</p><h2 id="1-JDK"><a href="#1-JDK" class="headerlink" title="1. JDK"></a>1. JDK</h2><p>看好自己电脑的版本  X32/X64，然后下载一个版本。并不是越新越好，一般都是1.5、1.7</p><p>官网 <a href="http://www.oracle.com/technetwork/java/index.html，官网有时候会卡">http://www.oracle.com/technetwork/java/index.html，官网有时候会卡</a></p><p>我在自己的网盘里分享了，<a href="https://pan.baidu.com/s/1mjmDTOW">https://pan.baidu.com/s/1mjmDTOW</a></p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/051.jpg" alt=""></p><h3 id="安装："><a href="#安装：" class="headerlink" title="安装："></a>安装：</h3><p>安装很简单，按照步骤一步一步来就好了，</p><p> <img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/052.jpg" alt=""></p><p>这里可以更改安装路径，需要的可以自己改</p><p> <img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/053.jpg" alt=""></p><p>这一步是安装JRE，JDK中是包含JRE的，所以可安装也可不安装</p><p> <img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/054.jpg" alt=""></p><h3 id="环境变量："><a href="#环境变量：" class="headerlink" title="环境变量："></a>环境变量：</h3><p>右击我的电脑——&gt;属性——&gt;高级——&gt;环境变量——&gt;在系统变量中找到path.</p><p>点击新建——&gt;变量名：JAVA_HOME，变量值：你的java所在路径，如这是我的安装路径：E:\Java\jdk1.7.0_21，这个值只要到这目录就差不多了，不要在后面加\bin等东西了。</p><p>双击path——&gt;在最前面加这么个东西   %JAVA_HOME%\bin;   分号不能少，必须是英文的分号。</p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/055.jpg" alt=""><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/055.jpg" alt=""></p><p><img src="" alt=""></p><p><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/056.jpg" alt=""></p><p>如果还有不清楚的，请去我的网盘下载  详细文档，里面有非常详细的说明</p><p> <img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/057.jpg" alt=""></p><p>校验环境变量是否成功</p><p>快捷键win+R——&gt;输入cmd——&gt;输java</p><p> <img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/058.jpg" alt=""></p><p>出现下图内容证明 成功</p><p> <img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/059.jpg" alt=""></p><h2 id="2-Tomcat"><a href="#2-Tomcat" class="headerlink" title="2. Tomcat"></a>2. Tomcat</h2><p>网盘:<a href="https://pan.baidu.com/s/1jKciScA">https://pan.baidu.com/s/1jKciScA</a></p><p>这个有点简单，全部点下一步就行，环境变量可配可不配</p><p>配的话 接上面 JDK的环境变量配置方法，名字为CATALINA_HOME，</p><p> <img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/060.jpg" alt=""></p><p>跟上面一样的方法添加到 Path中,他这个配环境变量的目的其实是可以单独启动，我们只需要在工具中启动就可以了，所以可不安装</p><h2 id="3-Eclipse"><a href="#3-Eclipse" class="headerlink" title="3. Eclipse"></a>3. Eclipse</h2><p>官网地址<a href="https://www.eclipse.org/downloads/">https://www.eclipse.org/downloads/</a></p><p>相关使用及配置  详见我另一篇博客<a href="http://blog.csdn.net/q2158798/article/details/77184898里面有JDK,Tomcat在Eclipse里的相关配置">http://blog.csdn.net/q2158798/article/details/77184898里面有JDK,Tomcat在Eclipse里的相关配置</a></p><h2 id="4-Svn"><a href="#4-Svn" class="headerlink" title="4. Svn"></a>4. Svn</h2><p>这里提供一个在线安装的</p><p>Eclipse里 点击 help-install from site -出来界面后，点击右边  add,</p><p>Name:svn</p><p>Location：<a href="http://subclipse.tigris.org/update_1.10.x">http://subclipse.tigris.org/update_1.10.x</a></p><p> <img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/061.jpg" alt=""></p><p>全部选上，点击下方Finish开始下载，东西不大，但服务器在国外，网速不好可能会卡</p><p>SVN导出项目报错的话  可以参考我的另一篇文章</p><p><a href="http://blog.csdn.net/q2158798/article/details/74612930">http://blog.csdn.net/q2158798/article/details/74612930</a></p><h2 id="5-反编译工具"><a href="#5-反编译工具" class="headerlink" title="5. 反编译工具"></a>5. 反编译工具</h2><p><a href="https://pan.baidu.com/s/1dL4mKY">https://pan.baidu.com/s/1dL4mKY</a></p><p>非常小巧的一个工具，直接把jar包往里面拖就能看到了</p><h2 id="6-数据库方面"><a href="#6-数据库方面" class="headerlink" title="6. 数据库方面"></a>6. 数据库方面</h2><p>推荐使用Navicat，可以链接多个数据库，下载地址:<a href="http://www.cr173.com/soft/126934.html">http://www.cr173.com/soft/126934.html</a></p><p>用此工具链接 Oracle的方法  参考我的另一篇文章</p><p><a href="http://blog.csdn.net/q2158798/article/details/78487405">http://blog.csdn.net/q2158798/article/details/78487405</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java生产环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对list中对象的某一属性排序</title>
      <link href="/2019/%E5%AF%B9list%E4%B8%AD%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%9F%90%E4%B8%80%E5%B1%9E%E6%80%A7%E6%8E%92%E5%BA%8F.html"/>
      <url>/2019/%E5%AF%B9list%E4%B8%AD%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%9F%90%E4%B8%80%E5%B1%9E%E6%80%A7%E6%8E%92%E5%BA%8F.html</url>
      
        <content type="html"><![CDATA[<p>如果list只包含string的话，排序其实很方便</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line">    public void test003() &#123;</span><br><span class="line">        List&lt;String&gt;  list = new ArrayList&lt;String&gt;();</span><br><span class="line">        list.add(&quot;3&quot;);</span><br><span class="line">        list.add(&quot;1&quot;);</span><br><span class="line">        list.add(&quot;5&quot;);</span><br><span class="line">        list.add(&quot;6&quot;);</span><br><span class="line">        System.err.println(&quot;排序前：&quot;+list);</span><br><span class="line">        //第一种方式</span><br><span class="line">        Collections.sort(list);</span><br><span class="line">        System.err.println(&quot;排序后：&quot;+list);</span><br><span class="line">        //第二种方式</span><br><span class="line">        /**</span><br><span class="line">        Collections.sort(list, new Comparator&lt;String&gt;() &#123;</span><br><span class="line">            </span><br><span class="line">            @Override</span><br><span class="line">            public int compare(String o1, String o2) &#123;</span><br><span class="line">                // TODO Auto-generated method stub</span><br><span class="line">                return o1.compareTo(o2);</span><br><span class="line">            &#125;</span><br><span class="line">        </span><br><span class="line">        &#125;);</span><br><span class="line">        */</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>控制台</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">第一种方式和第二种方式输出相同：</span><br><span class="line">排序前：[3, 1, 5, 6]</span><br><span class="line">排序后：[1, 3, 5, 6]</span><br></pre></td></tr></table></figure><p>两种方式其实底层实现了同样的方法，不同的只是一个复写了compare方法</p><p>这是默认升序，那么降序呢？只需要修改下compare方法即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Collections.sort(list, new Comparator&lt;String&gt;() &#123;</span><br><span class="line">            </span><br><span class="line">            @Override</span><br><span class="line">            public int compare(String o1, String o2) &#123;</span><br><span class="line">                // TODO Auto-generated method stub</span><br><span class="line">                return o2.compareTo(o1);</span><br><span class="line">            &#125;</span><br><span class="line">        </span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><blockquote><p>那么对于对象集合，怎么排序呢？</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line">    public void test003() &#123;</span><br><span class="line">        List&lt;User&gt;  list = new ArrayList&lt;User&gt;(4);</span><br><span class="line">        User u1 = new User(&quot;张三&quot;, 17, &quot;20181212&quot;);</span><br><span class="line">        User u2 = new User(&quot;李四&quot;, 2, &quot;20171105&quot;);</span><br><span class="line">        User u3 = new User(&quot;王五&quot;, 11, &quot;19950504&quot;);</span><br><span class="line">        User u4 = new User(&quot;李六&quot;, 5, &quot;20200406&quot;);</span><br><span class="line">        list.add(u1);</span><br><span class="line">        list.add(u2);</span><br><span class="line">        list.add(u3);</span><br><span class="line">        list.add(u4);</span><br><span class="line">        System.err.println(&quot;排序前：&quot;);</span><br><span class="line">        for (User user : list) &#123;</span><br><span class="line">            System.err.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">        Collections.sort(list, new Comparator&lt;User&gt;() &#123;</span><br><span class="line"></span><br><span class="line">            @Override</span><br><span class="line">            public int compare(User o1, User o2) &#123;</span><br><span class="line">                return o1.getCreateTime().compareTo(o2.getCreateTime());</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        </span><br><span class="line">        &#125;);</span><br><span class="line">        System.err.println(&quot;排序后：&quot;);</span><br><span class="line">        for (User user : list) &#123;</span><br><span class="line">            System.err.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>控制台</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">排序前：</span><br><span class="line">User [user=张三, age=17, createTime=20181212]</span><br><span class="line">User [user=李四, age=2, createTime=20171105]</span><br><span class="line">User [user=王五, age=11, createTime=19950504]</span><br><span class="line">User [user=李六, age=5, createTime=20200406]</span><br><span class="line">排序后：</span><br><span class="line">User [user=王五, age=11, createTime=19950504]</span><br><span class="line">User [user=李四, age=2, createTime=20171105]</span><br><span class="line">User [user=张三, age=17, createTime=20181212]</span><br><span class="line">User [user=李六, age=5, createTime=20200406]</span><br></pre></td></tr></table></figure><p>可以看出，不同之处只是在compare方法内把对象中要比较的属性抽出来而已</p><p>默认升序，降序的话换下顺序即可,</p><p>如果针对属性为Integer的属性的话，方法也是一样</p>]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat配置ssl证书</title>
      <link href="/2019/Tomcat%E9%85%8D%E7%BD%AEssl%E8%AF%81%E4%B9%A6.html"/>
      <url>/2019/Tomcat%E9%85%8D%E7%BD%AEssl%E8%AF%81%E4%B9%A6.html</url>
      
        <content type="html"><![CDATA[<p>最近搞这个https搞的头疼，百度下载的ssl证书没有密码，纠结了很久</p><p>特开贴记录一下，希望后来的同学们少走点弯路</p><h2 id="下载证书"><a href="#下载证书" class="headerlink" title="下载证书"></a>下载证书</h2><p>这里以百度云为例（网上阿里的有很多教程，这里就不多赘述）</p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/037.jpg" alt="img"></a>;)</p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/038.jpg" alt="img"></a>;)</p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/039.jpg" alt="img"></a>;)</p><p>这个密码就是证书的密码，起初我一直以为就是解压密码，最后问过百度客服才知道就是证书密码</p><h2 id="配置tomcat"><a href="#配置tomcat" class="headerlink" title="配置tomcat"></a>配置tomcat</h2><p>1.将下载下来的后缀为jks的证书放入tomcat的conf目录下</p><p>2.打开该目录下的server.xml，添加以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connector port=&quot;443&quot; protocol=&quot;org.apache.coyote.http11.Http11NioProtocol&quot; maxThreads=&quot;150&quot; SSLEnabled=&quot;true&quot; scheme=&quot;https&quot; secure=&quot;true&quot; keystoreFile=&quot;证书绝对路径&quot; keystorePass=&quot;证书密码&quot; clientAuth=&quot;false&quot; sslProtocol=&quot;TLS&quot; /&gt;</span><br></pre></td></tr></table></figure><p>另外修改原有内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;</span><br><span class="line">               connectionTimeout=&quot;20000&quot;</span><br><span class="line">               redirectPort=&quot;8443&quot; /&gt;</span><br><span class="line">&lt;Connector port=&quot;8009&quot; protocol=&quot;AJP/1.3&quot; redirectPort=&quot;8443&quot; /&gt;</span><br></pre></td></tr></table></figure><p>修改为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connector port=&quot;80&quot; protocol=&quot;HTTP/1.1&quot;</span><br><span class="line">               connectionTimeout=&quot;20000&quot;</span><br><span class="line">               redirectPort=&quot;443&quot; /&gt;</span><br><span class="line">&lt;Connector port=&quot;8009&quot; protocol=&quot;AJP/1.3&quot; redirectPort=&quot;443&quot; /&gt;</span><br></pre></td></tr></table></figure><p>OK后，重启下tomcat，进入<a href="https://localhost">https://localhost</a>会跳转到<a href="https://localhost">https://localhost</a></p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/040.jpg" alt="img"></a>;)</p><h2 id="如果部署的是java-web项目，还需要以下配置"><a href="#如果部署的是java-web项目，还需要以下配置" class="headerlink" title="如果部署的是java web项目，还需要以下配置"></a>如果部署的是java web项目，还需要以下配置</h2><p>tomcat/conf/server.xml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Context path=&quot;/&quot; reloadable=&quot;true&quot; docBase=&quot;项目绝对路径&quot; /&gt;    </span><br></pre></td></tr></table></figure><p>web项目的web.xml中还需要更改（包含在根标签内，</web-app>之上）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 跳转https --&gt;  </span><br><span class="line">    &lt;security-constraint&gt;  </span><br><span class="line">         &lt;web-resource-collection &gt;  </span><br><span class="line">            &lt;web-resource-name &gt;SSL&lt;/web-resource-name&gt;  </span><br><span class="line">            &lt;url-pattern&gt;/*&lt;/url-pattern&gt;  </span><br><span class="line">        &lt;/web-resource-collection&gt;  </span><br><span class="line">        &lt;user-data-constraint&gt;  </span><br><span class="line">            &lt;transport-guarantee&gt;CONFIDENTIAL&lt;/transport-guarantee&gt;  </span><br><span class="line">        &lt;/user-data-constraint&gt;  </span><br><span class="line">    &lt;/security-constraint&gt;</span><br></pre></td></tr></table></figure><p>此配置目的：将所有请求转为https</p><p>OK，大功告成，重启tomcat，访问localhost就可以看到效果了</p>]]></content>
      
      
      <categories>
          
          <category> Tomcat </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019比挣钱更重要的是活着</title>
      <link href="/2019/2019%E6%AF%94%E6%8C%A3%E9%92%B1%E6%9B%B4%E9%87%8D%E8%A6%81%E7%9A%84%E6%98%AF%E6%B4%BB%E7%9D%80.html"/>
      <url>/2019/2019%E6%AF%94%E6%8C%A3%E9%92%B1%E6%9B%B4%E9%87%8D%E8%A6%81%E7%9A%84%E6%98%AF%E6%B4%BB%E7%9D%80.html</url>
      
        <content type="html"><![CDATA[<p><strong>伟大的背后，皆是苦难</strong></p><p> <strong>01</strong> </p><p>这两天看到一个帖子，挺难受的。</p><p>36岁的华为工程师，在肯尼亚过劳死。</p><p>事发时，他在开车，突然觉得头痛想要休息，把车停下来后，整个人就失去了意识，然后开始呕吐。</p><p>送到最近的医院，拼命抢救仍于事无补。</p><p><strong>优秀的工程师撒手人寰，留下没有工作没有收入，独自带着两个孩子的妻子。</strong></p><p><strong><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/042.jpg" alt="QQ图片20190106135115.png"></strong></p><p>从2017年1月，到2018年10月，22个月都没有休假回家。</p><p>即便是节假日，也要为了保障业务全天留在客户处值守。</p><p><strong>直到离世，还剩余33天的年假，但他再也没有机会用了。</strong></p><p>出事前10天，他领到了海外十年奖牌。</p><p>出事前一周，曾发微信给妻子说，可能挺不了了。</p><p>出事前2天，仍在在通宵工作。</p><p>妻子的文字如泣如诉，看着这些无比揪心：</p><blockquote><p>华为永远不缺少这样的热血男儿，舍小家为大家，攻无不克战无不胜，如今在非洲的各个国家，乃至整个世界家喻户晓，是中国制造的骄傲与自豪。</p><p>可是，我的小家，从此破碎了。</p><p>八岁和三岁半的孩子，永远地失去了保护他们的爸爸。</p><p>我再也等不到那个和我白头偕老的爱人，年迈的婆婆白发人送黑发人。</p><p>人生至痛，情何以堪？</p></blockquote><p>华为的slogan里写：</p><p><strong>伟大背后，皆是苦难。</strong></p><p>这苦难里，有民族的苦难，也有集体的苦难。</p><p><strong>可个人的苦难，又有谁能来为其买单？</strong></p><p> <strong>02</strong> </p><p>这些年，我们好像经常看到类似的新闻。</p><blockquote><p>大疆无人机25岁程序员，哈工大刚刚毕业的硕士，所有同学眼里的精英，猝死家中。</p><p>26岁的医生加班猝死，他的朋友圈里写着：黑+白+黑，下班啦，活着真好。</p><p>无比心酸，无比讽刺。</p><p>44岁春雨医生创始人兼CEO，因突发心肌梗塞离世。</p><p>36岁御泥坊原董事长吴立君，因长期辛劳，突发脑部静脉血栓去世。</p></blockquote><p>猝死，早就不是小概率事件。</p><p>甚至成了很多高薪白领的标配，成了无数年轻人心头的刺。</p><p>网上有个段子说，那些比你优秀还比你拼命的人，最后怎么样了。</p><p>有人答，<strong>比我先死了。</strong></p><p><strong>听起来好笑，细想扎心。</strong></p><p>大公司，高薪职员，企业高管，通常名校毕业，年薪十万百万甚至千万，可是然后呢？</p><p>没有倒下之前，每个人都觉得自己不会是那个倒霉的人，忍忍就过去了。</p><p>没有倒下之前，每个人都觉得还能坚持就坚持一下，一想到账户里的存款，就又多熬了几个大夜。</p><p><strong>可是倒下以后，一切将毫无意义。</strong></p><p>我一个学通信的同学，TOP5高材生，TOP3硕士，最后却留在老家，拿着几千块的工资。</p><p>很多人说，你这也太大材小用了！</p><p>去深圳发展，年薪百万不成问题，干嘛非要留在小城市。</p><p>他说，因为我想多活几年。</p><p><strong>有人觉得他没出息，我却觉得他够真实。</strong></p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/043.jpg" alt="QQ图片20190106135926.png"></a>;)</p><p> <strong>03</strong> </p><p>何止通信行业？</p><p>搞设计的，搞营销的，做销售的，做新媒体，搞咨询的，做审计的，医护人员，还有创业的小老板等等等。</p><p>熬夜通宵，哪个不是家常便饭？</p><p>哪个不是压力大到，早早上床依然睡不着？</p><p>哪个不是一边拿着保温杯，一边对着电脑？</p><p>多少公司，把女人当男人用，男人当牲口用。</p><p>多少人有苦难言，即便累到秃顶，还是要保住饭碗，继续拼。</p><p>领导说，没人逼你啊，你不想干，有的是人想干！</p><p>这是真话。</p><p><strong>这个世界永远不缺那些，想要挣钱，想要拼事业，宁愿透支健康也要挤破头，进大公司拼命的人。</strong></p><p>这个世界也从来不缺那些，内心充满激情与热血，在理想与荣耀面前，将生死置之度外的人。</p><p><strong>但对于我们这些绝大多数的平凡人来说，拿命换钱，实在不值得。</strong></p><p>公司是一个庞大的机器，越是大公司好公司，越是如此。</p><p>而我们只是其中的一颗螺丝。</p><p>生锈了，重新打磨润滑，再被拧上去，接着用。</p><p>坏了，就被拆掉，立刻被替换上新的，但机器的运转绝不会停。</p><p><strong>没有任何一个工作，是缺了你不行的。</strong></p><p>今天你猝死了，你离职了，你甩手不干了，公司一切还会照常继续。</p><p><strong>对于公司来说，你随时可以被抛弃的，但对于家庭来说，你却是无可代替的。</strong></p><p> <strong>04</strong> </p><p>去年有一个刷屏视频叫：</p><p><strong>你知道中国人有多拼吗？</strong></p><p>程序员凌晨四点关灯，早餐店凌晨四点开灯。</p><p>白领24小时开机。</p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/044.gif" alt="6402.gif"></a>;)</p><p>医生根本无暇看手机。</p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/045.gif" alt="6403.gif"></a>;)</p><p>辛苦时你喜欢说没事儿，面对家人又因为工作必须说“有事儿先挂了”。</p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/046.gif" alt="6404.gif"></a>;)</p><p>有人因为太忙滴水不沾，有人因为客户必须一饮而尽。</p><p>有人无法安睡，因为要让别人酣睡。</p><p><strong>习惯了在工作的地方生活，也习惯了在生活的地方工作。</strong></p><p>你总说忙完就去旅行，却把电脑塞进了行李。</p><p><strong>这是一个奖励拼搏的时代，我们不舍昼夜不辞辛苦。</strong></p><p>我们用40年，走完了别人几百年走完的路。</p><p>他们说，庸碌没有未来，拼搏就不白费。致敬每一个你，成就奋斗的自己和奋斗的中国！</p><p>感人吗？感人。</p><p>鸡血吗？鸡血。</p><p><strong>但讲真，仔细品品，却感到心理不适。</strong></p><p>我们这个时代，精英累到猝死，蓝领累到猝死，普通人依然累到猝死。</p><p>与其赞扬中国人到底有多拼，不如问问中国人为什么活得这么不要命。</p><p>我们高喊，中国人好棒好牛好优秀，就好像中国人根本不需要睡觉，中国人根本没有一家老小。</p><p><strong>拼搏与奋斗是伟大的精神，但用透支身体去拼搏，倡导那些用命换钱的故事，是否有些畸形？</strong></p><p>最近我发现，越来越多人开始默认，加班是最正常的事。</p><p>不加班的人，反而显得不正常，甚至有人背后嘲笑你，是不是太懒太不努力了。</p><p>纪录片《过劳死—你不知道的日本社会的另一面》中说：</p><blockquote><p>在日本，社会的普遍价值观认为，加班是有能力的表现。</p><p>如果一家的丈夫每天早早的就回了家，会被周围人所诟病，被认为是没能力，不受公司的重用。</p></blockquote><p>但在公司呢？</p><p>你没日没夜加班，也许只会换来领导的一句：怎么这么没效率！这么不会安排时间呢！</p><p>你说气不气！</p><p>过劳死这个词，最早源于日本。</p><p>20世纪七八十年代，日本经济极度繁荣，却有无数青壮年，因为长时间加班，过度疲劳导致死亡。</p><p><strong>而现在，据2016年央视报道显示，我国每年过劳死的人数达60万</strong>！</p><p>成功超越了日本，成为过劳死第一大国！</p><p>整体的成就万众瞩目，个体的牺牲于事无补。</p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/047.jpg" alt="QQ图片20190106140154.png"></a>;)</p><p> <strong>05</strong> </p><p>我们这个时代的年轻人，似乎人人如此。</p><p><strong>惜命又焦虑，生活往往身不由己。</strong></p><p>道理都懂，但实际行动却矛盾重重。</p><p>前一阵子写稿子，手头特别多活，都是又难又急的那种。</p><p>经常是早上醒来看手机，一堆留言，上午给选题下午初稿，晚上给选题半夜发表的那种。</p><p>还经常是盘点总结类的大稿子，搜集资料就得几小时。</p><p>碍于面子，还是接了下来。</p><p>电脑前奋笔疾书一天，脑子不停转，交稿关机，想好好歇一下，发现呼吸困难。</p><p>心脏突突，头也迷糊，明显劳心用脑过度，整个人都不好了。</p><p>那一刻我想，说啥也不能这么写了，谁都想挣钱，但身体不允许，实在拼不起。</p><p>新年放假三天，各种新媒体群里的人都没休息。</p><p>一个个都在加班熬夜，赶稿子追热点，一边自嘲一边苦熬，仿佛节假日从来不存在。</p><p>像我这种灵活自主的工作，连轴转两天就感觉累的快要猝死。</p><p>更别提那些，在岗位上顶着领导的压力，憋气委屈，还得没日没夜干活的人。</p><p><strong>可是，生活不该本末倒置。</strong></p><p>我统计了一下，2018我挣的钱主要用来干嘛，结果触目惊心。</p><p>月薪过万有什么用？去趟医院就没了。</p><p>舍不得买新衣服新手机，舍不得奢侈，却在买保养品上无比大方。</p><p>各种保健按摩，几千几千的花都不心疼。</p><p>放弃健康挣到的钱，最后为了健康都花没了。</p><p><strong>试问自己，钱挣得不少，幸福感却很少，折腾一遭，到底是图啥呢？</strong></p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/048.jpg" alt="QQ图片20190106140249.png"></a>;)</p><p>我们每个人，都像一辆奔跑在时代高速上的列车。</p><p>超载负荷，全员加速。</p><p>然而也许今天你还能在高速上飞驰，明天自检依然能通过，没有人质疑你的运行能力和加速度。</p><p><strong>只有在突然报废的那一刻，我们才会明白自己已经顶着危险，行走了多久。</strong></p><p>人人都想要更好的生活，为了家人为了自己，不断打拼，这是美好又正能量的事儿。</p><p>但凡事最忌过犹不及，活着是对得起世界，更要对得起自己。</p><p>如果有机会，去问问那些百岁老人，去问问那些癌症病人，你会明白到底什么是人生最重要的事。</p><p>很多人总是喊着，不敢倒下，因为身后空无一人。</p><p><strong>却没有想过，若有天真的倒下，你的爱人，孩子，父母要如何面对失去。</strong></p><p>新的一年，希望你拼一点，也希望你淡然一点。</p><p>希望你多挣一点，但更希望你多爱自己一点。</p><p>2019，其实没有什么宏图大愿。</p><p><strong>愿你始终明白，这世界比挣钱更重要的，是活着。</strong></p><p><strong>博主寄语：</strong></p><p>​      <strong>不要为了金钱过分透支自己的生命，合理加班。抗不住的时候主动吭声，工作是付出自己的能力获得回报，而不是付出自己的健康！</strong></p><p><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>_</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></p><p><strong>本文转载至：微信公众号-孤独先生</strong></p><p><strong>作者公众号：</strong></p><p><strong><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/049.gif" alt="6409.gif"></strong></p>]]></content>
      
      
      <categories>
          
          <category> 点滴生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 点滴生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用Java做一个简单的打字游戏</title>
      <link href="/2018/%E7%94%A8Java%E5%81%9A%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E6%89%93%E5%AD%97%E6%B8%B8%E6%88%8F.html"/>
      <url>/2018/%E7%94%A8Java%E5%81%9A%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E6%89%93%E5%AD%97%E6%B8%B8%E6%88%8F.html</url>
      
        <content type="html"><![CDATA[<p>Java也是可以做桌面程序的。只不过需要运行在装有JDK的电脑环境上，所以应用不是很广泛，但是用来提高自身的代码逻辑还是可以的！偶有一天看到金山的打字通，就想起何不做个简单的打字游戏用来练练手。于是就有了下文</p><p>那话不多说，我们首先建一个类MyTyping，只有main方法，写上总的思路</p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/081.jpg" alt="img"></a>;)</p><p>运行main方法就可以看到出现屏幕中心出现一个窗体（大小是300*400）</p><p>代码逻辑也就思路里那么多。觉得丑的可以自己优化下，个人觉得没必要</p><p>OK，出现后就进行下一步</p><p>在同一包下新建MyPanel类。继承Panel类</p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/082.jpg" alt="img"></a>;)</p><p>此时运行main方法，窗体上出现了  黑色的字母C。</p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/083.jpg" alt="img"></a>;)</p><p>那接下来，就是要让drawString第一个参数为26个随机字母，第二个参数为不超过300的随机数，第三个参数为不超过400的随机数</p><p>改造下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g.drawString(new Character((char)(Math.random()*26+97)).toString().toUpperCase(), (int)(Math.random()*300), (int)(Math.random()*400));</span><br></pre></td></tr></table></figure><p>随机数不会的可以自己百度去。。</p><p>多次点击运行，可以看到已经实现，随机位置，随机字母的效果</p><p>OK，再下一步。出现10个随机字母。加个循环即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for (int i = 0; i &lt; 10; i++) &#123;</span><br><span class="line">//1.出现的元素，2.元素的x轴，3.元素的y轴</span><br><span class="line">g.drawString(new Character((char)(Math.random()26+97)).toString().toUpperCase(), (int)(Math.random()300), (int)(Math.random()*400));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果：（但是有的字母在边缘看不到，没关系，等全部完成了再来优化）</p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/084.jpg" alt="img"></a>;)</p><p>已经看到 效果已经有了。但是我们设想的的是 字母需要往下移动，怎么完成呢？</p><p>也很简单。用一个容器来储存随机字母，以及它的x轴，y轴</p><p>改造如下：通过构造方法来实现随机的实现</p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/085.jpg" alt="img"></a>;)</p><p>再次运行，效果一样</p><p>接下来，实现线程，让它下坠</p><p>代码改造如下：实现线程需要实现Runnable接口</p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/086.jpg" alt="img"></a>;)</p><p>运行之后，字母已经实现下坠效果了</p><p>核心已经完成了。接下来，加入：</p><p>字母超出窗体。重新生成。run方法改造如下</p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/087.jpg" alt="img"></a>;)</p><p>运行，效果也出来了</p><p>再接下来 加入计数器</p><p>代码改造如下：定义全局变量来储存积分</p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/088.jpg" alt="img"></a>;)</p><p>Paint方法：如果积分小于0，不能进来绘制方法，并且出现 game over 字样</p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/089.jpg" alt="img"></a>;)</p><p>Run方法：如果积分小于0，线程停止</p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/090.jpg" alt="img"></a>;)</p><p>再次运行。字母超出窗体的时候会在最上面重新生成随机字母。并且积分会-100，当到0时会出现 game  over字样，线程也停止了</p><p>但我们现在也发现了。一开始字母随机的位置不对，它可能随机的y轴为350，那岂不是刚出现就要消失了？怎么给人时间去按呢？简单。把生成随机y轴后面的数值改成50，那么他就只会在0-50之间的高度上出现了</p><p>改造构造方法：</p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/091.jpg" alt="img"></a>;)</p><p>运行后，结果也很OK</p><p>接下来 实现键盘录入效果</p><p>MyPanel实现 KeyListener接口，并实现相应方法（一共三个）</p><p>我们只用其中的keyPressed（键盘按下事件）</p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/092.jpg" alt="img"></a>;)</p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/093.jpg" alt="img"></a>;)</p><p>在main方法中将键盘事件注册进去</p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/094.jpg" alt="img"></a>;)</p><p>再次运行，控制台会输出你输入的字母</p><p>那接下来要做的估计都猜到了。匹配键盘录入的字母，</p><p>相同：消除这个字母，并且在最上面重新生成，积分+100</p><p>不相同：积分-100</p><p>代码改造如下：</p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/095.jpg" alt="img"></a>;)</p><p>但是运行是不是有问题？只要输错一次。直接游戏结束，这是因为输的字母不在范围内，它会循环-100，10次，所以立马就结束了，所以我们现在再给它加个计数器，以避免循环-100</p><p>代码改造如下：</p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/096.jpg" alt="img"></a>;)</p><p>现在效果OK了，但是又有新问题了，如果有一样的两个字母，它并不一定会消除最下面的，但是我们需要它消除最下面的，刚刚我们加了计数器去实现它的减，那么就再加个计数器实现它的加，当键盘录入匹配时，记录下来y轴，跟原始值或者上一个值比较，如果大于，就覆盖这个计数器为当前Y轴，那么最后循环下来，相同的字母也只会保留Y轴最大的那个</p><p>代码改造如下</p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/097.jpg" alt="img"></a>;)</p><p>重新运行，效果基本就算实现了。</p><p>可以加一些小的优化。字体加大，颜色随机。</p><p>颜色随机，直接放在MyPanel类里就行</p><p>改造代码</p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/098.jpg" alt="img"></a>;)</p><p>如果这样改造。只要动一下就会变颜色。我们想要的是 一生成就固定，直到消失</p><p>那还是用容器吧，跟存储随机字母一样的方法，还是全局变量</p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/099.jpg" alt="img"></a>;)</p><p>OK，再次运行，完美实现</p><p>字体加大：</p><p>在drawString方法上面加</p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/100.jpg" alt="img"></a>;)</p><p>看一下效果图</p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/101.jpg" alt="img"></a>;)</p><p>还是可以的哈。好了就写到这里吧，核心逻辑代码实现就OK了，再写下去要精通swing了</p><p>当然这个问题还是有的</p><p>字母重叠。没有关闭按钮。没有再来一盘按钮。没有音效</p><p>有兴趣的童鞋 可以自己着手优化下。不过个人觉得没必要。因为做的再好，也得用户装了JDK才能运行，后期可以尝试用易语言 或者C#做下这种小工具。</p><p>代码我放在github上，有不明白的需要参考可以去下载</p><p>地址: <a href="https://github.com/HFanss/test">点我</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java打字游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JDBC链接数据库</title>
      <link href="/2018/Java%E5%88%A9%E7%94%A8%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%AF%B9%E5%AE%9E%E4%BD%93%E7%B1%BB%E7%9A%84%E5%B1%9E%E6%80%A7%E8%BF%9B%E8%A1%8C%E5%88%9D%E5%A7%8B%E5%8C%96.html"/>
      <url>/2018/Java%E5%88%A9%E7%94%A8%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%AF%B9%E5%AE%9E%E4%BD%93%E7%B1%BB%E7%9A%84%E5%B1%9E%E6%80%A7%E8%BF%9B%E8%A1%8C%E5%88%9D%E5%A7%8B%E5%8C%96.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>学习记录：复习</p><p>JDBC简单链接数据库</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">/**    关闭资源用*/</span><br><span class="line">Connection conn = null;</span><br><span class="line">Statement stmt = null;</span><br><span class="line">ResultSet rest = null;</span><br><span class="line">/**设置url,user,password,sql*/</span><br><span class="line">String url = &quot;jdbc:mysql://localhost:3306/kevin?useUnicode=true&amp;characterEncoding=utf-8&quot;;</span><br><span class="line">String user = &quot;root&quot;;</span><br><span class="line">String password = &quot;123456&quot;;</span><br><span class="line">String sql = &quot;select * from blog&quot;;</span><br><span class="line">try</span><br><span class="line">&#123;</span><br><span class="line">// 注册驱动</span><br><span class="line">Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br><span class="line">// 获得数据库链接</span><br><span class="line">conn = DriverManager.getConnection(url, user, password);</span><br><span class="line">// 获得Statement</span><br><span class="line">stmt = conn.createStatement();</span><br><span class="line">rest = stmt.executeQuery(sql);</span><br><span class="line">while (rest.next())</span><br><span class="line">&#123;</span><br><span class="line">System.out.println(rest.getString(&quot;title&quot;) + &quot;_&quot; + rest.getString(&quot;viceTitle&quot;));</span><br><span class="line">&#125;</span><br><span class="line">&#125; catch (Exception e)</span><br><span class="line">&#123;</span><br><span class="line">System.err.println(&quot;发生异常：&quot;+e);</span><br><span class="line">&#125; finally</span><br><span class="line">&#123;//关闭资源</span><br><span class="line">rest.close();</span><br><span class="line">stmt.close();</span><br><span class="line">conn.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关闭资源放在finally中</p><p>需引入mysql-connector-java-***.jar，如果没有使用maven可在<a href="https://cdn.mysql.com//Downloads/Connector-J/mysql-connector-java-5.1.47.zip">官网下载</a>或 <a href="https://pan.baidu.com/s/1_xQ_KfLhJ7skTJDfK5V8vg#list/path=%2Fjava%2Fmysql&amp;parentPath=%2Fjava">我的网盘</a></p><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/033.jpg" alt="QQ图片20180919200826.jpg"></a>;)</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java代码的优化</title>
      <link href="/2018/Java%E4%BB%A3%E7%A0%81%E7%9A%84%E4%BC%98%E5%8C%96.html"/>
      <url>/2018/Java%E4%BB%A3%E7%A0%81%E7%9A%84%E4%BC%98%E5%8C%96.html</url>
      
        <content type="html"><![CDATA[<p>做java也很久了，自己也积累了一些代码优化方面的心得，一个好的代码是体现程序员水平的最直观体现，下面来看一下代码方面比较常见的优化点<br>（本文在书写过程中也参考了一些其他文章，在这里就不一一赘述，内容也比较浅显，忘大神轻喷，如有错误的地方，还请在评论中指出来，我会一一改正）</p><h2 id="1-减少对变量的重复计算–》for循环的优化"><a href="#1-减少对变量的重复计算–》for循环的优化" class="headerlink" title="1.减少对变量的重复计算–》for循环的优化"></a>1.减少对变量的重复计算–》for循环的优化</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> for (int i = 0; i &lt; args.length; i++)   </span><br><span class="line">&#123;   </span><br><span class="line"></span><br><span class="line">&#125;   </span><br></pre></td></tr></table></figure><p> 更改为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for (int i = 0,index=args.length; i &lt; index; i++)    </span><br><span class="line">&#123;  </span><br><span class="line">    </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p> 原理：每次在i++的时候都会重新计算一次args.length,优化之后只会计算一次  </p><p>当然这个也是相对于args很大时，当args不大时，其实效率也差不多，但是我们养成个好习惯总是好的。而且它可以直接修改for循环的模版实现，比较方便 </p><p> 修改eclipse的模版：Preferences-&gt;java-&gt;Editor-&gt;Templates找到for修改为上面的内容 </p><h2 id="2-底层使用可变数组的数据结构尽量指定长度"><a href="#2-底层使用可变数组的数据结构尽量指定长度" class="headerlink" title="2.底层使用可变数组的数据结构尽量指定长度"></a>2.底层使用可变数组的数据结构尽量指定长度</h2><p>例如最常用的ArrayList,HashMap </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List list = new ArrayList&lt;&gt;(10);  </span><br><span class="line"> </span><br><span class="line">Map map = new HashMap&lt;&gt;(10); </span><br></pre></td></tr></table></figure><p>原理：可变数组都有一个扩容政策，当数据量超过它的加载因子时，就会执行扩容操作<br>当指定长度时，只有在超过指定的长度时，才会执行扩容操作，所以我们使用的时候应尽量预估它的大小，尽量指定大小</p><h2 id="3-String类尽量使用StringBuffer、StringBuilder"><a href="#3-String类尽量使用StringBuffer、StringBuilder" class="headerlink" title="3.String类尽量使用StringBuffer、StringBuilder"></a>3.String类尽量使用StringBuffer、StringBuilder</h2><p>这个涉及到jvm的内存分配，举个例子</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String str = “abc”;    String str2 = str + “ccd”;  </span><br></pre></td></tr></table></figure><p>jvm会在堆内存中开辟3个空间，1为“abc”,2为“ccd”,3为“abcccd”,最终str2指向3，1和2因为没有被引用，会在GC回收机制内被回收，而GC的开销是相当大的，所以应尽量避免<br>那么使用StringBuffer是什么情况呢</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">StringBuffer str =“abc”;    str.append(“ccd”);  </span><br></pre></td></tr></table></figure><p>jvm只会在堆空间中开辟一个空间“abc”,执行append时只会在“abc”的空间上+“ccd”<br>因此避免了GC的回收，也避免了内存的浪费<br>同样是为了获取到“abcccd”,但第二种方式明显更有效率<br>那怎么判断是使用StringBuffer还是StringBuilder的呢？<br>如果有线程安全的考虑使用StringBuffer，无则使用StringBuilder，线程安全也是一个比较高的开销</p><h2 id="4-使用equals-方法时常量尽量写前面"><a href="#4-使用equals-方法时常量尽量写前面" class="headerlink" title="4.使用equals()方法时常量尽量写前面"></a>4.使用equals()方法时常量尽量写前面</h2><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Brand brand = new Brand();           </span><br><span class="line">brand.setImgUrl(&quot;dddddddddd&quot;);          </span><br><span class="line">// brand.setName(&quot;HFanss&quot;);           </span><br><span class="line">String ss = &quot;HFanss&quot;;           </span><br><span class="line">if (brand.getName().equals(ss))          </span><br><span class="line">&#123;          </span><br><span class="line">System.err.println(&quot;相同&quot;);          </span><br><span class="line">&#125;else&#123;              </span><br><span class="line">System.err.println(&quot;不相同&quot;);          </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>抛出空指针异常，应修改为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if (ss.equals(brand.getName())</span><br></pre></td></tr></table></figure><p>这时候会输出   不相同。<br>原理：equals的源码解释 当比较对象（常量ss）为空时，抛出空指针异常，<br>而被比较对象（brand.getName()）为空时,则直接以 false结束</p><h2 id="5-尽量采用懒加载的策略，就是在需要的时候才创建"><a href="#5-尽量采用懒加载的策略，就是在需要的时候才创建" class="headerlink" title="5.尽量采用懒加载的策略，就是在需要的时候才创建"></a>5.尽量采用懒加载的策略，就是在需要的时候才创建</h2><p>如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String str = &quot;HFanss&quot;;             </span><br><span class="line">if (&quot;2&quot;.equals(status))                </span><br><span class="line">&#123;                    </span><br><span class="line">list.add(str);                </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>应该为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if (&quot;2&quot;.equals(status))            </span><br><span class="line">&#123;                 </span><br><span class="line">    String str = &quot;HFanss&quot;;                </span><br><span class="line">    list.add(str);            </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>原理：这个应该很容易看懂的，当if不成立时，创建的字符串就没用了，面临GC回收，应该有效避免，写在if内部</p><h2 id="6-在数值运算时，遇到偶数乘、除偶数倍时，尽量使用位移运算"><a href="#6-在数值运算时，遇到偶数乘、除偶数倍时，尽量使用位移运算" class="headerlink" title="6.在数值运算时，遇到偶数乘、除偶数倍时，尽量使用位移运算"></a>6.在数值运算时，遇到偶数乘、除偶数倍时，尽量使用位移运算</h2><p>如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int a = 2;    </span><br><span class="line">int b = 16;    </span><br><span class="line">System.err.println(a&lt;&lt;5);//等同于  222222   即232    System.err.println(b&gt;&gt;2);//等同于  16/2/2      即16/4  </span><br></pre></td></tr></table></figure><p>原理：即使使用  2*32、16/4的方式，最终在底层的算法还是位移，因为位移是基于2进制的算法，任何运算都会转换成二进制再运算，那我们直接使用二进制就会提升一部分效率</p><h2 id="7-对象引用的优化"><a href="#7-对象引用的优化" class="headerlink" title="7. 对象引用的优化"></a>7. 对象引用的优化</h2><p>如： </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">List list = new ArrayList&lt;&gt;();          </span><br><span class="line">for (int i = 0; i &lt; 1000; i++)          </span><br><span class="line">&#123;              </span><br><span class="line">    Object obj  = new Object();                 </span><br><span class="line">    list.add(obj);          </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>应该为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">List list = new ArrayList&lt;&gt;();          </span><br><span class="line">Object obj = null;          </span><br><span class="line">for (int i = 0; i &lt; 1000; i++)          </span><br><span class="line">&#123;              </span><br><span class="line">    obj  = new Object();                 </span><br><span class="line">    list.add(obj);          </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>原理：我们的目的只是list.add(obj)这一步，<br>前者obj引用会在栈空间中有1000个，但是最终只会用到1个，<br>后者obj引用在栈空间只有1个，提升效果不言而喻！</p><h2 id="8-慎重使用static静态"><a href="#8-慎重使用static静态" class="headerlink" title="8.慎重使用static静态"></a>8.慎重使用static静态</h2><p>使用静态后，编译时会直接创建，而且直到程序结束，一般只会用在常量，公共方法上，因为需要保证随时随地使用，基于这一需求，它不太使用于对象的创建上，会浪费内存</p><h2 id="9-常量的优化"><a href="#9-常量的优化" class="headerlink" title="9.常量的优化"></a>9.常量的优化</h2><p>相信这个大家应该都很熟悉，常量名大写 用以和变量区分，而且加上static final修饰，保证使用的速度和不被外界力量所改变</p><h2 id="10-将变量转换成字符串时尽量使用to-string-方法"><a href="#10-将变量转换成字符串时尽量使用to-string-方法" class="headerlink" title="10.将变量转换成字符串时尽量使用to.string()方法"></a>10.将变量转换成字符串时尽量使用to.string()方法</h2><p>一般有3种方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Integer s = 5;    </span><br><span class="line">s.toString();    </span><br><span class="line">String.valueOf(s);//源码显示调用了Integer.toString()方法，而且会在调用前做空判断    s+“”;//源码显示使用StringBuilder实现，先用append方法拼接，再用toString()方法对比而言，直接调用最底层的toString()方法无疑是效率最高的  </span><br></pre></td></tr></table></figure><p>接下来是一些体系上的优化，分为 结构优化，日志优化，可读性优化，异常优化<br>结构优化：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A. action层尽量不要做参数的校验和逻辑书写，它只负责请求的转发和响应，入参和出参</span><br><span class="line"></span><br><span class="line">B. Service层逻辑要清晰，尽量不要有if,for的出现，全部封装到公共方法去调用</span><br><span class="line"></span><br><span class="line">C. DAO层只提供持久层相关操作，如封装参数进map供持久层使用，尽量不要有逻辑在里面，所有的逻辑应都在service里完成</span><br></pre></td></tr></table></figure><p>日志优化：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A. 方法开始后、结束前书写日志</span><br><span class="line"></span><br><span class="line">B. 抓取异常时书写日志</span><br><span class="line"></span><br><span class="line">C. 特殊情况时书写。如需要提前return时</span><br></pre></td></tr></table></figure><p>可读性优化：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A. 类、方法必须要有注释</span><br><span class="line"></span><br><span class="line">B. 在一些比较大的逻辑前加上注释</span><br><span class="line"></span><br><span class="line">C. 一个完美的service层，应逻辑清晰，一行代码代表一个逻辑，通篇下来可读性非常强</span><br></pre></td></tr></table></figure><p>异常优化：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A. 异常应只用来进行错误处理，而不是逻辑处理（异常也是高开销的操作）</span><br><span class="line"></span><br><span class="line">B. 善用多种异常，但是在service层应只有一个 try cath来抓取多个异常，并分别处理</span><br><span class="line"></span><br><span class="line">C. 异常理应在service层全部处理完，不能再继续往上抛（理论上可以接续抛，但service本来就是处理逻辑的，尽量在本层处理完）</span><br></pre></td></tr></table></figure><p>以上是代码优化方面的一些常见点，当然这并不是全部，一个完美的代码是有很多优化点的，而且代码优化方面也不止这些，本人只是基于自己的经验给新来的同志一些借鉴之处。<br>除了代码优化，还有一些容器优化，项目优化，网络优化，缓存优化等等，编程是一个枯燥的过程，望共勉之！<br>最后给大家安利一个好用的插件–》阿里巴巴代码规范检测插件<br><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/031.jpg" alt="2018061017121995.png"></a>;)<br>红框内的就是执行检测后提示的信息，会提示不符合阿里巴巴规范的代码<br>安装使用教程 ： <a href="https://blog.csdn.net/lx_nhs/article/details/79099582">点我</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java代码优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jsp网站ico图标设置</title>
      <link href="/2018/jsp%E7%BD%91%E7%AB%99ico%E5%9B%BE%E6%A0%87%E8%AE%BE%E7%BD%AE.html"/>
      <url>/2018/jsp%E7%BD%91%E7%AB%99ico%E5%9B%BE%E6%A0%87%E8%AE%BE%E7%BD%AE.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>学习记录：小技巧</p><p>web项目中设置ico图标</p></blockquote><blockquote><p>ico图标放在webapp下</p></blockquote><p>在jsp页面中引入（ps:每个jsp都要引入,最好放在header或者footer既头部或尾部页面中，可以做到一处引用，多处使用）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--  网站图标 --&gt;&lt;link rel=&quot;shortcut icon&quot; href=&quot;../static/img/favicon.ico&quot;&gt;</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/029.jpg" alt="QQ图片20181024210453.jpg"></a>;)</p><p>各位可根据目录结构和引入地址适当更改</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java利用构造函数对实体类的属性进行初始化</title>
      <link href="/2018/%E5%88%A9%E7%94%A8%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%AF%B9%E5%AE%9E%E4%BD%93%E7%B1%BB%E7%9A%84%E5%B1%9E%E6%80%A7%E8%BF%9B%E8%A1%8C%E5%88%9D%E5%A7%8B%E5%8C%96.html"/>
      <url>/2018/%E5%88%A9%E7%94%A8%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%AF%B9%E5%AE%9E%E4%BD%93%E7%B1%BB%E7%9A%84%E5%B1%9E%E6%80%A7%E8%BF%9B%E8%A1%8C%E5%88%9D%E5%A7%8B%E5%8C%96.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>利用构造函数对实体类的属性进行初始化</p><p>无参构造函数设置默认值</p></blockquote><p>在java代码书写中经常能碰到空指针异常，一般我们会去抓取异常，但是对实体类设置默认值也是一种简便的解决方法</p><p>设置默认值一般有两种方法：</p><ul><li>直接属性等于默认值</li><li>通过构造方法设置</li></ul><blockquote><p>第一种方法：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">private Long id;  private String name=&quot;&quot;;  private String note=&quot;&quot;;  private Date date=new Date();  ptivate String time = &quot;&quot;;  </span><br></pre></td></tr></table></figure><p>直接赋值，最简单的写法，但是并没有在java代码书写规范中，而且ali出的规范也不建议这样写，所以直接舍去</p><blockquote><p>第二种方法：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">private Long id;  private String name;  private String note;  private Date date;  private String time;  public Test001VO() &#123;      super();      this.name=&quot;&quot;;      this.note=&quot;&quot;;      this.date= new Date();      this.time=&quot;&quot;;  &#125;  </span><br></pre></td></tr></table></figure><p>通过无参构造函数对实体类赋值，方便快捷，而且自由度更高，更可以在构造函数中写一些代码，比如对时间的格式化。</p><blockquote><p>无参构造函数的快捷键：</p></blockquote><h4 id="shift-alt-s-gt-Generate-Constructors-from-Superclass…"><a href="#shift-alt-s-gt-Generate-Constructors-from-Superclass…" class="headerlink" title="shift+alt+s   -&gt;Generate Constructors from  Superclass…"></a>shift+alt+s   -&gt;Generate Constructors from  Superclass…</h4>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>500小时学习计划</title>
      <link href="/2018/500%E5%B0%8F%E6%97%B6%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92.html"/>
      <url>/2018/500%E5%B0%8F%E6%97%B6%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>脑子是个好东西</p><p>自制力是管好脑子的唯一基础</p></blockquote><p>一直都有想对自己的学习时间做一些规划，但是一直都没有去执行，今天抽出时间来对个人的学习时间做一个计划，希望在接下来的日子中养成学习的好习惯</p><hr><p><code>在没有这个想法之前，一直都是脑子一热开始学习了，脑子一冷又不学了，对个人的成长其实非常不好。良好的学习习惯对自身的提升至关重要！</code></p><p><code>总结了个人的上班时间和对业余时间的安排，暂提出了  500小时/年的学习规划（最开始想的是1年1000小时，仔细一考量觉得有可能完不成，到时候对士气的打击很严重，就定500吧）</code></p><table><thead><tr><th>年</th><th>1</th><th>500h</th></tr></thead><tbody><tr><td>月</td><td>12</td><td>42h</td></tr><tr><td>周</td><td>52</td><td>10h</td></tr><tr><td>日</td><td>365</td><td>1.5h</td></tr></tbody></table><p><code>从表中看出来，500H的学习时间，分摊到每天来说只有1.5H,完全有能力，甚至可以超出（稳妥点）</code></p><p><code>工作日因为可能会加班，调至1H，剩余分摊至周六周日，那么最后的分配如下：</code></p><p><code>工作日：1H</code></p><p><code>非工作日：2.5H</code></p><p><code>这个时间点的安排还是完全有能力实现的，关键还是在于坚持，为此，做了一个简单打卡表，每天学习完后打卡</code></p><p>···emmmm</p><p><code>之前做了一个打卡表，但是发现有点想太多了，并不是每天都有时间开自己的电脑，工作一忙起来的时候，家里的电脑真的开不了，而工作闲的时候，可能在上班时间就把学习时间执行过了，所有还是把这个打卡表去掉，时间上来 按照一周10H的时间来计划，工作忙的时候可以将时间转移、累积，闲的时候就可以补回来，反正总时数不能少，这样自由度更高些！</code></p><p>关键还是看自制力，希望大家都能有所进步，博主的学习就以博客文章为参照了，学习过的东西，会固定周期总结成博文分享出来，也是对自己学习成果的一种记录！共勉！</p><blockquote><p>希望在看这篇博文的你能有一些对学习时间上的启发</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 点滴生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习计划 </tag>
            
            <tag> 年度计划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>码云+hexo搭建个性博客</title>
      <link href="/2018/%E7%A0%81%E4%BA%91+hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E6%80%A7%E5%8D%9A%E5%AE%A2.html"/>
      <url>/2018/%E7%A0%81%E4%BA%91+hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E6%80%A7%E5%8D%9A%E5%AE%A2.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>码云pages+hexo搭建个性博客</p><p>非常详细的图文教程</p></blockquote><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><h2 id="码云pages"><a href="#码云pages" class="headerlink" title="码云pages"></a>码云pages</h2><ul><li>码云pages是一个静态网站托管地方,再加上码云本来就是个代码托管的地方,集成pages后,可以很方便的部署你的代码</li></ul><h2 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h2><ul><li><p><a href="https://hexo.io/zh-cn/" title="官网">Hexo</a>是一个快速, 简洁且高效的博客框架. 让上百个页面在几秒内瞬间完成渲染. 具有强大的插件整合系统.</p></li><li><p>其实最早出现是github+hexo的整合,但是本人第一个接触的代码托管平台就是码云,而且还是国产的,相比于github访问速度要提高不少,另外github服务器老是不稳定,所以码云有了pages功能后,就直接在这上面做了,其实部署在github上也是可以的！</p></li></ul><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><ul><li>利用 马克飞象生成博客的md文件,利用Hexo把代码生成静态页面,再一键部署到码云上,开启pages后就实现了博客的雏形,当然,想要做的更好还可以继续优化</li></ul><h1 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h1><h2 id="安装node-git"><a href="#安装node-git" class="headerlink" title="安装node/git"></a>安装node/git</h2><ul><li><p>安装<a href="https://nodejs.org/en/" title="node下载地址">node.js</a></p></li><li><p>安装<a href="http://www.runoob.com/git/git-install-setup.html" title="git下载地址">git</a></p></li></ul><p>cmd输入以下指令 查看是否安装成功,git的环境环境变量跟JDK一样配置,node版本一定要大于6.9<br><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/020.jpg"></p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>利用 npm 命令即可安装。在桌面任意位置点击鼠标右键,选择Git Base/Git Base Here</p><h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><ul><li>npm install -g hexo</li></ul><p>注意：-g是指全局安装hexo。</p><p>在任意位置创建一个hexo文件夹。进去文件夹  鼠标右键  选择Git Base/Git Base Here</p><p>输入以下指令Hexo 即会自动在目标文件夹建立网站所需要的所有文件。</p><ul><li>hexo init</li></ul><p>刷新下文件夹 ,会有以下的目录<br><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/062.jpg"><br><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/063.jpg"></p><p>红框内的没有也无所谓,后续会生成的</p><p>继续执行以下指令 npm install（安装依赖包）</p><p>hexo generate（构建,这时候会有红框内的文件夹了）</p><h2 id="本地启动"><a href="#本地启动" class="headerlink" title="本地启动"></a>本地启动</h2><ul><li>hexo server<br>（启动服务,关闭服务是ctrl+c）</li></ul><p>启动后   输入路径localhost:4000到游览器即可看到效果了,类似这样的网站<br><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/064.jpg"></p><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>这个主题只是官方默认的主题,当然可以自己修改的,但是官方也提供一些网友自己制作的主题,可以直接套用<br>网址：<a href="https://hexo.io/themes/">https://hexo.io/themes/</a><br><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/065.jpg"><br>黄框内可以点击预览,选择一个自己喜欢的后,点击左下方红框后进入到github中<br><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/066.jpg"><br>选择红框内点击下载,下载下来是一个zip包,把里面的东西解压至hexo/themes中<br><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/067.jpg"><br>复制这个文件夹名字。再返回上一级,打开_config.yml,<br>将里面theme 对应的值改为复制的名字<br><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/068.jpg"><br>冒号后面要有个空格,而且是英文下的空格,不然会有错误<br>修改后保存,再在hexo内打开  git bash,执行以下指令</p><ul><li><p>hexo generate</p></li><li><p>hexo server</p></li></ul><p>现在刷新下4000的页面,就会有新的主题出现了</p><p>Hexo中_config.yml 文件的其他配置,官方的文档： <a href="https://hexo.io/zh-cn/docs/configuration.html">https://hexo.io/zh-cn/docs/configuration.html</a></p><h2 id="编写博文"><a href="#编写博文" class="headerlink" title="编写博文"></a>编写博文</h2><p>咱直接用最容易上手的,马克飞象 链接：<a href="https://maxiang.io/,下载客户端">https://maxiang.io/,下载客户端</a></p><p>在编辑器里面写好文章后,另存为MarkDown文件,</p><p>在这里我说一下,不用工具也可以的,你用txt也可以的,当然要加上下面的开头以便让hexo识别,再存为.md文件就可以</p><p>另外开发人员可以在页面写代码的。md支持html语法 ,总归不管什么编辑器,只要生成的是md文件就可以了</p><p>博客内部开头要加</p><p>title: httpclent调用webservice   #文章标题</p><p>date: #文章日期格式：2018-05-30 15:20:36</p><p>tags: #文章标签</p><p>categories: #文章分类</p><hr><p>冒号后面要有一个空格,categories后空一行,要有3个 - ,用来和文章内容区分<br><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/069.jpg"></p><p>编辑好后点击人头的标志。<br><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/070.jpg"></p><p>选择markdown保存,保存下来是一个zip压缩包。内部是md文件,</p><p>将解压的.md文件放入hexo文件夹下的source 目录下的 _posts 文件夹中,可以看到里面有个hello-world.md 文件,这是默认的文章。</p><p>现在  在git bash中关掉服务,再hexo server就可以看到刚才的文章了</p><h2 id="部署到码云"><a href="#部署到码云" class="headerlink" title="部署到码云"></a>部署到码云</h2><p>注册什么的就不必多说了。很简单都是中文,新建一个项目<br><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/071.jpg"><br> <img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/072.jpg"></p><p>复制https的地址</p><p>在git bash内执行以下指令</p><ul><li>npm install hexo-deployer-git –save</li></ul><p>这一步是使用hexo-deployer-git插件将代码推送到码云（现在只是安装）</p><p>再次打开hexo根目录的_config.yml 文件,修改deploy 的值</p><p>修改前：<br> <img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/073.jpg"><br>修改后<br> <img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/074.jpg"></p><p>冒号后面必须要有个空格</p><p>Repository就是刚才复制的地址</p><p>OK后 在git bash中执行 hexo deploy 将代码部署至码云</p><p>随后会出现2个对话框,username 输入码云帐号,password输入码云密码</p><p>OK后点击码云中刚才新建的项目<br> <img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/075.jpg"></p><p>在黑框内可以看到刚才提交的代码,时间基本都是刚刚</p><p>然后点击服务,红框,点击pages<br> <img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/076.jpg"><br>  <img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/077.jpg"></p><p>分支不用改,默认就行,点击启动服务<br>  <img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/078.jpg"><br>点击地址就是外网可以访问的博客了</p><p>OK,基本的框架好了。在编写博客的时候,只要重复第四步就可以了</p><p>然后推送到码云上,再重新部署下,它会自动归档</p><p>hexo命令：</p><ul><li><p>hexo clean   ##清理</p></li><li><p>hexo g          ##构建、编译</p></li><li><p>hexo s          ##启动服务</p></li><li><p>hexo d          ##上传至服务器</p></li></ul><h1 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h1><p>Cname据说不得行,所以我直接用了转发,github可以自定义域名,但是github访问速度很慢<br>点击链接查看转发<a href="https://blog.csdn.net/q2158798/article/details/79801226">https://blog.csdn.net/q2158798/article/details/79801226</a></p><p>放上我刚做的     <a href="https://iyohei.gitee.io" title="演示地址">iyohei.gitee.io</a></p><h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><ul><li><p>出现错误的时候,看下到第几步,把这一步删了重新装,检查下命令代码有没有问题</p></li><li><p>Node.Js版本一定要大于6.9否则构建hexo时会出现以下错误,hexo默认支持的版本是6.9以上<br><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/079.jpg"></p></li><li><p>主题有些也有过时的,有时候下载下来的主题不会生效,网站是一大串代码（需要去看hexo主题官网预览页面的博客,肯定会有相关的配置介绍,这些可以说是DIY的了）,当然你也可以再换一个主题</p></li><li><p>关于博客内图片问题,建议使用外链,本地图片部署到码云上不会显示的,外链推荐使用  图床,或者腾讯云COS,<a href="sm.ms" title="免费图床">SM.MS</a>,注册个帐号可以免费,不限流量上传图片(我用了CSDN的图片地址,在手机上图片不会显示)</p></li><li><p>关于主题优化问题,一切东西都可以自定义,修改成自己的名字啊,图标啊,什么的都是可以的,还可以集成站长的一些工具,如访问统计,天气之类的,还有绑定域名啊。感兴趣的可以先百度,有时间我会整理一下再发出来！</p></li><li><p>另外教程不易多看,每个人的方法都有不一样的地方,建议一篇看到底</p></li><li><p>有问题请在下方评论区留言！</p></li><li><p>PS:重要提醒-gitee目前已关闭pages服务，恢复时间暂时不确定，请自行更换github,gitlab，coding等其他类似网站</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 码云+hexo </tag>
            
            <tag> gitee+hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客常用插件及教程</title>
      <link href="/2018/hexo%E5%8D%9A%E5%AE%A2%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6%E5%8F%8A%E6%95%99%E7%A8%8B.html"/>
      <url>/2018/hexo%E5%8D%9A%E5%AE%A2%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6%E5%8F%8A%E6%95%99%E7%A8%8B.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>为大家总结下hexo常用的插件与教程</p><p>合理的使用插件能够提高hexo的效率</p></blockquote><hr><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">功能</th><th style="text-align:center">文档</th></tr></thead><tbody><tr><td style="text-align:center">npm install hexo-generator-index-pin-top –save<br />npm uninstall hexo-generator-index –save</td><td style="text-align:center">文章置顶插件</td><td style="text-align:center"><a href="https://blog.csdn.net/qwerty200696/article/details/79010629">点我</a></td></tr><tr><td style="text-align:center">npm i –save hexo-wordcount</td><td style="text-align:center">文章字数+阅读时长统计</td><td style="text-align:center"><a href="https://blog.csdn.net/ganzhilin520/article/details/79048036">点我</a></td></tr><tr><td style="text-align:center">npm install hexo-baidu-url-submit –save</td><td style="text-align:center">百度链接主动推送</td><td style="text-align:center"><a href="https://hui-wang.info/2016/10/23/Hexo%E6%8F%92%E4%BB%B6%E4%B9%8B%E7%99%BE%E5%BA%A6%E4%B8%BB%E5%8A%A8%E6%8F%90%E4%BA%A4%E9%93%BE%E6%8E%A5/">点我</a></td></tr><tr><td style="text-align:center">npm install hexo-deployer-ftpsync –save</td><td style="text-align:center">hexo上传至FTP服务器</td><td style="text-align:center"><a href="https://hexo.io/zh-cn/docs/deployment.html#FTPSync">点我</a></td></tr><tr><td style="text-align:center">npm install hexo-deployer-cos –save</td><td style="text-align:center">hexo上传至腾讯云COS</td><td style="text-align:center"><a href="https://github.com/sdlzhd/hexo-deployer-cos#user-content-options">点我</a></td></tr><tr><td style="text-align:center">npm install hexo-deployer-aliyun –save</td><td style="text-align:center">hexo上传至阿里云</td><td style="text-align:center"><a href="https://github.com/yedaodao/hexo-deployer-aliyun">点我</a></td></tr><tr><td style="text-align:center">npm install –save hexo-admin</td><td style="text-align:center">hexo管理插件</td><td style="text-align:center"><a href="https://github.com/jaredly/hexo-admin">点我</a></td></tr><tr><td style="text-align:center">hexo-blog-encrypt(请看文档)</td><td style="text-align:center">hexo文章加密码</td><td style="text-align:center"><a href="https://github.com/MikeCoder/hexo-blog-encrypt/blob/master/ReadMe.zh.md">点我</a></td></tr><tr><td style="text-align:center">卜算子ip计数统计</td><td style="text-align:center">IP计数统计</td><td style="text-align:center"><a href="https://www.jianshu.com/p/8a8f880f40c0">点我</a></td></tr><tr><td style="text-align:center">npm install leancloud-storage –save</td><td style="text-align:center">Valine评论</td><td style="text-align:center"><a href="https://valine.js.org/quickstart.html#npm">点我</a></td></tr><tr><td style="text-align:center">Valine评论邮件通知</td><td style="text-align:center">Valine评论提醒</td><td style="text-align:center"><a href="http://www.zhaojun.im/hexo-valine-admin/">点我</a></td></tr></tbody></table><blockquote><p>有需要的却找不到的，或者有优化方面的问题，都可以在下方留言，博主都会帮你解答</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo插件 </tag>
            
            <tag> hexo博客 </tag>
            
            <tag> hexo教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maupassant主题优化、屠城hexo主题优化版</title>
      <link href="/2018/Maupassant%E4%B8%BB%E9%A2%98%E3%80%81%E5%B1%A0%E5%9F%8E%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96%E7%89%88.html"/>
      <url>/2018/Maupassant%E4%B8%BB%E9%A2%98%E3%80%81%E5%B1%A0%E5%9F%8E%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96%E7%89%88.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>基于屠城hexo主题优化版,个人自用版</p><p>优化部分显示效果，增加部分配置</p></blockquote><hr><h2 id="原版主题"><a href="#原版主题" class="headerlink" title="原版主题"></a>原版主题</h2><blockquote><p><a href="https://www.haomwei.com/technology/maupassant.html">https://www.haomwei.com/technology/maupassant.html</a></p></blockquote><h3 id="屠城hexo版"><a href="#屠城hexo版" class="headerlink" title="屠城hexo版"></a>屠城hexo版</h3><blockquote><p>github地址：</p><p><a href="https://github.com/tufu9441/maupassant-hexo">https://github.com/tufu9441/maupassant-hexo</a></p></blockquote><blockquote><p>相关配置介绍：</p><p><a href="https://www.haomwei.com/technology/maupassant-hexo.html">https://www.haomwei.com/technology/maupassant-hexo.html</a></p></blockquote><blockquote><p>效果地址：</p><p><a href="https://www.haomwei.com/">https://www.haomwei.com/</a></p></blockquote><h3 id="本优化版"><a href="#本优化版" class="headerlink" title="本优化版"></a>本优化版</h3><blockquote><p>github地址：</p><p><a href="https://github.com/iyohei/maupassant-hexo-hfanss">https://github.com/iyohei/maupassant-hexo-hfanss</a></p></blockquote><blockquote><p>相关配置介绍：</p><p><a href="https://hfanss.com/2018/Maupassant%E4%B8%BB%E9%A2%98%E3%80%81%E5%B1%A0%E5%9F%8E%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96%E7%89%88.html">https://www.hfanss.com/2018/Maupassant主题优化、屠城主题优化版.html</a></p></blockquote><blockquote><p>效果地址：</p><p><a href="https://www.hfanss.com/">https://www.hfanss.com/</a></p></blockquote><hr><h2 id="现版主题"><a href="#现版主题" class="headerlink" title="现版主题"></a>现版主题</h2><h3 id="主要优化点"><a href="#主要优化点" class="headerlink" title="主要优化点"></a>主要优化点</h3><ul><li>增加强制https 开关</li><li>归档页集成分类、标签、全部文章</li><li>菜单栏置顶</li><li>侧边栏删除</li><li>增加底部栏</li><li>搜索移至顶部菜单栏</li><li>文章页添加统一版权声明</li><li>文章添加置顶、原创、转载标志</li><li>底部文件始终在浏览器最下方</li><li>底部文件集成 关于我、微信二维码、熊掌号、关于博主，关于本站，友情链接</li><li>底部文件集成备案号，百度云统计、github、码云、CSDN外链</li><li>分享使用bshare，集成更多分享</li><li>config.yml一些常用属性都做了中文注释</li><li>集成百度主动推送插件</li><li>优化整体布局</li><li>优化移动端菜单单独配置</li></ul><blockquote><p>图片效果</p></blockquote><p><a href="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/012.jpg"><img src="https://gcore.jsdelivr.net/gh/hfanss2/githubpic@master/blog/012.jpg" alt="img"></a></p><h3 id="增加配置开关"><a href="#增加配置开关" class="headerlink" title="增加配置开关"></a>增加配置开关</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line">valine: ## https://valine.js.org        评论系统</span><br><span class="line">  enable: false ## 是否开启valine评论系统</span><br><span class="line">  appid:  ## LeanCloud App ID, pRBBL2JR4N7kLEGojrF0MsSs-gzGzoHsz</span><br><span class="line">  appkey:  ##LeanCloud App Key, e.g. tjczHpDfhjYDSYddzymYK1JJ</span><br><span class="line">  notify: false ## Mail notifier, see https://github.com/xCss/Valine/wiki/Valine-评论系统中的邮件提醒设置</span><br><span class="line">  verify: true ## 启用评论校验功能</span><br><span class="line">  placeholder: 　 ## 留言板预设内容</span><br><span class="line">  visitor: true ## 1.2版本新增功能阅读统计，具体使用参考https://valine.js.org/visitor.html</span><br><span class="line">  avatar: &#x27;monsterid&#x27; ## 默认头像 参考 https://valine.js.org/avatar.html</span><br><span class="line">  pageSize: 10 ## 每页显示评论条数</span><br><span class="line">  guest_info: nick,mail,link ## 昵称，邮箱，网站</span><br><span class="line">## 百度统计ID</span><br><span class="line">baidu_analytics:  ## 百度统计ID id, e.g. 8006843039519956000</span><br><span class="line">## 图片灯箱开关</span><br><span class="line">fancybox: true ## 是否启用Fancybox图片灯箱效果,建议开启（效果为点击图片既放大）</span><br><span class="line">##版权声明，加在每篇文章下方</span><br><span class="line">banquan: </span><br><span class="line">  enable: true ##是否开启</span><br><span class="line">  name: 幻凡ss</span><br><span class="line">  note: 本文所有权归博主所有，转载请注明署名、出处！Thanks ##版权信息</span><br><span class="line">## 强制https访问开关</span><br><span class="line">https: true ## 是否开启强制https（不影响本地调试）,本开关说明：https网站能正常访问开启才有效，如www.baidu.com跳转到http://www.baidu.com，不自动跳到https开头的网址，而且https://www.baidu.com能正常访问才行</span><br><span class="line">## 文章字数统计开关</span><br><span class="line">wordcount: true ##文章字数统计</span><br><span class="line">readtime: false ##文章阅读时长统计</span><br><span class="line">## daovice在线聊天相关 官网：http://www.daovoice.io/</span><br><span class="line">daovoice: false ## 页面右下角在线聊天</span><br><span class="line">daovoice_app_id:  ## daovice  ID 如：22c081c3</span><br><span class="line">##搜索相关,只能开启一项</span><br><span class="line">self_search: true ## 页面jquery搜索，需安装插件,开启此搜索后，博客根目录的  url属性必须带有http://和https://</span><br><span class="line">baidu_search: false ##百度搜索.开启百度搜索后，博客根目录的  url属性不能带有http://和https://,否则会导致搜索不到东西（原理：基于你的网站百度收录结果搜索，如果没有被百度收录，就不会有结果）</span><br><span class="line">## 文章目录开关</span><br><span class="line">toc_number: true ## 文章目录开关 使用方法：#一级目录  ##二级目录  。。。 以此类推</span><br><span class="line">## 文章分享开关  使用bshare.js  官网：http://www.bshare.cn/、注册站长并输入网址  需替换post.pug  55行script</span><br><span class="line">shareto: true ## 文章分享开关</span><br><span class="line">## 文章捐赠按钮。赞赏按钮</span><br><span class="line">donate:</span><br><span class="line">  enable: false ## If you want to show the donate button after each post, please set the value to true and fill the following items according to your need. You can also enable donate button in a page by adding a &quot;donate: true&quot; item to the front-matter.</span><br><span class="line">  github: https://github.com/hfanss ## GitHub URL, e.g. https://github.com/Kaiyuan/donate-page</span><br><span class="line">  alipay_qr: /img/AL.png ## Path of Alipay QRcode image, e.g. /img/AliPayQR.png</span><br><span class="line">  wechat_qr: /img/QQ.png## Path of Wechat QRcode image, e.g. /img/WeChatQR.png</span><br><span class="line">  btc_qr: ## Path of Bitcoin QRcode image, e.g. /img/BTCQR.png</span><br><span class="line">  btc_key: ## Bitcoin key, e.g. 1KuK5eK2BLsqpsFVXXSBG5wbSAwZVadt6L</span><br><span class="line">  paypal_url: ## Paypal URL, e.g. https://paypal.me/tufu9441</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 微信相关信息</span><br><span class="line">weixin:</span><br><span class="line">    enable: true</span><br><span class="line">    name: hyaini ##微信号码</span><br><span class="line">    url:  https://huanfan-1252958858.cos.ap-shanghai.myqcloud.com/pic/302701117226241178.jpg ##微信个人二维码url       </span><br><span class="line">## 微博相关信息</span><br><span class="line">weibo:</span><br><span class="line">    enable: true</span><br><span class="line">    name: 幻凡ss ##微博名字</span><br><span class="line">    url: https://weibo.com/0377k  ##微博外链  如：https://weibo.com/0377k</span><br><span class="line">## QQ相关信息</span><br><span class="line">qq:</span><br><span class="line">    enable: true</span><br><span class="line">    name: 2158798 ##QQ号码</span><br><span class="line">    url: https://wpa.qq.com/msgrd?v=3&amp;uin=2158798&amp;site=qq&amp;menu=yes ##网页QQ聊天的外链  如  https://wpa.qq.com/msgrd?v=3&amp;uin=2158798&amp;site=qq&amp;menu=yes </span><br><span class="line">## email相关信息</span><br><span class="line">email:</span><br><span class="line">    enable: true</span><br><span class="line">    name: hfans@foxmail.com  ##邮箱地址</span><br><span class="line">    url: http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&amp;email=8JiWkZ6DsJafiJ2RmZzek5_d ##邮箱外链,邮我  如：http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&amp;email=8JiWkZ6DsJafiJ2RmZzek5_d</span><br><span class="line">## 联系地址相关信息</span><br><span class="line">address:</span><br><span class="line">    enable: true</span><br><span class="line">    name: Pudong New Area, Shanghai, China ##地理位置的英文（请不要太过具体）</span><br><span class="line">    url:  ##公司在百度地图上的位置的网址</span><br><span class="line">## 百度熊掌号相关信息</span><br><span class="line">xzHao:</span><br><span class="line">    enable: true</span><br><span class="line">    note: 专注Java • 分享生活 • 记录人生 ##熊掌号描述</span><br><span class="line">    url: https://author.baidu.com/home/1603347506741536?from=dusite_artdetailh5 ##熊掌号url</span><br><span class="line">## 备案相关信息</span><br><span class="line">beian:</span><br><span class="line">    enable: false</span><br><span class="line">    note:  ##备案号</span><br><span class="line">## 百度统计相关信息</span><br><span class="line">baidu:</span><br><span class="line">    enable: true</span><br><span class="line">    url: https://tongji.baidu.com/web/25553450/overview/index?siteId=11976031 ##百度统计的网址，点开百度云图标后登陆可看到网站统计\</span><br><span class="line">## github相关信息</span><br><span class="line">github:</span><br><span class="line">    enable: true</span><br><span class="line">    url: https://github.com/hfanss/ ##github外链 如 ：https://github.com/hfanss/</span><br><span class="line">## 码云相关信息</span><br><span class="line">gitee:</span><br><span class="line">    enable: true</span><br><span class="line">    url: https://gitee.com/iyohei ##码云外链 如 ：https://gitee.com/iyohei</span><br><span class="line">## CSDN相关信息</span><br><span class="line">csdn:</span><br><span class="line">    enable: true</span><br><span class="line">    url: https://blog.csdn.net/q2158798 ##CSDN博客外链 如：https://blog.csdn.net/q2158798</span><br><span class="line">## 底部显示设置</span><br><span class="line">footersenable: true   ##是否开启底部菜单栏</span><br><span class="line">footers: </span><br><span class="line">  - gywo    ##关于我</span><br><span class="line">  - gzhao   ##公众号或微信二维码</span><br><span class="line">  - xzhao   ##百度熊掌号相关信息</span><br><span class="line">  - links   ##友情链接/关于本站/关于博主(简历)</span><br><span class="line">## PC菜单显示选项  </span><br><span class="line">menu:</span><br><span class="line">  - page: home</span><br><span class="line">    directory: .</span><br><span class="line">    icon: fa-home2</span><br><span class="line">  - page: archive ##显示名字，根据中英文兑换，也可直接写中文</span><br><span class="line">    directory: archives/   ##链接地址（source下的文件夹）</span><br><span class="line">    icon: fa-archive2   ##图标。在线图标，http://www.fontawesome.com.cn/faicons/，把名字贴这里即可</span><br><span class="line">  - page: music</span><br><span class="line">    directory: music/</span><br><span class="line">    icon: fa-user2</span><br><span class="line">  - page: tool</span><br><span class="line">    directory: tool/</span><br><span class="line">    icon: fa-user2 </span><br><span class="line">  - page: guestbook</span><br><span class="line">    directory: comment/</span><br><span class="line">    icon: fa-rss2</span><br><span class="line"></span><br><span class="line">## 移动端菜单显示选项  </span><br><span class="line">mobileMenu:</span><br><span class="line">  - page: home</span><br><span class="line">    directory: .</span><br><span class="line">    icon: fa-home2</span><br><span class="line">  - page: archive ##显示名字，根据中英文兑换，也可直接写中文</span><br><span class="line">    directory: archives/   ##链接地址（source下的文件夹）</span><br><span class="line">    icon: fa-archive2   ##图标。在线图标，http://www.fontawesome.com.cn/faicons/，把名字贴这里即可</span><br><span class="line">  - page: music</span><br><span class="line">    directory: music/</span><br><span class="line">    icon: fa-user2</span><br><span class="line">  - page: tool</span><br><span class="line">    directory: tool/</span><br><span class="line">    icon: fa-user2 </span><br><span class="line">  - page: guestbook</span><br><span class="line">    directory: comment/</span><br><span class="line">    icon: fa-rss2</span><br><span class="line">  - page: about</span><br><span class="line">    directory: about/</span><br><span class="line">    icon: fa-rss2</span><br><span class="line">  - page: site</span><br><span class="line">    directory: site/</span><br><span class="line">    icon: fa-rss2</span><br><span class="line">  - page: href</span><br><span class="line">    directory: href/</span><br><span class="line">    icon: fa-rss2</span><br><span class="line">## 网站地图   博主没用过，意义不大</span><br><span class="line">timeline:</span><br><span class="line">  - num: 1</span><br><span class="line">    word: 2014/06/12-Start</span><br><span class="line">  - num: 2</span><br><span class="line">    word: 2014/11/29-XXX</span><br><span class="line">  - num: 3</span><br><span class="line">    word: 2015/02/18-DDD</span><br><span class="line">  - num: 4</span><br><span class="line">    word: More</span><br><span class="line"># Static files。缓存目录</span><br><span class="line">js: js</span><br><span class="line">css: css</span><br><span class="line"></span><br><span class="line"># 主题版本，方便刷新</span><br><span class="line">version: 0.1.0</span><br></pre></td></tr></table></figure><p>开关的一些说明在配置文件中都有中文解释</p><h2 id="额外说明"><a href="#额外说明" class="headerlink" title="额外说明"></a>额外说明</h2><ul><li>评论只支持valine</li><li>搜索只支持self_search、baidu_search</li><li>网站统计只有百度统计</li><li>移动端默认不显示底部(关于我、熊掌号…)菜单</li></ul><hr><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h3><blockquote><p><a href="https://github.com/iyohei/maupassant-hexo-hfanss">https://github.com/iyohei/maupassant-hexo-hfanss</a><br>如下载不下来可从备份地址下载：<a href="https://gitee.com/iyohei/hfanss">点我</a></p></blockquote><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-deployer-git hexo-generator-archive hexo-generator-category hexo-generator-index-pin-top hexo-generator-search hexo-generator-tag hexo-helper-qrcode hexo-renderer-ejs hexo-renderer-marked hexo-renderer-pug hexo-renderer-sass hexo-renderer-stylus hexo-server hexo-tag-aplayer hexo-wordcount</span><br></pre></td></tr></table></figure><p>安装不成功可以通过 <a href="https://npm.taobao.org">淘宝镜像</a> 下载</p><h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">博客根目录下</span><br><span class="line">config.yml</span><br><span class="line">URL分类下</span><br><span class="line"> url: http://www.baidu.com ## 分享页的头网址，域名地址或iyohei.githug.io</span><br><span class="line"> permalink: :year/:title.html ## 更改文章页的地址带有.html后缀</span><br><span class="line">博客根目录下 source文件夹下</span><br><span class="line"> 新建about文件夹--含一个index.md文件--最下方  关于博主页（内容自行书写）</span><br><span class="line"> 新建comment文件夹--含一个index.md文件--菜单栏  留言页（内容自行书写）</span><br><span class="line"> 新建href文件夹--含一个index.md文件--最下方  友情链接页（内容自行书写）</span><br><span class="line"> 新建music文件夹--含一个index.md文件--菜单栏  音乐页（内容自行书写）</span><br><span class="line"> 新建tool文件夹--含一个index.md文件--菜单栏    工具页（内容自行书写）</span><br><span class="line"> 粘贴一个favicon.ico的文件（网站图标）</span><br><span class="line"> 新建CNAME文件，无后缀（需要绑定域名的请在里面书写你的域名）、</span><br></pre></td></tr></table></figure><p>以上新建文件博主都集成在主题中，大家下载下来有两个文件夹，一个为主题，一个为source，复制其中的内容覆盖自己的source即可</p><hr><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><blockquote><p>文章页增添开关</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">top: true  ##开启文章置顶</span><br><span class="line">yuanchuang: true ##开启原创标签</span><br><span class="line">toc: true ##开启目录</span><br><span class="line">如果文章为转载，需要配置以下开关</span><br><span class="line">    zhzai: true ##开启转载标签</span><br><span class="line">    zhzaiName: 杨云召 ##原文作者</span><br><span class="line">    zhzaiUrl: https://blog.znmlr.cn/4cabcca.html ##原文链接</span><br></pre></td></tr></table></figure><p> zhzai(转载) &amp;&amp; yuanchuang(原创)只能开启一项</p><blockquote><p>非菜单页选中样式问题</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">新建的页面如果没在菜单栏显示需要在index.md中  文章最下方加入以下代码：（目的是保证菜单栏的首页为选中样式）</span><br><span class="line">&lt;script&gt;$(&quot;.header-02-3 a:first&quot;).addClass(&#x27;current&#x27;);&lt;/script&gt;</span><br><span class="line">效果：例如友情链接在菜单栏中没有，加入此行代码会默认选中首页这个样式</span><br></pre></td></tr></table></figure><blockquote><p>百度主动推送请阅读 <a href="https://hui-wang.info/2016/10/23/Hexo%E6%8F%92%E4%BB%B6%E4%B9%8B%E7%99%BE%E5%BA%A6%E4%B8%BB%E5%8A%A8%E6%8F%90%E4%BA%A4%E9%93%BE%E6%8E%A5/">说明文档</a></p></blockquote><h2 id="自行优化"><a href="#自行优化" class="headerlink" title="自行优化"></a>自行优化</h2><blockquote><p>附上几个重要的文件作用，方便大家自行优化：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">base.pug集成head部分模版+底部</span><br><span class="line">archive.pug归档页的模版</span><br><span class="line">page.pug自定义页面的模版</span><br><span class="line">post.pug文章页模版</span><br><span class="line">footer.pug尾部文件模版</span><br><span class="line">footer02.pug  底部菜单模版</span><br><span class="line">head.pug首页的模版（主要是通用JS的引用，如评论，计数器）</span><br><span class="line">_footer文件夹  底部菜单各模版</span><br><span class="line">search.pug搜索模版</span><br><span class="line">valine评论个性头像：https://cn.gravatar.com/全球头像分享网站-注册-设置头像,在valine评论中，填上注册时的邮箱就会显示头像</span><br></pre></td></tr></table></figure><blockquote><p>推荐插件：  <a href="https://hfanss.com/2018/hexo%E5%8D%9A%E5%AE%A2%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6%E5%8F%8A%E6%95%99%E7%A8%8B.html">hexo博客常用插件及教程</a></p></blockquote><blockquote><p>详细diy</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">底部菜单栏diy:</span><br><span class="line">    _footer文件夹</span><br><span class="line">    添加:</span><br><span class="line">         在_footer文件夹中新建xxx.pug,写上内容</span><br><span class="line">         在config文件中的footer下 添加进去 -xxx  即可显示</span><br><span class="line">    修改:</span><br><span class="line">        gywo.pug##关于我</span><br><span class="line">        gzhao.pug   ##公众号或微信二维码</span><br><span class="line">        xzhao.pug  ##百度熊掌号相关信息</span><br><span class="line">        links.pug  ##友情链接/关于本站/关于博主(简历)</span><br><span class="line">友情链接:</span><br><span class="line">sources/href/index.md</span><br><span class="line">关于本站:</span><br><span class="line">sources/site/index.md</span><br><span class="line">关于博主:</span><br><span class="line">sources/about/index.md</span><br><span class="line">留言:</span><br><span class="line">sources/comment/index.md</span><br><span class="line">工具:</span><br><span class="line">sources/tool/index.md</span><br><span class="line">音乐:</span><br><span class="line">sources/music/index.md</span><br></pre></td></tr></table></figure><blockquote><p>原版主题的配置只要没跟本主题冲突，没有特别说明，都可以支持</p></blockquote><hr><p>如有本主题的相关优化问题，可在下方评论区留言<br>github有时候会抽风，提供码云备用地址：<a href="https://gitee.com/iyohei/hfanss">点我</a><br>另：如大家使用本主题，还请在下载主题页  右上角   star  一下，感谢！</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Maupassant主题优化 </tag>
            
            <tag> 屠城hexo主题优化版 </tag>
            
            <tag> hexo主题 </tag>
            
            <tag> hexo主题优化 </tag>
            
            <tag> hexo-maupassant </tag>
            
            <tag> 开源项目 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
